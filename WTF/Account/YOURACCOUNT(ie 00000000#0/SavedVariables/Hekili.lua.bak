
HekiliDB = {
	["namespaces"] = {
		["LibDualSpec-1.0"] = {
		},
	},
	["profileKeys"] = {
		["Mandalari - Dalaran"] = "Default",
		["Pandæxprêss - Dalaran"] = "Default",
		["Sæsha - Dalaran"] = "Default",
		["Hellomikko - Dalaran"] = "Default",
		["Madmerisa - Dalaran"] = "Default",
		["Kasplat - Dalaran"] = "Default",
		["Quançhi - Dalaran"] = "Default",
		["Simberdra - Stormrage"] = "Default",
		["Schematx - Stormrage"] = "Default",
		["Hellojenna - Dalaran"] = "Default",
	},
	["profiles"] = {
		["Hellomikko - Dalaran"] = {
			["runOnce"] = {
				["forceReloadClassDefaultOptions_20220306_265"] = true,
				["forceReloadClassDefaultOptions_20220306_267"] = true,
				["forceEnableAllClassesOnceDueToBug_20220225"] = true,
				["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
				["updateMaxRefreshToNewSpecOptions_20220222"] = true,
				["forceReloadAllDefaultPriorities_20220228"] = true,
				["forceReloadClassDefaultOptions_20220306_266"] = true,
				["resetAberrantPackageDates_20190728_1"] = true,
			},
			["specs"] = {
				[266] = {
					["settings"] = {
						["dcon_imps"] = 0,
					},
				},
				[267] = {
					["settings"] = {
						["default_pet"] = "summon_sayaad",
						["fixed_aoe_3_plus"] = false,
					},
				},
				[265] = {
					["settings"] = {
						["manage_ds_ticks"] = false,
					},
				},
			},
			["displays"] = {
				["Interrupts"] = {
					["rel"] = "CENTER",
					["y"] = -224.9999847412109,
				},
				["Cooldowns"] = {
					["rel"] = "CENTER",
				},
				["Primary"] = {
					["rel"] = "CENTER",
					["x"] = 5.925658702850342,
					["y"] = -193.0001068115234,
				},
				["AOE"] = {
					["rel"] = "CENTER",
					["x"] = 1.1851806640625,
					["y"] = -100.0740966796875,
				},
				["Defensives"] = {
					["rel"] = "CENTER",
					["y"] = -224.9999847412109,
				},
			},
			["packs"] = {
				["Demonology"] = {
					["source"] = "SimC",
					["builtIn"] = true,
					["date"] = 20220615,
					["spec"] = 266,
					["desc"] = "Demonology Warlock\nhttps://github.com/simulationcraft/simc/\nJune 11, 2022\n\nChanges:\n- Spell Lock.\n- Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n- Power Siphon allowed pre-combat to proc instant Demonbolt.\n- PvP talent interrupt.\n- Avoid SB->HoG spam when you're not about to summon a Tyrant.\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Try to avoid wasting Demonic Core stacks.\n- Try to make opener priority only work if we can actually open with a Tyrant.\n- Improve compatibility with M+ builds.",
					["lists"] = {
						["slow_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["cycle_targets"] = 1,
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 - ( 2 * gcd.max * variable.use_bolt_timings )",
								["action"] = "soulletting_ruby",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 + ( 2 * variable.use_bolt_timings )",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "variable.buff_sync_cd < ( target.distance / 5 ) + 12 + ( 2 * variable.use_bolt_timings )",
							}, -- [3]
						},
						["hp_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "sinful_gladiators_emblem",
								["action"] = "sinful_gladiators_emblem",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "sinful_aspirants_emblem",
								["action"] = "sinful_aspirants_emblem",
							}, -- [2]
						},
						["covenant_ability"] = {
							{
								["enabled"] = true,
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & pet.demonic_tyrant.active",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.grove_invigoration.enabled & ! runeforge.decaying_soul_satchel.enabled & ( variable.next_tyrant_cd < 20 || variable.next_tyrant_cd > 30 )",
								["action"] = "soul_rot",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! ( soulbind.field_of_blossoms.enabled || soulbind.grove_invigoration.enabled ) & ! runeforge.decaying_soul_satchel.enabled & ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 18",
								["action"] = "soul_rot",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.lead_by_example.enabled & ( pet.demonic_tyrant.active & soul_shard < 2 || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.kevins_oozeling.enabled & ( pet.demonic_tyrant.active || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( soulbind.forgeborne_reveries.enabled || ( soulbind.volatile_solvent.enabled & ! soulbind.kevins_oozeling.enabled ) ) & ! pet.demonic_tyrant.active",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & ( ! talent.power_siphon.enabled || cooldown.power_siphon.remains < action.decimating_bolt.execute_time ) & ! cooldown.summon_demonic_tyrant.up & ( pet.demonic_tyrant.remains < 8 || cooldown.summon_demonic_tyrant.remains_expected < 30 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent.down",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.combat_meditation.enabled & pet.demonic_tyrant.active",
								["action"] = "scouring_tithe",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! soulbind.combat_meditation.enabled",
								["action"] = "scouring_tithe",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "pet.demonic_tyrant.active & soul_shard = 0",
								["action"] = "impending_catastrophe",
							}, -- [11]
						},
						["tyrant_setup"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 15",
								["action"] = "nether_portal",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 17 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) & ( cooldown.call_dreadstalkers.remains < 17 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time + action.shadow_bolt.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time )",
								["action"] = "grimoire_felguard",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( variable.next_tyrant_cd < 15 - ( action.summon_demonic_tyrant.execute_time ) & ( cooldown.call_dreadstalkers.remains < 15 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time ) ) || ( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 40 )",
								["action"] = "summon_vilefiend",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 12 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time )",
								["action"] = "call_dreadstalkers",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > first_tyrant_time & ( pet.dreadstalker.active & pet.dreadstalker.remains > action.summon_demonic_tyrant.execute_time ) & ( ! talent.summon_vilefiend.enabled || pet.vilefiend.active ) & ( soul_shard = 0 || ( pet.dreadstalker.active & pet.dreadstalker.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( pet.vilefiend.active & pet.vilefiend.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( buff.grimoire_felguard.up & buff.grimoire_felguard.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) )",
								["action"] = "summon_demonic_tyrant",
							}, -- [5]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spell_lock",
							}, -- [1]
							{
								["action"] = "call_felhunter",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "axe_toss",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.summon_demonic_tyrant.remains_expected",
								["var_name"] = "next_tyrant_cd",
								["criteria"] = "! soulbind.field_of_blossoms.enabled || cooldown.summon_demonic_tyrant.remains_expected > cooldown.soul_rot.remains_expected",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.soul_rot.remains_expected",
								["var_name"] = "next_tyrant_cd",
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & cooldown.summon_demonic_tyrant.remains_expected < cooldown.soul_rot.remains_expected",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "variable.next_tyrant_cd",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & ! in_opener",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "12",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & ! pet.dreadstalker.active",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & buff.wild_imps.stack > 0 & ! talent.vilefiend.enabled",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & prev_gcd.1.hand_of_guldan & talent.vilefiend.enabled",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.decimating_bolt.remains_expected",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "variable.use_bolt_timings",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up & ( ! talent.power_siphon.enabled || buff.power_siphon.up ) )",
								["list_name"] = "ogcd",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 2 * gcd",
								["action"] = "implosion",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "toggle.cooldowns & time < first_tyrant_time",
								["list_name"] = "opener",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || soulbind.combat_meditation.enabled || covenant.necrolord",
								["list_name"] = "covenant_ability",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "( ! variable.use_bolt_timings & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time || soulbind.refined_palate.enabled & variable.next_tyrant_cd < 38 ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["action"] = "potion",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "tyrant_setup",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 9 ) || ( pet.demonic_tyrant.active & pet.demonic_tyrant.remains < 6 * gcd.max )",
								["action"] = "demonic_strength",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & cooldown.summon_demonic_tyrant.remains_expected > 22",
								["action"] = "call_dreadstalkers",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( variable.next_tyrant_cd > 20 - 5 * ! runeforge.wilfreds_sigil_of_superior_summoning.enabled )",
								["action"] = "call_dreadstalkers",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.tyrant.down & variable.next_tyrant_cd > 5",
								["action"] = "bilescourge_bombers",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 30",
								["action"] = "grimoire_felguard",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 28",
								["action"] = "summon_vilefiend",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 15",
								["action"] = "summon_demonic_tyrant",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard = 5",
								["action"] = "hand_of_guldan",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & runeforge.balespiders_burning_core.enabled & buff.balespiders_burning_core.remains < 5",
								["action"] = "shadow_bolt",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "doom",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 3 & ( pet.dreadstalker.active || pet.demonic_tyrant.active )",
								["action"] = "hand_of_guldan",
								["description"] = "If Dreadstalkers are already active, no need to save shards",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.nether_portal.up & cooldown.call_dreadstalkers.remains > 2 * gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.wild_imps.stack > 2 & pet.dreadstalker.remains > 0.5 + cast_time + action.summon_demonic_tyrant.cast_time & pet.dreadstalker.remains < 0.5 + cast_time + action.summon_demonic_tyrant.cast_time + ( 0 >? ( 3 - soul_shard ) ) * action.shadow_bolt.cast_time & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time - gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [35]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.venthyr",
								["list_name"] = "covenant_ability",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sacrificed_souls.enabled",
								["action"] = "soul_strike",
								["description"] = "Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & buff.wild_imps.stack > 1 & buff.demonic_core.stack < 3",
								["action"] = "power_siphon",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up & buff.shard_of_annihilation.stack < 3",
								["action"] = "power_siphon",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd > 20",
								["action"] = "demonbolt",
								["description"] = "Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd < 12",
								["action"] = "demonbolt",
								["description"] = "During Tyrant setup, spend Demonic Cores for Soul Shards",
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & ( buff.demonic_core.stack > 2 || talent.sacrificed_souls.enabled )",
								["action"] = "demonbolt",
							}, -- [42]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up",
								["action"] = "power_siphon",
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & soul_shard < 4 & ( ( 6 - soul_shard ) * action.shadow_bolt.execute_time > pet.dreadstalker.remains - action.hand_of_guldan.execute_time - action.demonbolt.execute_time ) & buff.demonic_core.stack >= 1",
								["action"] = "demonbolt",
							}, -- [44]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & active_enemies > 1",
								["action"] = "demonbolt",
							}, -- [45]
							{
								["action"] = "soul_strike",
								["enabled"] = true,
							}, -- [46]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant_ability",
							}, -- [47]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 3 & variable.next_tyrant_cd > 25 & ( talent.demonic_calling.enabled || cooldown.call_dreadstalkers.remains > ( ( 5 - soul_shard ) * action.shadow_bolt.execute_time ) + action.hand_of_guldan.execute_time )",
								["action"] = "hand_of_guldan",
								["description"] = "If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now",
							}, -- [48]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & time > first_tyrant_time",
								["action"] = "doom",
								["cycle_targets"] = 1,
							}, -- [49]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & buff.demonic_core.remains < 1 + gcd.max * buff.demonic_core.stack",
								["action"] = "demonbolt",
								["description"] = "Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.",
							}, -- [50]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [51]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive",
								["action"] = "fel_domination",
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.wild_imps.stack > 1 & buff.demonic_core.stack <= 2",
								["action"] = "power_siphon",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ( boss || action.demonbolt.cast = 0 )",
								["action"] = "demonbolt",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ! ( boss || action.demonbolt.cast = 0 )",
								["action"] = "shadow_bolt",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "runeforge.shard_of_annihilation.enabled & ( runeforge.balespiders_burning_core.enabled + talent.sacrificed_souls.enabled + talent.power_siphon.enabled > 1 )",
								["var_name"] = "use_bolt_timings",
							}, -- [10]
						},
						["opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.decaying_soul_satchel.enabled",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["action"] = "nether_portal",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "grimoire_felguard",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "summon_vilefiend",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & cooldown.call_dreadstalkers.up",
								["action"] = "shadow_bolt",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & soul_shard < 5 & buff.balespiders_burning_core.stack < 4",
								["action"] = "shadow_bolt",
							}, -- [6]
							{
								["action"] = "call_dreadstalkers",
								["enabled"] = true,
							}, -- [7]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["var_name"] = "use_buff_trinkets",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.demonic_tyrant.active",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "variable.buff_sync_cd < 22",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "variable.use_bolt_timings & pet.demonic_tyrant.active",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "variable.buff_sync_cd < 7",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "talent.demonic_consumption.enabled & variable.next_tyrant_cd < 20",
								["list_name"] = "hp_trinks",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Effects that travel slowly from the target require additional, separate handling",
								["list_name"] = "slow_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
								["criteria"] = "variable.use_buff_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t1.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t2.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "time > first_tyrant_time & variable.buff_sync_cd > 20",
								["list_name"] = "pure_damage_trinks",
							}, -- [12]
						},
						["pure_damage_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
								["criteria"] = "active_enemies = 1",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vise",
								["action"] = "ebonsoul_vise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [10]
						},
						["ogcd"] = {
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20220615,
					["warnings"] = "WARNING:  The import for 'slow_trinkets' required some automated changes.\nLine 1: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 2: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 3: Converted SimC syntax % to Lua division operator (/) (1x).\n\nWARNING:  The import for 'covenant_ability' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 4: Removed min:X check (not available in emulation) (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 5: Removed min:X check (not available in emulation) (1x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 9: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 10: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'tyrant_setup' required some automated changes.\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 16: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 17: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'trinkets' required some automated changes.\nLine 10: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 11: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\n\nWARNING:  The import for 'opener' required some automated changes.\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\n\nImported 10 action lists.\n",
					["author"] = "",
					["profile"] = "## Demonology Warlock\n## https://github.com/simulationcraft/simc/\n## June 11, 2022\n\n## Changes:\n## - Spell Lock.\n## - Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n## - Power Siphon allowed pre-combat to proc instant Demonbolt.\n## - PvP talent interrupt.\n## - Avoid SB->HoG spam when you're not about to summon a Tyrant.\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Try to avoid wasting Demonic Core stacks.\n## - Try to make opener priority only work if we can actually open with a Tyrant.\n## - Improve compatibility with M+ builds.\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/power_siphon,if=buff.wild_imps.stack>1&buff.demonic_core.stack<=2\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/demonbolt,if=soul_shards<5&(boss||action.demonbolt.cast=0)\nactions.precombat+=/shadow_bolt,if=soul_shards<5&!(boss||action.demonbolt.cast=0)\n## actions.precombat+=/variable,name=first_tyrant_time,op=set,value=10\n## actions.precombat+=/variable,name=in_opener,op=set,value=1\nactions.precombat+=/variable,name=use_bolt_timings,op=set,value=runeforge.shard_of_annihilation&(runeforge.balespiders_burning_core+talent.sacrificed_souls.enabled+talent.power_siphon.enabled>1)\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions+=/call_felhunter\nactions+=/axe_toss\nactions+=/devour_magic\nactions=variable,name=next_tyrant_cd,op=set,value=cooldown.summon_demonic_tyrant.remains_expected,if=!soulbind.field_of_blossoms||cooldown.summon_demonic_tyrant.remains_expected>cooldown.soul_rot.remains_expected\nactions+=/variable,name=next_tyrant_cd,op=set,value=cooldown.soul_rot.remains_expected,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&cooldown.summon_demonic_tyrant.remains_expected<cooldown.soul_rot.remains_expected\n## actions+=/variable,name=in_opener,op=set,value=0,if=pet.demonic_tyrant.active\nactions+=/variable,name=buff_sync_cd,op=set,value=variable.next_tyrant_cd,if=!variable.use_bolt_timings&!in_opener\nactions+=/variable,name=buff_sync_cd,op=set,value=12,if=!variable.use_bolt_timings&in_opener&!pet.dreadstalker.active\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&buff.wild_imps.stack>0&!talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&prev_gcd.1.hand_of_guldan&talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=cooldown.decimating_bolt.remains_expected,if=variable.use_bolt_timings\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=ogcd,if=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up&(!talent.power_siphon.enabled||buff.power_siphon.up))\nactions+=/implosion,if=boss&fight_remains<2*gcd\nactions+=/call_action_list,name=opener,strict=1,if=toggle.cooldowns&time<first_tyrant_time\nactions+=/call_action_list,name=covenant_ability,strict=1,if=soulbind.grove_invigoration||soulbind.field_of_blossoms||soulbind.combat_meditation||covenant.necrolord\nactions+=/potion,if=(!variable.use_bolt_timings&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time||soulbind.refined_palate&variable.next_tyrant_cd<38)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions+=/call_action_list,name=tyrant_setup\nactions+=/demonic_strength,if=(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>9)||(pet.demonic_tyrant.active&pet.demonic_tyrant.remains<6*gcd.max)\nactions+=/call_dreadstalkers,if=variable.use_bolt_timings&cooldown.summon_demonic_tyrant.remains_expected>22\nactions+=/call_dreadstalkers,if=!variable.use_bolt_timings&(variable.next_tyrant_cd>20-5*!runeforge.wilfreds_sigil_of_superior_summoning)\nactions+=/bilescourge_bombers,if=buff.tyrant.down&variable.next_tyrant_cd>5\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/grimoire_felguard,if=boss&time_to_die<30\nactions+=/summon_vilefiend,if=boss&time_to_die<28\nactions+=/summon_demonic_tyrant,if=boss&time_to_die<15\nactions+=/hand_of_guldan,if=soul_shard=5\nactions+=/shadow_bolt,if=soul_shard<5&runeforge.balespiders_burning_core&buff.balespiders_burning_core.remains<5\nactions+=/doom,if=refreshable\n# If Dreadstalkers are already active, no need to save shards\nactions+=/hand_of_guldan,if=soul_shard>=3&(pet.dreadstalker.active||pet.demonic_tyrant.active)\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.nether_portal.up&cooldown.call_dreadstalkers.remains>2*gcd.max\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.wild_imps.stack>2&pet.dreadstalker.remains>0.5+cast_time+action.summon_demonic_tyrant.cast_time&pet.dreadstalker.remains<0.5+cast_time+action.summon_demonic_tyrant.cast_time+(0>?(3-soul_shard))*action.shadow_bolt.cast_time&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time-gcd.max\nactions+=/call_action_list,name=covenant_ability,strict=1,if=!covenant.venthyr\n# Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority\nactions+=/soul_strike,if=!talent.sacrificed_souls.enabled\nactions+=/power_siphon,if=!variable.use_bolt_timings&buff.wild_imps.stack>1&buff.demonic_core.stack<3\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up&buff.shard_of_annihilation.stack<3\n# Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd>20\n# During Tyrant setup, spend Demonic Cores for Soul Shards\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd<12\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&(buff.demonic_core.stack>2||talent.sacrificed_souls.enabled)\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up\nactions+=/demonbolt,if=set_bonus.tier28_2pc&soul_shard<4&((6-soul_shard)*action.shadow_bolt.execute_time>pet.dreadstalker.remains-action.hand_of_guldan.execute_time-action.demonbolt.execute_time)&buff.demonic_core.stack>=1\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&active_enemies>1\nactions+=/soul_strike\nactions+=/call_action_list,name=covenant_ability\n# If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now\nactions+=/hand_of_guldan,if=soul_shard>=3&variable.next_tyrant_cd>25&(talent.demonic_calling.enabled||cooldown.call_dreadstalkers.remains>((5-soul_shard)*action.shadow_bolt.execute_time)+action.hand_of_guldan.execute_time)\nactions+=/doom,cycle_targets=1,if=refreshable&time>first_tyrant_time\n# Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.\nactions+=/demonbolt,if=buff.demonic_core.react&buff.demonic_core.remains<1+gcd.max*buff.demonic_core.stack\nactions+=/shadow_bolt\n\nactions.slow_trinkets=use_item,name=soulletting_ruby,cycle_targets=1,if=variable.buff_sync_cd<target.distance%5-(2*gcd.max*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=sunblood_amethyst,if=variable.buff_sync_cd<target.distance%5+(2*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=empyreal_ordnance,if=variable.buff_sync_cd<(target.distance%5)+12+(2*variable.use_bolt_timings)\n\nactions.covenant_ability=soul_rot,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&pet.demonic_tyrant.active\nactions.covenant_ability+=/soul_rot,if=soulbind.grove_invigoration&!runeforge.decaying_soul_satchel&(variable.next_tyrant_cd<20||variable.next_tyrant_cd>30)\nactions.covenant_ability+=/soul_rot,if=!(soulbind.field_of_blossoms||soulbind.grove_invigoration)&!runeforge.decaying_soul_satchel&!pet.demonic_tyrant.active&variable.next_tyrant_cd>18\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.lead_by_example&(pet.demonic_tyrant.active&soul_shard<2||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.kevins_oozeling&(pet.demonic_tyrant.active||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=!variable.use_bolt_timings&(soulbind.forgeborne_reveries||(soulbind.volatile_solvent&!soulbind.kevins_oozeling))&!pet.demonic_tyrant.active\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=variable.use_bolt_timings&(!talent.power_siphon||cooldown.power_siphon.remains<action.decimating_bolt.execute_time)&!cooldown.summon_demonic_tyrant.up&(pet.demonic_tyrant.remains<8||cooldown.summon_demonic_tyrant.remains_expected<30)\nactions.covenant_ability+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent.down,interrupt_if=buff.volatile_solvent.up\nactions.covenant_ability+=/scouring_tithe,if=soulbind.combat_meditation&pet.demonic_tyrant.active\nactions.covenant_ability+=/scouring_tithe,if=!soulbind.combat_meditation\nactions.covenant_ability+=/impending_catastrophe,if=pet.demonic_tyrant.active&soul_shard=0\n\nactions.hp_trinks=use_item,name=sinful_gladiators_emblem\nactions.hp_trinks+=/use_item,name=sinful_aspirants_emblem\n\nactions.ogcd=berserking\nactions.ogcd+=/blood_fury\nactions.ogcd+=/fireblood\nactions.ogcd+=/use_items\n\nactions.opener=soul_rot,if=soulbind.grove_invigoration,if=!runeforge.decaying_soul_satchel\nactions.opener+=/nether_portal\nactions.opener+=/grimoire_felguard\nactions.opener+=/summon_vilefiend\nactions.opener+=/shadow_bolt,if=soul_shard<5&cooldown.call_dreadstalkers.up\nactions.opener+=/shadow_bolt,if=variable.use_bolt_timings&soul_shard<5&buff.balespiders_burning_core.stack<4\nactions.opener+=/call_dreadstalkers\n\nactions.pure_damage_trinks=use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=resonant_reservoir\nactions.pure_damage_trinks+=/use_item,name=architects_ingenuity_core\nactions.pure_damage_trinks+=/use_item,name=cosmic_gladiators_resonator\nactions.pure_damage_trinks+=/use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=soul_igniter\nactions.pure_damage_trinks+=/use_item,name=glyph_of_assimilation,if=active_enemies=1\nactions.pure_damage_trinks+=/use_item,name=darkmoon_deck_putrescence\nactions.pure_damage_trinks+=/use_item,name=ebonsoul_vise\nactions.pure_damage_trinks+=/use_item,name=unchained_gladiators_shackles\n\nactions.trinkets=variable,name=use_buff_trinkets,value=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=shadowed_orb_of_torment,if=variable.buff_sync_cd<22\nactions.trinkets+=/use_item,name=moonlit_prism,if=variable.use_bolt_timings&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=grim_eclipse,if=variable.buff_sync_cd<7\nactions.trinkets+=/call_action_list,name=hp_trinks,if=talent.demonic_consumption.enabled&variable.next_tyrant_cd<20\n# Effects that travel slowly from the target require additional, separate handling\nactions.trinkets+=/call_action_list,name=slow_trinkets\nactions.trinkets+=/use_item,name=overflowing_anima_cage,if=variable.use_buff_trinkets\nactions.trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/call_action_list,name=pure_damage_trinks,if=time>first_tyrant_time&variable.buff_sync_cd>20\n\nactions.tyrant_setup=nether_portal,if=variable.next_tyrant_cd<15\nactions.tyrant_setup+=/grimoire_felguard,if=variable.next_tyrant_cd<17-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)&(cooldown.call_dreadstalkers.remains<17-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time+action.shadow_bolt.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time)\nactions.tyrant_setup+=/summon_vilefiend,if=(variable.next_tyrant_cd<15-(action.summon_demonic_tyrant.execute_time)&(cooldown.call_dreadstalkers.remains<15-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time))||(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>40)\nactions.tyrant_setup+=/call_dreadstalkers,if=variable.next_tyrant_cd<12-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)\nactions.tyrant_setup+=/summon_demonic_tyrant,if=time>first_tyrant_time&(pet.dreadstalker.active&pet.dreadstalker.remains>action.summon_demonic_tyrant.execute_time)&(!talent.summon_vilefiend.enabled||pet.vilefiend.active)&(soul_shard=0||(pet.dreadstalker.active&pet.dreadstalker.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(pet.vilefiend.active&pet.vilefiend.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(buff.grimoire_felguard.up&buff.grimoire_felguard.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time))",
				},
				["Destruction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220604,
					["author"] = "SimC",
					["desc"] = "Destruction Warlock\nMay 31, 2022\n\nChanges:\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Avoid spamming Immolate.\n- Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).",
					["lists"] = {
						["havoc"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1 & soul_shard <= 4",
								["action"] = "conflagrate",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "soul_fire",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & soulbind.lead_by_example.enabled",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "scouring_tithe",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & remains < duration * 0.5 || ! talent.internal_combustion.enabled & refreshable",
								["action"] = "immolate",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & ! ( set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled )",
								["action"] = "chaos_bolt",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled",
								["action"] = "rain_of_fire",
							}, -- [7]
							{
								["action"] = "shadowburn",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "incinerate",
							}, -- [9]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["action"] = "fel_domination",
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
								["criteria"] = "time > 0 & ! pet.alive",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [9]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active & ( ! cooldown.havoc.ready || active_enemies > 3 )",
								["action"] = "rain_of_fire",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc",
								["action"] = "rain_of_fire",
							}, -- [2]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "dot.immolate.remains > cast_time",
								["action"] = "channel_demonfire",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "active_enemies < 5 & remains < 5 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "active_enemies < 4",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["action"] = "rain_of_fire",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.fire_and_brimstone.enabled & buff.backdraft.up & soul_shard < 5 - 0.2 * active_enemies",
								["action"] = "incinerate",
							}, -- [12]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down",
								["action"] = "conflagrate",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "target.health.pct < 20",
								["action"] = "shadowburn",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [18]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "cooldown.summon_infernal.remains < 3 || boss & time_to_die < 42",
								["name"] = "shadowed_orb_of_torment",
							}, -- [1]
							{
								["action"] = "summon_infernal",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & cooldown.summon_infernal.remains_expected > time_to_die",
								["action"] = "dark_soul_instability",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "potion",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "berserking",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "blood_fury",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "fireblood",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
								["name"] = "scars_of_fraternal_strife",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.infernal.active",
								["name"] = "scars_of_fraternal_strife",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & time_to_die < 21",
								["action"] = "use_items",
							}, -- [10]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spell_lock",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "havoc_active & active_enemies > 1 & active_enemies < 5 - talent.inferno.enabled + ( talent.inferno.enabled & talent.internal_combustion.enabled )",
								["list_name"] = "havoc",
							}, -- [2]
							{
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.roaring_blaze.enabled & debuff.roaring_blaze.remains < 1.5",
								["action"] = "conflagrate",
							}, -- [4]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "settings.fixed_aoe_3_plus & active_enemies > 2 || ! settings.fixed_aoe_3_plus & active_enemies > 2 - set_bonus.tier28_4pc",
								["list_name"] = "aoe",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "soul_fire",
								["criteria"] = "refreshable & soul_shard <= 4 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "remains < 3 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & action.chaos_bolt.in_flight & remains < duration * 0.5",
								["action"] = "immolate",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( pet.infernal.active || pet.blasphemy.active ) & soul_shard >= 4",
								["action"] = "chaos_bolt",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [11]
							{
								["action"] = "channel_demonfire",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "dot.immolate.remains > dot.immolate.duration * 0.5 || ! talent.internal_combustion.enabled",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.odr_shawl_of_the_ymirjar.equipped",
								["action"] = "havoc",
							}, -- [18]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies > 1 & cooldown.havoc.remains <= 10 || buff.ritual_of_ruin.up & talent.rain_of_chaos.enabled",
								["var_name"] = "pool_soul_shards",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1.5 - 0.3 * talent.flashover.enabled & ! variable.pool_soul_shards",
								["action"] = "conflagrate",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || buff.rain_of_chaos.remains > cast_time",
								["action"] = "chaos_bolt",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.up & ! variable.pool_soul_shards",
								["action"] = "chaos_bolt",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.eradication.enabled & ! variable.pool_soul_shards & debuff.eradication.remains < cast_time",
								["action"] = "chaos_bolt",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pool_soul_shards || soul_shard >= 4.5",
								["action"] = "shadowburn",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 3.5",
								["action"] = "chaos_bolt",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 5 & target.time_to_die > cast_time + travel_time",
								["action"] = "chaos_bolt",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 || target.time_to_die < gcd",
								["action"] = "conflagrate",
							}, -- [27]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [28]
						},
					},
					["version"] = 20220604,
					["warnings"] = "WARNING:  The import for 'default' required some automated changes.\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "## Destruction Warlock\n## May 31, 2022\n\n## Changes:\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Avoid spamming Immolate.\n## - Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/soul_fire\nactions.precombat+=/incinerate\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions=call_action_list,name=havoc,strict=1,if=havoc_active&active_enemies>1&active_enemies<5-talent.inferno.enabled+(talent.inferno.enabled&talent.internal_combustion.enabled)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/conflagrate,if=talent.roaring_blaze.enabled&debuff.roaring_blaze.remains<1.5\nactions+=/cataclysm\nactions+=/call_action_list,name=aoe,strict=1,if=settings.fixed_aoe_3_plus&active_enemies>2||!settings.fixed_aoe_3_plus&active_enemies>2-set_bonus.tier28_4pc\nactions+=/soul_fire,cycle_targets=1,if=refreshable&soul_shard<=4&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,cycle_targets=1,if=remains<3&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,if=talent.internal_combustion.enabled&action.chaos_bolt.in_flight&remains<duration*0.5\nactions+=/chaos_bolt,if=(pet.infernal.active||pet.blasphemy.active)&soul_shard>=4\nactions+=/call_action_list,name=cds\nactions+=/channel_demonfire\nactions+=/scouring_tithe\nactions+=/decimating_bolt\nactions+=/havoc,cycle_targets=1,if=dot.immolate.remains>dot.immolate.duration*0.5||!talent.internal_combustion.enabled\nactions+=/impending_catastrophe\nactions+=/soul_rot\nactions+=/havoc,if=runeforge.odr_shawl_of_the_ymirjar.equipped\nactions+=/variable,name=pool_soul_shards,value=active_enemies>1&cooldown.havoc.remains<=10||buff.ritual_of_ruin.up&talent.rain_of_chaos\nactions+=/conflagrate,if=buff.backdraft.down&soul_shard>=1.5-0.3*talent.flashover.enabled&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=pet.infernal.active||buff.rain_of_chaos.remains>cast_time\nactions+=/chaos_bolt,if=buff.backdraft.up&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=talent.eradication&!variable.pool_soul_shards&debuff.eradication.remains<cast_time\nactions+=/shadowburn,if=!variable.pool_soul_shards||soul_shard>=4.5\nactions+=/chaos_bolt,if=soul_shard>3.5\nactions+=/chaos_bolt,if=boss&fight_remains<5&target.time_to_die>cast_time+travel_time\nactions+=/conflagrate,if=charges>1||target.time_to_die<gcd\nactions+=/incinerate\n\nactions.aoe=rain_of_fire,if=pet.infernal.active&(!cooldown.havoc.ready||active_enemies>3)\nactions.aoe+=/rain_of_fire,if=set_bonus.tier28_4pc\nactions.aoe+=/soul_rot\nactions.aoe+=/impending_catastrophe\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains>cast_time\nactions.aoe+=/immolate,cycle_targets=1,if=active_enemies<5&remains<5&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions.aoe+=/call_action_list,name=cds\nactions.aoe+=/havoc,cycle_targets=1,if=active_enemies<4\nactions.aoe+=/rain_of_fire\nactions.aoe+=/havoc,cycle_targets=1\nactions.aoe+=/decimating_bolt\nactions.aoe+=/incinerate,if=talent.fire_and_brimstone.enabled&buff.backdraft.up&soul_shard<5-0.2*active_enemies\nactions.aoe+=/soul_fire\nactions.aoe+=/conflagrate,if=buff.backdraft.down\nactions.aoe+=/shadowburn,if=target.health.pct<20\nactions.aoe+=/immolate,cycle_targets=1,if=refreshable\nactions.aoe+=/scouring_tithe\nactions.aoe+=/incinerate\n\nactions.cds=use_item,name=shadowed_orb_of_torment,if=cooldown.summon_infernal.remains<3||boss&time_to_die<42\nactions.cds+=/summon_infernal\nactions.cds+=/dark_soul_instability,if=pet.infernal.active||boss&cooldown.summon_infernal.remains_expected>time_to_die\nactions.cds+=/potion,if=pet.infernal.active\nactions.cds+=/berserking,if=pet.infernal.active\nactions.cds+=/blood_fury,if=pet.infernal.active\nactions.cds+=/fireblood,if=pet.infernal.active\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.infernal.active\nactions.cds+=/use_items,if=pet.infernal.active||boss&time_to_die<21\n\nactions.havoc=conflagrate,if=buff.backdraft.down&soul_shard>=1&soul_shard<=4\nactions.havoc+=/soul_fire,if=cast_time<havoc_remains\nactions.havoc+=/decimating_bolt,if=cast_time<havoc_remains&soulbind.lead_by_example.enabled\nactions.havoc+=/scouring_tithe,if=cast_time<havoc_remains\nactions.havoc+=/immolate,if=talent.internal_combustion.enabled&remains<duration*0.5||!talent.internal_combustion.enabled&refreshable\nactions.havoc+=/chaos_bolt,if=cast_time<havoc_remains&!(set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled)\nactions.havoc+=/rain_of_fire,if=set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled\nactions.havoc+=/shadowburn\nactions.havoc+=/incinerate,if=cast_time<havoc_remains",
					["spec"] = 267,
				},
				["Affliction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220617,
					["spec"] = 265,
					["desc"] = "Affliction Warlock\nJune 17, 2022\n\nChanges:\n- Added Spell Lock.\n- Added Devour Magic.\n- Added breakchannel logic for Drain Soul.\n- Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n- Enable Rampant Afflictions PvP talent.\n- Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n- Condense some Darkglare Prep calls to reduce computation time.\n- Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n- Only Seed once pre-pull.\n- Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Integrate Necro MW priority list.\n- Don't break Drain Soul with Decimating Bolt buff.",
					["profile"] = "## Affliction Warlock\n## June 17, 2022\n\n## Changes:\n## - Added Spell Lock.\n## - Added Devour Magic.\n## - Added breakchannel logic for Drain Soul.\n## - Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n## - Enable Rampant Afflictions PvP talent.\n## - Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n## - Condense some Darkglare Prep calls to reduce computation time.\n## - Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n## - Only Seed once pre-pull.\n## - Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Integrate Necro MW priority list.\n## - Don't break Drain Soul with Decimating Bolt buff.\n\nactions.precombat=fel_domination,if=time>0&!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/fleshcraft\nactions.precombat+=/variable,name=dots_ready,value=active_dot.corruption>0&active_dot.agony>0&active_dot.unstable_affliction>0&(!talent.siphon_life.enabled||active_dot.siphon_life>0)&(dot.phantom_singularity.ticking||!talent.phantom_singularity.enabled)\nactions.precombat+=/seed_of_corruption,line_cd=10,if=spell_targets.seed_of_corruption_aoe>=3\nactions.precombat+=/haunt\nactions.precombat+=/unstable_affliction\n\n## Executed every time the actor is available.\nactions=spell_lock\nactions+=/devour_magic\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>3\nactions+=/malefic_rapture,if=buff.calamitous_crescendo.up\n# Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.\nactions+=/run_action_list,name=necro_mw,strict=1,if=covenant.necrolord&runeforge.malefic_wrath&active_enemies=1&talent.phantom_singularity\n# Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.\nactions+=/call_action_list,name=trinket_split_check\nactions+=/call_action_list,name=delayed_trinkets\nactions+=/call_action_list,name=stat_trinkets,strict=1,if=(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking||dot.phantom_singularity.ticking)&soul_shard>3||dot.vile_taint.ticking||talent.sow_the_seeds\nactions+=/call_action_list,name=damage_trinkets,if=covenant.night_fae&(!variable.trinket_split||cooldown.soul_rot.remains>20||(variable.trinket_one&cooldown.soul_rot.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.soul_rot.remains<trinket.2.cooldown.remains))||covenant.venthyr&(!variable.trinket_split||cooldown.impending_catastrophe.remains>20||(variable.trinket_one&cooldown.impending_catastrophe.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.impending_catastrophe.remains<trinket.2.cooldown.remains))||(covenant.necrolord||covenant.kyrian||covenant.none)&(!variable.trinket_split||cooldown.phantom_singularity.remains>20||(variable.trinket_one&cooldown.phantom_singularity.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.phantom_singularity.remains<trinket.2.cooldown.remains))||!talent.phantom_singularity.enabled&(!variable.trinket_split||cooldown.summon_darkglare.remains>20||(variable.trinket_one&cooldown.summon_darkglare.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.summon_darkglare.remains<trinket.2.cooldown.remains))\n# Burn soul shards if fight is almost over\nactions+=/malefic_rapture,if=boss&fight_remains<execute_time*soul_shard&dot.unstable_affliction.ticking\n# If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||((covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2)\n# Refresh dots early if going into a shard spending phase\nactions+=/call_action_list,name=dot_prep,if=(covenant.night_fae&!dot.soul_rot.ticking&cooldown.soul_rot.remains<4)||(covenant.venthyr&!dot.impending_catastrophe_dot.ticking&cooldown.impending_catastrophe.remains<4)||((covenant.necrolord||covenant.kyrian||covenant.none)&talent.phantom_singularity&!dot.phantom_singularity.ticking&cooldown.phantom_singularity.remains<4)\n# If Phantom Singularity is ticking, it is safe to use Dark Soul\nactions+=/dark_soul,if=dot.phantom_singularity.ticking\nactions+=/dark_soul,if=!talent.phantom_singularity&(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking)\n# Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)\nactions+=/phantom_singularity,if=covenant.night_fae&time>5&cooldown.soul_rot.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=covenant.venthyr&time>5&cooldown.impending_catastrophe.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt\nactions+=/phantom_singularity,if=covenant.necrolord&runeforge.malefic_wrath&time>5&cooldown.decimating_bolt.remains<3&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Other covenants (including non-MW Necro) cast PS on cooldown\nactions+=/phantom_singularity,if=(covenant.kyrian||covenant.none||(covenant.necrolord&!runeforge.malefic_wrath))&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=boss&fight_remains<16\n# If Phantom Singularity is ticking, it's time to use other major dots\nactions+=/call_action_list,name=covenant,strict=1,if=dot.phantom_singularity.ticking&(covenant.night_fae||covenant.venthyr)\nactions+=/agony,cycle_targets=1,if=dot.agony.remains<4\nactions+=/haunt\n# Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.\nactions+=/seed_of_corruption,if=active_enemies>2&talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight\nactions+=/seed_of_corruption,if=active_enemies>2&talent.siphon_life&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.remains<4\nactions+=/vile_taint,if=(soul_shard>1||active_enemies>2)&cooldown.summon_darkglare.remains>12\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&dot.unstable_affliction.remains<4\nactions+=/siphon_life,cycle_targets=1,if=dot.siphon_life.remains<4\nactions+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\n# Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption\nactions+=/corruption,cycle_targets=1,if=active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)&dot.corruption.remains<2\n# After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping\nactions+=/malefic_rapture,if=soul_shard>4&time>21\n# When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&!talent.phantom_singularity&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready)||(covenant.night_fae&!talent.phantom_singularity&dot.soul_rot.ticking&cooldown.summon_darkglare.ready)||((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.ready)\n# Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses\nactions+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions+=/dark_soul,if=boss&!talent.phantom_singularity&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\n# Catch-all item usage for anything not specified elsewhere\nactions+=/call_action_list,name=item\n## Refresh Shadow Embrace before spending shards on Malefic Rapture\nactions+=/call_action_list,name=se,if=talent.shadow_embrace.enabled&(debuff.shadow_embrace.stack<(2-action.shadow_bolt.in_flight)||debuff.shadow_embrace.remains<3)\n# Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff\nactions+=/malefic_rapture,if=(dot.vile_taint.ticking||dot.impending_catastrophe_dot.ticking||dot.soul_rot.ticking)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\n# Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&cooldown.soul_rot.remains>20&buff.malefic_wrath.remains<4\n# Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&(covenant.necrolord||covenant.kyrian)&buff.malefic_wrath.remains<4\n# Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it\nactions+=/malefic_rapture,if=talent.phantom_singularity&(dot.phantom_singularity.ticking||cooldown.phantom_singularity.remains>25||boss&time_to_die<cooldown.phantom_singularity.remains)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\nactions+=/malefic_rapture,if=talent.sow_the_seeds\n# Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks\nactions+=/drain_life,if=buff.inevitable_demise.stack>40||buff.inevitable_demise.up&boss&fight_remains<4\nactions+=/call_action_list,name=covenant\nactions+=/agony,cycle_targets=1,if=refreshable\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions+=/siphon_life,cycle_targets=1,if=refreshable\nactions+=/corruption,cycle_targets=1,if=refreshable&active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions+=/shadow_bolt\n\nactions.aoe=phantom_singularity\nactions.aoe+=/haunt\nactions.aoe+=/call_action_list,name=darkglare_prep,if=covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||(covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2\nactions.aoe+=/seed_of_corruption,if=talent.sow_the_seeds&can_seed\nactions.aoe+=/seed_of_corruption,if=!talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.refreshable\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony<4&!dot.agony.ticking\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony>=4&refreshable&dot.agony.ticking\nactions.aoe+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions.aoe+=/unstable_affliction,cycle_targets=1,if=!ticking&pvptalent.rampant_afflictions.enabled&active_dot.unstable_affliction<3\nactions.aoe+=/vile_taint,if=soul_shard>1\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.aoe+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&(cooldown.impending_catastrophe.ready||dot.impending_catastrophe_dot.ticking)&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))&((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&(cooldown.soul_rot.ready||dot.soul_rot.ticking)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\nactions.aoe+=/call_action_list,name=item\nactions.aoe+=/call_action_list,name=delayed_trinkets\nactions.aoe+=/call_action_list,name=damage_trinkets\nactions.aoe+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking||!talent.phantom_singularity\nactions.aoe+=/malefic_rapture,if=dot.vile_taint.ticking\nactions.aoe+=/malefic_rapture,if=dot.soul_rot.ticking&!talent.sow_the_seeds\nactions.aoe+=/malefic_rapture,if=!talent.vile_taint\nactions.aoe+=/malefic_rapture,if=soul_shard>4\nactions.aoe+=/siphon_life,cycle_targets=1,if=active_dot.siphon_life<=3&refreshable&!dot.siphon_life.ticking\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=covenant.necrolord\nactions.aoe+=/drain_life,if=buff.inevitable_demise.stack>=50||boss&buff.inevitable_demise.up&fight_remains<5||buff.inevitable_demise.stack>=35&dot.soul_rot.ticking\nactions.aoe+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions.aoe+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.aoe+=/shadow_bolt\n\nactions.covenant=impending_catastrophe,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<10||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/impending_catastrophe,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/decimating_bolt,if=cooldown.summon_darkglare.remains>5&(debuff.haunt.remains>4||!talent.haunt)\nactions.covenant+=/soul_rot,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<5||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/soul_rot,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/scouring_tithe\n\nactions.damage_trinkets=use_item,name=soul_igniter\nactions.damage_trinkets+=/use_item,name=dreadfire_vessel\nactions.damage_trinkets+=/use_item,name=glyph_of_assimilation\nactions.damage_trinkets+=/use_item,name=unchained_gladiators_shackles\nactions.damage_trinkets+=/use_item,name=ebonsoul_vice\nactions.damage_trinkets+=/use_item,name=resonant_reservoir\nactions.damage_trinkets+=/use_item,name=architects_ingenuity_core\nactions.damage_trinkets+=/use_item,name=grim_eclipse\nactions.damage_trinkets+=/use_item,name=toe_knees_promise\nactions.damage_trinkets+=/use_item,name=mrrgrias_favor\nactions.damage_trinkets+=/use_item,name=cosmic_gladiators_resonator\n\nactions.darkglare_prep=vile_taint\nactions.darkglare_prep+=/dark_soul\nactions.darkglare_prep+=/potion\nactions.darkglare_prep+=/fireblood\nactions.darkglare_prep+=/blood_fury\nactions.darkglare_prep+=/berserking\nactions.darkglare_prep+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.darkglare_prep+=/summon_darkglare\n\nactions.delayed_trinkets=use_item,name=grim_eclipse,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=empyreal_ordnance,if=(covenant.night_fae&cooldown.soul_rot.remains<20)||(covenant.venthyr&cooldown.impending_catastrophe.remains<20)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=sunblood_amethyst,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=soulletting_ruby,if=(covenant.night_fae&cooldown.soul_rot.remains<8)||(covenant.venthyr&cooldown.impending_catastrophe.remains<8)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=shadowed_orb_of_torment,if=(covenant.night_fae&cooldown.soul_rot.remains<4)||(covenant.venthyr&cooldown.impending_catastrophe.remains<4)||(covenant.necrolord||covenant.kyrian||covenant.none)\n\nactions.dot_prep=agony,if=dot.agony.remains<8&cooldown.summon_darkglare.remains>dot.agony.remains\nactions.dot_prep+=/siphon_life,if=dot.siphon_life.remains<8&cooldown.summon_darkglare.remains>dot.siphon_life.remains\nactions.dot_prep+=/unstable_affliction,if=dot.unstable_affliction.remains<8&cooldown.summon_darkglare.remains>dot.unstable_affliction.remains\nactions.dot_prep+=/corruption,if=dot.corruption.remains<8&cooldown.summon_darkglare.remains>dot.corruption.remains\n\nactions.item=use_items\n\nactions.necro_mw=variable,name=dots_ticking,value=dot.corruption.remains>2&dot.agony.remains>2&dot.unstable_affliction.remains>2&(!talent.siphon_life||dot.siphon_life.remains>2)\n# Trinkets align with PS for Shadow Embrace, DB for Haunt.\nactions.necro_mw+=/variable,name=trinket_delay,value=cooldown.phantom_singularity.remains,value_else=cooldown.decimating_bolt.remains,op=setif,condition=talent.shadow_embrace,if=covenant.necrolord\n# Burn soul shards if the fight will be ending soon.\nactions.necro_mw+=/malefic_rapture,if=time_to_die<execute_time*soul_shard&dot.unstable_affliction.ticking\n# Cast haunt to refresh before falloff.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<2+execute_time\n# High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<gcd.max+execute_time\n# Fire delayed trinkets in anticipation of Decimating Bolt.\nactions.necro_mw+=/use_item,name=empyreal_ordnance,if=variable.trinket_delay<20\nactions.necro_mw+=/use_item,name=sunblood_amethyst,if=variable.trinket_delay<6\nactions.necro_mw+=/use_item,name=soulletting_ruby,if=variable.trinket_delay<8\nactions.necro_mw+=/use_item,name=shadowed_orb_of_torment,if=variable.trinket_delay<4\n# If the player is using Haunt, fire PS on cooldown then follow with DB\nactions.necro_mw+=/phantom_singularity,if=talent.haunt&variable.dots_ticking\nactions.necro_mw+=/decimating_bolt,if=talent.haunt&cooldown.phantom_singularity.remains>0\n# If the player is using SE, fire DB on cooldown then following with PS\nactions.necro_mw+=/decimating_bolt,if=talent.shadow_embrace&variable.dots_ticking\nactions.necro_mw+=/phantom_singularity,if=talent.shadow_embrace&cooldown.decimating_bolt.remains>0\nactions.necro_mw+=/unstable_affliction,if=dot.unstable_affliction.remains<6\nactions.necro_mw+=/agony,if=dot.agony.remains<4\nactions.necro_mw+=/siphon_life,if=dot.siphon_life.remains<4\nactions.necro_mw+=/corruption,if=dot.corruption.remains<4\n# Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<2*gcd.max+execute_time\n# Call darkglare_prep if Phantom Singularity is currently ticking\nactions.necro_mw+=/call_action_list,name=darkglare_prep,strict=1,if=dot.phantom_singularity.ticking\n# Utilize any other stat trinkets if Phantom Singularity is ticking\nactions.necro_mw+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking\n# Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)\nactions.necro_mw+=/malefic_rapture,if=time>7&(buff.malefic_wrath.stack<3||buff.malefic_wrath.remains<4.5)\n# Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.\nactions.necro_mw+=/malefic_rapture,if=(dot.phantom_singularity.ticking||time_to_die<cooldown.phantom_singularity.remains)&(buff.malefic_wrath.stack<3||soul_shard>1)\n# Additional Drain Soul cast when PS is ticking\nactions.necro_mw+=/drain_soul,if=dot.phantom_singularity.ticking\n# Low - priority dot refresh when refreshable.\nactions.necro_mw+=/agony,if=refreshable\nactions.necro_mw+=/unstable_affliction,if=refreshable\nactions.necro_mw+=/corruption,if=refreshable\nactions.necro_mw+=/siphon_life,if=talent.siphon_life&refreshable\n# Fleshcraft to maintain Volatile Solvent.\nactions.necro_mw+=/fleshcraft,if=soulbind.volatile_solvent,cancel_if=buff.volatile_solvent_humanoid.up\n# Low-priority haunt refresh.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<3\n# Uninterruptible DS channel if we have the DB buff.\nactions.necro_mw+=/drain_soul,if=buff.decimating_bolt.up\nactions.necro_mw+=/drain_soul,if=talent.shadow_embrace&debuff.shadow_embrace.remains<3||debuff.shadow_embrace.stack<3,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/shadow_bolt\n\nactions.se=haunt\nactions.se+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.se+=/shadow_bolt\n\nactions.stat_trinkets=use_item,name=the_first_sigil\nactions.stat_trinkets+=/use_item,name=scars_of_fraternal_strife\nactions.stat_trinkets+=/use_item,name=inscrutable_quantum_device\nactions.stat_trinkets+=/use_item,name=instructors_divine_bell\nactions.stat_trinkets+=/use_item,name=overflowing_anima_cage\nactions.stat_trinkets+=/use_item,name=darkmoon_deck_putrescence\nactions.stat_trinkets+=/use_item,name=macabre_sheet_music\nactions.stat_trinkets+=/use_item,name=flame_of_battle\nactions.stat_trinkets+=/use_item,name=wakeners_frond\nactions.stat_trinkets+=/use_item,name=tablet_of_despair\nactions.stat_trinkets+=/use_item,name=sinful_aspirants_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=cosmic_aspirants_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=sinful_gladiators_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=cosmic_gladiators_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=obelisk_of_the_void\nactions.stat_trinkets+=/use_item,name=horn_of_valor\nactions.stat_trinkets+=/use_item,name=moonlit_prism\nactions.stat_trinkets+=/use_item,name=figurehead_of_the_naglfar\nactions.stat_trinkets+=/blood_fury\nactions.stat_trinkets+=/fireblood\nactions.stat_trinkets+=/berserking\n\n# We don't support ^ as XOR in Lua, so I've converted this to arithmetic.\nactions.trinket_split_check=variable,name=special_equipped,value=((1*equipped.empyreal_ordnance)+(1*equipped.inscrutable_quantum_device)+(1*equipped.soulletting_ruby)+(1*equipped.sunblood_amethyst))=1\nactions.trinket_split_check+=/variable,name=trinket_one,value=(trinket.1.has_proc&trinket.1.has_cooldown)\nactions.trinket_split_check+=/variable,name=trinket_two,value=(trinket.2.has_proc&trinket.2.has_cooldown)\nactions.trinket_split_check+=/variable,name=damage_trinket,value=(!(trinket.1.has_proc&trinket.1.has_cooldown))||(!(trinket.2.has_proc&trinket.2.has_cooldown))||equipped.glyph_of_assimilation\nactions.trinket_split_check+=/variable,name=trinket_split,value=(variable.trinket_one&variable.damage_trinket)||(variable.trinket_two&variable.damage_trinket)||(1*variable.trinket_one)+(1*variable.special_equipped)=1||(1*variable.trinket_two)+(1*variable.special_equipped)=1",
					["version"] = 20220617,
					["warnings"] = "WARNING:  The import for 'trinket_split_check' required some automated changes.\nLine 2: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 3: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 4: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 4: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\n\nWARNING:  The import for 'damage_trinkets' required some automated changes.\nLine 9: Unsupported use_item action [ toe_knees_promise]; entry disabled.\nLine 10: Unsupported use_item action [ mrrgrias_favor]; entry disabled.\n\nWARNING:  The import for 'stat_trinkets' required some automated changes.\nLine 15: Unsupported use_item action [ obelisk_of_the_void]; entry disabled.\nLine 18: Unsupported use_item action [ figurehead_of_the_naglfar]; entry disabled.\n\nWARNING:  The import for 'covenant' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 1: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 8: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 9: Converted 'trinket.1.X' to 'trinket.t1.X' (4x).\nLine 9: Converted 'trinket.2.X' to 'trinket.t2.X' (4x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 16: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 18: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 24: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 29: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 32: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 33: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 36: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 37: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 38: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 39: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 39: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 40: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 46: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 47: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (3x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 18: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 20: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 26: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'necro_mw' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 27: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 28: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 13 action lists.\n",
					["lists"] = {
						["darkglare_prep"] = {
							{
								["action"] = "vile_taint",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "dark_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [7]
							{
								["action"] = "summon_darkglare",
								["enabled"] = true,
							}, -- [8]
						},
						["trinket_split_check"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ( 1 * equipped.empyreal_ordnance ) + ( 1 * equipped.inscrutable_quantum_device ) + ( 1 * equipped.soulletting_ruby ) + ( 1 * equipped.sunblood_amethyst ) ) = 1",
								["description"] = "We don't support ",
								["var_name"] = "special_equipped",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t1.has_proc & trinket.t1.has_cooldown )",
								["var_name"] = "trinket_one",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t2.has_proc & trinket.t2.has_cooldown )",
								["var_name"] = "trinket_two",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! ( trinket.t1.has_proc & trinket.t1.has_cooldown ) ) || ( ! ( trinket.t2.has_proc & trinket.t2.has_cooldown ) ) || equipped.glyph_of_assimilation",
								["var_name"] = "damage_trinket",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( variable.trinket_one & variable.damage_trinket ) || ( variable.trinket_two & variable.damage_trinket ) || ( 1 * variable.trinket_one ) + ( 1 * variable.special_equipped ) = 1 || ( 1 * variable.trinket_two ) + ( 1 * variable.special_equipped ) = 1",
								["var_name"] = "trinket_split",
							}, -- [5]
						},
						["damage_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vice",
								["action"] = "ebonsoul_vice",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "toe_knees_promise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "mrrgrias_favor",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [11]
						},
						["delayed_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 20 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 20 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 8 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 8 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 4 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [5]
						},
						["stat_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "the_first_sigil",
								["action"] = "the_first_sigil",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "tablet_of_despair",
								["action"] = "tablet_of_despair",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "sinful_aspirants_badge_of_ferocity",
								["action"] = "sinful_aspirants_badge_of_ferocity",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "cosmic_aspirants_badge_of_ferocity",
								["action"] = "cosmic_aspirants_badge_of_ferocity",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "sinful_gladiators_badge_of_ferocity",
								["action"] = "sinful_gladiators_badge_of_ferocity",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_badge_of_ferocity",
								["action"] = "cosmic_gladiators_badge_of_ferocity",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "obelisk_of_the_void",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "horn_of_valor",
								["action"] = "horn_of_valor",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "figurehead_of_the_naglfar",
							}, -- [18]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [19]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [20]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [21]
						},
						["covenant"] = {
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 10 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "impending_catastrophe",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "impending_catastrophe",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.summon_darkglare.remains > 5 & ( debuff.haunt.remains > 4 || ! talent.haunt.enabled )",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 5 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "soul_rot",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "soul_rot",
							}, -- [5]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [6]
						},
						["dot_prep"] = {
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 8 & cooldown.summon_darkglare.remains > dot.agony.remains",
								["action"] = "agony",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 8 & cooldown.summon_darkglare.remains > dot.siphon_life.remains",
								["action"] = "siphon_life",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 8 & cooldown.summon_darkglare.remains > dot.unstable_affliction.remains",
								["action"] = "unstable_affliction",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 8 & cooldown.summon_darkglare.remains > dot.corruption.remains",
								["action"] = "corruption",
							}, -- [4]
						},
						["default"] = {
							{
								["action"] = "spell_lock",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 3",
								["list_name"] = "aoe",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.calamitous_crescendo.up",
								["action"] = "malefic_rapture",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & active_enemies = 1 & talent.phantom_singularity.enabled",
								["list_name"] = "necro_mw",
							}, -- [5]
							{
								["enabled"] = true,
								["description"] = "Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.",
								["action"] = "call_action_list",
								["list_name"] = "trinket_split_check",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking || dot.phantom_singularity.ticking ) & soul_shard > 3 || dot.vile_taint.ticking || talent.sow_the_seeds.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & ( ! variable.trinket_split || cooldown.soul_rot.remains > 20 || ( variable.trinket_one & cooldown.soul_rot.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.soul_rot.remains < trinket.t2.cooldown.remains ) ) || covenant.venthyr & ( ! variable.trinket_split || cooldown.impending_catastrophe.remains > 20 || ( variable.trinket_one & cooldown.impending_catastrophe.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.impending_catastrophe.remains < trinket.t2.cooldown.remains ) ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & ( ! variable.trinket_split || cooldown.phantom_singularity.remains > 20 || ( variable.trinket_one & cooldown.phantom_singularity.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.phantom_singularity.remains < trinket.t2.cooldown.remains ) ) || ! talent.phantom_singularity.enabled & ( ! variable.trinket_split || cooldown.summon_darkglare.remains > 20 || ( variable.trinket_one & cooldown.summon_darkglare.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.summon_darkglare.remains < trinket.t2.cooldown.remains ) )",
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
								["description"] = "Burn soul shards if fight is almost over",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set",
								["criteria"] = "( covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2 )",
								["list_name"] = "darkglare_prep",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Refresh dots early if going into a shard spending phase",
								["criteria"] = "( covenant.night_fae & ! dot.soul_rot.ticking & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & ! dot.impending_catastrophe_dot.ticking & cooldown.impending_catastrophe.remains < 4 ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & talent.phantom_singularity.enabled & ! dot.phantom_singularity.ticking & cooldown.phantom_singularity.remains < 4 )",
								["list_name"] = "dot_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "dark_soul",
								["description"] = "If Phantom Singularity is ticking, it is safe to use Dark Soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking )",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & time > 5 & cooldown.soul_rot.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & time > 5 & cooldown.impending_catastrophe.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & time > 5 & cooldown.decimating_bolt.remains < 3 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.kyrian || covenant.none || ( covenant.necrolord & ! runeforge.malefic_wrath.enabled ) ) & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Other covenants (including non-MW Necro) cast PS on cooldown",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 16",
								["action"] = "phantom_singularity",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If Phantom Singularity is ticking, it's time to use other major dots",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking & ( covenant.night_fae || covenant.venthyr )",
								["list_name"] = "covenant",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "dot.agony.remains < 4",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight",
								["action"] = "seed_of_corruption",
								["description"] = "Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.siphon_life.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.remains < 4",
								["action"] = "seed_of_corruption",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "( soul_shard > 1 || active_enemies > 2 ) & cooldown.summon_darkglare.remains > 12",
								["action"] = "vile_taint",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & dot.unstable_affliction.remains < 4",
								["action"] = "unstable_affliction",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "dot.siphon_life.remains < 4",
								["cycle_targets"] = 1,
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["cycle_targets"] = 1,
								["criteria"] = "active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled ) & dot.corruption.remains < 2",
								["description"] = "Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4 & time > 21",
								["action"] = "malefic_rapture",
								["description"] = "After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied",
								["criteria"] = "( covenant.venthyr & ! talent.phantom_singularity.enabled & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready ) || ( covenant.night_fae & ! talent.phantom_singularity.enabled & dot.soul_rot.ticking & cooldown.summon_darkglare.ready ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.ready )",
								["list_name"] = "darkglare_prep",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
								["description"] = "Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "boss & ! talent.phantom_singularity.enabled & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [33]
							{
								["enabled"] = true,
								["description"] = "Catch-all item usage for anything not specified elsewhere",
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < ( 2 - action.shadow_bolt.in_flight ) || debuff.shadow_embrace.remains < 3 )",
								["action"] = "call_action_list",
								["list_name"] = "se",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "( dot.vile_taint.ticking || dot.impending_catastrophe_dot.ticking || dot.soul_rot.ticking ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.malefic_wrath.enabled & cooldown.soul_rot.remains > 20 & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.malefic_wrath.enabled & ( covenant.necrolord || covenant.kyrian ) & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
								["description"] = "Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & ( dot.phantom_singularity.ticking || cooldown.phantom_singularity.remains > 25 || boss & time_to_die < cooldown.phantom_singularity.remains ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack > 40 || buff.inevitable_demise.up & boss & fight_remains < 4",
								["action"] = "drain_life",
								["description"] = "Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks",
							}, -- [41]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant",
							}, -- [42]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [44]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [45]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["criteria"] = "refreshable & active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled )",
								["cycle_targets"] = 1,
							}, -- [46]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [47]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [48]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [49]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive & ! buff.grimoire_of_sacrifice.up",
								["action"] = "fel_domination",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [5]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.corruption > 0 & active_dot.agony > 0 & active_dot.unstable_affliction > 0 & ( ! talent.siphon_life.enabled || active_dot.siphon_life > 0 ) & ( dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled )",
								["var_name"] = "dots_ready",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "seed_of_corruption",
								["criteria"] = "spell_targets.seed_of_corruption_aoe >= 3",
								["line_cd"] = "10",
							}, -- [8]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "unstable_affliction",
								["enabled"] = true,
							}, -- [10]
						},
						["aoe"] = {
							{
								["action"] = "phantom_singularity",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled & can_seed",
								["action"] = "seed_of_corruption",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.refreshable",
								["action"] = "seed_of_corruption",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony < 4 & ! dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony >= 4 & refreshable & dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "unstable_affliction",
								["criteria"] = "! ticking & pvptalent.rampant_afflictions.enabled & active_dot.unstable_affliction < 3",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 1",
								["action"] = "vile_taint",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.venthyr & ( cooldown.impending_catastrophe.ready || dot.impending_catastrophe_dot.ticking ) & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) & ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & ( cooldown.soul_rot.ready || dot.soul_rot.ticking ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) )",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "dot.vile_taint.ticking",
								["action"] = "malefic_rapture",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "dot.soul_rot.ticking & ! talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! talent.vile_taint.enabled",
								["action"] = "malefic_rapture",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4",
								["action"] = "malefic_rapture",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "active_dot.siphon_life <= 3 & refreshable & ! dot.siphon_life.ticking",
								["cycle_targets"] = 1,
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack >= 50 || boss & buff.inevitable_demise.up & fight_remains < 5 || buff.inevitable_demise.stack >= 35 & dot.soul_rot.ticking",
								["action"] = "drain_life",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [26]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [27]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [28]
						},
						["item"] = {
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [1]
						},
						["se"] = {
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [1]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [3]
						},
						["necro_mw"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "dot.corruption.remains > 2 & dot.agony.remains > 2 & dot.unstable_affliction.remains > 2 & ( ! talent.siphon_life.enabled || dot.siphon_life.remains > 2 )",
								["var_name"] = "dots_ticking",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Trinkets align with PS for Shadow Embrace, DB for Haunt.",
								["criteria"] = "covenant.necrolord",
								["value"] = "cooldown.phantom_singularity.remains",
								["action"] = "variable",
								["value_else"] = "cooldown.decimating_bolt.remains",
								["var_name"] = "trinket_delay",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
								["description"] = "Burn soul shards if the fight will be ending soon.",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.haunt.remains < 2 + execute_time",
								["action"] = "haunt",
								["description"] = "Cast haunt to refresh before falloff.",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < gcd.max + execute_time",
								["action"] = "malefic_rapture",
								["description"] = "High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["description"] = "Fire delayed trinkets in anticipation of Decimating Bolt.",
								["criteria"] = "variable.trinket_delay < 20",
								["action"] = "empyreal_ordnance",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "variable.trinket_delay < 6",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "variable.trinket_delay < 8",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "variable.trinket_delay < 4",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & variable.dots_ticking",
								["action"] = "phantom_singularity",
								["description"] = "If the player is using Haunt, fire PS on cooldown then follow with DB",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & cooldown.phantom_singularity.remains > 0",
								["action"] = "decimating_bolt",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & variable.dots_ticking",
								["action"] = "decimating_bolt",
								["description"] = "If the player is using SE, fire DB on cooldown then following with PS",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & cooldown.decimating_bolt.remains > 0",
								["action"] = "phantom_singularity",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 6",
								["action"] = "unstable_affliction",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 4",
								["action"] = "agony",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 4",
								["action"] = "siphon_life",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 4",
								["action"] = "corruption",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < 2 * gcd.max + execute_time",
								["action"] = "malefic_rapture",
								["description"] = "Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Call darkglare_prep if Phantom Singularity is currently ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "darkglare_prep",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Utilize any other stat trinkets if Phantom Singularity is ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "stat_trinkets",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & ( buff.malefic_wrath.stack < 3 || buff.malefic_wrath.remains < 4.5 )",
								["action"] = "malefic_rapture",
								["description"] = "Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "( dot.phantom_singularity.ticking || time_to_die < cooldown.phantom_singularity.remains ) & ( buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "drain_soul",
								["description"] = "Additional Drain Soul cast when PS is ticking",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "agony",
								["description"] = "Low - priority dot refresh when refreshable.",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "unstable_affliction",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "corruption",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "talent.siphon_life.enabled & refreshable",
								["action"] = "siphon_life",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent_humanoid.up",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["description"] = "Fleshcraft to maintain Volatile Solvent.",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "dot.haunt.remains < 3",
								["action"] = "haunt",
								["description"] = "Low-priority haunt refresh.",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.decimating_bolt.up",
								["action"] = "drain_soul",
								["description"] = "Uninterruptible DS channel if we have the DB buff.",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & debuff.shadow_embrace.remains < 3 || debuff.shadow_embrace.stack < 3",
								["action"] = "drain_soul",
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
							}, -- [31]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [32]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [33]
						},
					},
					["author"] = "SimC",
				},
			},
			["notifications"] = {
				["y"] = 578.3702392578125,
				["x"] = -360.2960815429688,
			},
		},
		["Dalaran"] = {
			["runOnce"] = {
				["forceReloadClassDefaultOptions_20220306_265"] = true,
				["forceReloadClassDefaultOptions_20220306_267"] = true,
				["forceEnableAllClassesOnceDueToBug_20220225"] = true,
				["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
				["updateMaxRefreshToNewSpecOptions_20220222"] = true,
				["forceReloadAllDefaultPriorities_20220228"] = true,
				["forceReloadClassDefaultOptions_20220306_266"] = true,
				["resetAberrantPackageDates_20190728_1"] = true,
			},
			["specs"] = {
				[266] = {
					["settings"] = {
						["dcon_imps"] = 0,
					},
				},
				[267] = {
					["settings"] = {
						["default_pet"] = "summon_sayaad",
						["fixed_aoe_3_plus"] = false,
					},
				},
				[265] = {
					["settings"] = {
						["manage_ds_ticks"] = false,
					},
				},
			},
			["packs"] = {
				["Demonology"] = {
					["source"] = "SimC",
					["builtIn"] = true,
					["date"] = 20220615,
					["spec"] = 266,
					["desc"] = "Demonology Warlock\nhttps://github.com/simulationcraft/simc/\nJune 11, 2022\n\nChanges:\n- Spell Lock.\n- Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n- Power Siphon allowed pre-combat to proc instant Demonbolt.\n- PvP talent interrupt.\n- Avoid SB->HoG spam when you're not about to summon a Tyrant.\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Try to avoid wasting Demonic Core stacks.\n- Try to make opener priority only work if we can actually open with a Tyrant.\n- Improve compatibility with M+ builds.",
					["lists"] = {
						["slow_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["cycle_targets"] = 1,
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 - ( 2 * gcd.max * variable.use_bolt_timings )",
								["action"] = "soulletting_ruby",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 + ( 2 * variable.use_bolt_timings )",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "variable.buff_sync_cd < ( target.distance / 5 ) + 12 + ( 2 * variable.use_bolt_timings )",
							}, -- [3]
						},
						["hp_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "sinful_gladiators_emblem",
								["action"] = "sinful_gladiators_emblem",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "sinful_aspirants_emblem",
								["action"] = "sinful_aspirants_emblem",
							}, -- [2]
						},
						["covenant_ability"] = {
							{
								["enabled"] = true,
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & pet.demonic_tyrant.active",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.grove_invigoration.enabled & ! runeforge.decaying_soul_satchel.enabled & ( variable.next_tyrant_cd < 20 || variable.next_tyrant_cd > 30 )",
								["action"] = "soul_rot",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! ( soulbind.field_of_blossoms.enabled || soulbind.grove_invigoration.enabled ) & ! runeforge.decaying_soul_satchel.enabled & ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 18",
								["action"] = "soul_rot",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.lead_by_example.enabled & ( pet.demonic_tyrant.active & soul_shard < 2 || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.kevins_oozeling.enabled & ( pet.demonic_tyrant.active || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( soulbind.forgeborne_reveries.enabled || ( soulbind.volatile_solvent.enabled & ! soulbind.kevins_oozeling.enabled ) ) & ! pet.demonic_tyrant.active",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & ( ! talent.power_siphon.enabled || cooldown.power_siphon.remains < action.decimating_bolt.execute_time ) & ! cooldown.summon_demonic_tyrant.up & ( pet.demonic_tyrant.remains < 8 || cooldown.summon_demonic_tyrant.remains_expected < 30 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent.down",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.combat_meditation.enabled & pet.demonic_tyrant.active",
								["action"] = "scouring_tithe",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! soulbind.combat_meditation.enabled",
								["action"] = "scouring_tithe",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "pet.demonic_tyrant.active & soul_shard = 0",
								["action"] = "impending_catastrophe",
							}, -- [11]
						},
						["tyrant_setup"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 15",
								["action"] = "nether_portal",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 17 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) & ( cooldown.call_dreadstalkers.remains < 17 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time + action.shadow_bolt.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time )",
								["action"] = "grimoire_felguard",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( variable.next_tyrant_cd < 15 - ( action.summon_demonic_tyrant.execute_time ) & ( cooldown.call_dreadstalkers.remains < 15 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time ) ) || ( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 40 )",
								["action"] = "summon_vilefiend",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 12 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time )",
								["action"] = "call_dreadstalkers",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > first_tyrant_time & ( pet.dreadstalker.active & pet.dreadstalker.remains > action.summon_demonic_tyrant.execute_time ) & ( ! talent.summon_vilefiend.enabled || pet.vilefiend.active ) & ( soul_shard = 0 || ( pet.dreadstalker.active & pet.dreadstalker.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( pet.vilefiend.active & pet.vilefiend.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( buff.grimoire_felguard.up & buff.grimoire_felguard.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) )",
								["action"] = "summon_demonic_tyrant",
							}, -- [5]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spell_lock",
							}, -- [1]
							{
								["action"] = "call_felhunter",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "axe_toss",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.summon_demonic_tyrant.remains_expected",
								["var_name"] = "next_tyrant_cd",
								["criteria"] = "! soulbind.field_of_blossoms.enabled || cooldown.summon_demonic_tyrant.remains_expected > cooldown.soul_rot.remains_expected",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.soul_rot.remains_expected",
								["var_name"] = "next_tyrant_cd",
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & cooldown.summon_demonic_tyrant.remains_expected < cooldown.soul_rot.remains_expected",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "variable.next_tyrant_cd",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & ! in_opener",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "12",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & ! pet.dreadstalker.active",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & buff.wild_imps.stack > 0 & ! talent.vilefiend.enabled",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & prev_gcd.1.hand_of_guldan & talent.vilefiend.enabled",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.decimating_bolt.remains_expected",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "variable.use_bolt_timings",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up & ( ! talent.power_siphon.enabled || buff.power_siphon.up ) )",
								["list_name"] = "ogcd",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 2 * gcd",
								["action"] = "implosion",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "toggle.cooldowns & time < first_tyrant_time",
								["list_name"] = "opener",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || soulbind.combat_meditation.enabled || covenant.necrolord",
								["list_name"] = "covenant_ability",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "( ! variable.use_bolt_timings & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time || soulbind.refined_palate.enabled & variable.next_tyrant_cd < 38 ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["action"] = "potion",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "tyrant_setup",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 9 ) || ( pet.demonic_tyrant.active & pet.demonic_tyrant.remains < 6 * gcd.max )",
								["action"] = "demonic_strength",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & cooldown.summon_demonic_tyrant.remains_expected > 22",
								["action"] = "call_dreadstalkers",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( variable.next_tyrant_cd > 20 - 5 * ! runeforge.wilfreds_sigil_of_superior_summoning.enabled )",
								["action"] = "call_dreadstalkers",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.tyrant.down & variable.next_tyrant_cd > 5",
								["action"] = "bilescourge_bombers",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 30",
								["action"] = "grimoire_felguard",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 28",
								["action"] = "summon_vilefiend",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 15",
								["action"] = "summon_demonic_tyrant",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard = 5",
								["action"] = "hand_of_guldan",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & runeforge.balespiders_burning_core.enabled & buff.balespiders_burning_core.remains < 5",
								["action"] = "shadow_bolt",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "doom",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 3 & ( pet.dreadstalker.active || pet.demonic_tyrant.active )",
								["action"] = "hand_of_guldan",
								["description"] = "If Dreadstalkers are already active, no need to save shards",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.nether_portal.up & cooldown.call_dreadstalkers.remains > 2 * gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.wild_imps.stack > 2 & pet.dreadstalker.remains > 0.5 + cast_time + action.summon_demonic_tyrant.cast_time & pet.dreadstalker.remains < 0.5 + cast_time + action.summon_demonic_tyrant.cast_time + ( 0 >? ( 3 - soul_shard ) ) * action.shadow_bolt.cast_time & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time - gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [35]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.venthyr",
								["list_name"] = "covenant_ability",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sacrificed_souls.enabled",
								["action"] = "soul_strike",
								["description"] = "Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & buff.wild_imps.stack > 1 & buff.demonic_core.stack < 3",
								["action"] = "power_siphon",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up & buff.shard_of_annihilation.stack < 3",
								["action"] = "power_siphon",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd > 20",
								["action"] = "demonbolt",
								["description"] = "Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd < 12",
								["action"] = "demonbolt",
								["description"] = "During Tyrant setup, spend Demonic Cores for Soul Shards",
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & ( buff.demonic_core.stack > 2 || talent.sacrificed_souls.enabled )",
								["action"] = "demonbolt",
							}, -- [42]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up",
								["action"] = "power_siphon",
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & soul_shard < 4 & ( ( 6 - soul_shard ) * action.shadow_bolt.execute_time > pet.dreadstalker.remains - action.hand_of_guldan.execute_time - action.demonbolt.execute_time ) & buff.demonic_core.stack >= 1",
								["action"] = "demonbolt",
							}, -- [44]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & active_enemies > 1",
								["action"] = "demonbolt",
							}, -- [45]
							{
								["action"] = "soul_strike",
								["enabled"] = true,
							}, -- [46]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant_ability",
							}, -- [47]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 3 & variable.next_tyrant_cd > 25 & ( talent.demonic_calling.enabled || cooldown.call_dreadstalkers.remains > ( ( 5 - soul_shard ) * action.shadow_bolt.execute_time ) + action.hand_of_guldan.execute_time )",
								["action"] = "hand_of_guldan",
								["description"] = "If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now",
							}, -- [48]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & time > first_tyrant_time",
								["action"] = "doom",
								["cycle_targets"] = 1,
							}, -- [49]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & buff.demonic_core.remains < 1 + gcd.max * buff.demonic_core.stack",
								["action"] = "demonbolt",
								["description"] = "Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.",
							}, -- [50]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [51]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive",
								["action"] = "fel_domination",
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.wild_imps.stack > 1 & buff.demonic_core.stack <= 2",
								["action"] = "power_siphon",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ( boss || action.demonbolt.cast = 0 )",
								["action"] = "demonbolt",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ! ( boss || action.demonbolt.cast = 0 )",
								["action"] = "shadow_bolt",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "runeforge.shard_of_annihilation.enabled & ( runeforge.balespiders_burning_core.enabled + talent.sacrificed_souls.enabled + talent.power_siphon.enabled > 1 )",
								["var_name"] = "use_bolt_timings",
							}, -- [10]
						},
						["opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.decaying_soul_satchel.enabled",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["action"] = "nether_portal",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "grimoire_felguard",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "summon_vilefiend",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & cooldown.call_dreadstalkers.up",
								["action"] = "shadow_bolt",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & soul_shard < 5 & buff.balespiders_burning_core.stack < 4",
								["action"] = "shadow_bolt",
							}, -- [6]
							{
								["action"] = "call_dreadstalkers",
								["enabled"] = true,
							}, -- [7]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["var_name"] = "use_buff_trinkets",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.demonic_tyrant.active",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "variable.buff_sync_cd < 22",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "variable.use_bolt_timings & pet.demonic_tyrant.active",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "variable.buff_sync_cd < 7",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "talent.demonic_consumption.enabled & variable.next_tyrant_cd < 20",
								["list_name"] = "hp_trinks",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Effects that travel slowly from the target require additional, separate handling",
								["list_name"] = "slow_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
								["criteria"] = "variable.use_buff_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t1.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t2.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "time > first_tyrant_time & variable.buff_sync_cd > 20",
								["list_name"] = "pure_damage_trinks",
							}, -- [12]
						},
						["pure_damage_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
								["criteria"] = "active_enemies = 1",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vise",
								["action"] = "ebonsoul_vise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [10]
						},
						["ogcd"] = {
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20220615,
					["warnings"] = "WARNING:  The import for 'slow_trinkets' required some automated changes.\nLine 1: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 2: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 3: Converted SimC syntax % to Lua division operator (/) (1x).\n\nWARNING:  The import for 'covenant_ability' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 4: Removed min:X check (not available in emulation) (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 5: Removed min:X check (not available in emulation) (1x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 9: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 10: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'tyrant_setup' required some automated changes.\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 16: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 17: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'trinkets' required some automated changes.\nLine 10: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 11: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\n\nWARNING:  The import for 'opener' required some automated changes.\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\n\nImported 10 action lists.\n",
					["author"] = "",
					["profile"] = "## Demonology Warlock\n## https://github.com/simulationcraft/simc/\n## June 11, 2022\n\n## Changes:\n## - Spell Lock.\n## - Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n## - Power Siphon allowed pre-combat to proc instant Demonbolt.\n## - PvP talent interrupt.\n## - Avoid SB->HoG spam when you're not about to summon a Tyrant.\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Try to avoid wasting Demonic Core stacks.\n## - Try to make opener priority only work if we can actually open with a Tyrant.\n## - Improve compatibility with M+ builds.\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/power_siphon,if=buff.wild_imps.stack>1&buff.demonic_core.stack<=2\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/demonbolt,if=soul_shards<5&(boss||action.demonbolt.cast=0)\nactions.precombat+=/shadow_bolt,if=soul_shards<5&!(boss||action.demonbolt.cast=0)\n## actions.precombat+=/variable,name=first_tyrant_time,op=set,value=10\n## actions.precombat+=/variable,name=in_opener,op=set,value=1\nactions.precombat+=/variable,name=use_bolt_timings,op=set,value=runeforge.shard_of_annihilation&(runeforge.balespiders_burning_core+talent.sacrificed_souls.enabled+talent.power_siphon.enabled>1)\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions+=/call_felhunter\nactions+=/axe_toss\nactions+=/devour_magic\nactions=variable,name=next_tyrant_cd,op=set,value=cooldown.summon_demonic_tyrant.remains_expected,if=!soulbind.field_of_blossoms||cooldown.summon_demonic_tyrant.remains_expected>cooldown.soul_rot.remains_expected\nactions+=/variable,name=next_tyrant_cd,op=set,value=cooldown.soul_rot.remains_expected,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&cooldown.summon_demonic_tyrant.remains_expected<cooldown.soul_rot.remains_expected\n## actions+=/variable,name=in_opener,op=set,value=0,if=pet.demonic_tyrant.active\nactions+=/variable,name=buff_sync_cd,op=set,value=variable.next_tyrant_cd,if=!variable.use_bolt_timings&!in_opener\nactions+=/variable,name=buff_sync_cd,op=set,value=12,if=!variable.use_bolt_timings&in_opener&!pet.dreadstalker.active\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&buff.wild_imps.stack>0&!talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&prev_gcd.1.hand_of_guldan&talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=cooldown.decimating_bolt.remains_expected,if=variable.use_bolt_timings\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=ogcd,if=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up&(!talent.power_siphon.enabled||buff.power_siphon.up))\nactions+=/implosion,if=boss&fight_remains<2*gcd\nactions+=/call_action_list,name=opener,strict=1,if=toggle.cooldowns&time<first_tyrant_time\nactions+=/call_action_list,name=covenant_ability,strict=1,if=soulbind.grove_invigoration||soulbind.field_of_blossoms||soulbind.combat_meditation||covenant.necrolord\nactions+=/potion,if=(!variable.use_bolt_timings&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time||soulbind.refined_palate&variable.next_tyrant_cd<38)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions+=/call_action_list,name=tyrant_setup\nactions+=/demonic_strength,if=(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>9)||(pet.demonic_tyrant.active&pet.demonic_tyrant.remains<6*gcd.max)\nactions+=/call_dreadstalkers,if=variable.use_bolt_timings&cooldown.summon_demonic_tyrant.remains_expected>22\nactions+=/call_dreadstalkers,if=!variable.use_bolt_timings&(variable.next_tyrant_cd>20-5*!runeforge.wilfreds_sigil_of_superior_summoning)\nactions+=/bilescourge_bombers,if=buff.tyrant.down&variable.next_tyrant_cd>5\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/grimoire_felguard,if=boss&time_to_die<30\nactions+=/summon_vilefiend,if=boss&time_to_die<28\nactions+=/summon_demonic_tyrant,if=boss&time_to_die<15\nactions+=/hand_of_guldan,if=soul_shard=5\nactions+=/shadow_bolt,if=soul_shard<5&runeforge.balespiders_burning_core&buff.balespiders_burning_core.remains<5\nactions+=/doom,if=refreshable\n# If Dreadstalkers are already active, no need to save shards\nactions+=/hand_of_guldan,if=soul_shard>=3&(pet.dreadstalker.active||pet.demonic_tyrant.active)\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.nether_portal.up&cooldown.call_dreadstalkers.remains>2*gcd.max\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.wild_imps.stack>2&pet.dreadstalker.remains>0.5+cast_time+action.summon_demonic_tyrant.cast_time&pet.dreadstalker.remains<0.5+cast_time+action.summon_demonic_tyrant.cast_time+(0>?(3-soul_shard))*action.shadow_bolt.cast_time&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time-gcd.max\nactions+=/call_action_list,name=covenant_ability,strict=1,if=!covenant.venthyr\n# Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority\nactions+=/soul_strike,if=!talent.sacrificed_souls.enabled\nactions+=/power_siphon,if=!variable.use_bolt_timings&buff.wild_imps.stack>1&buff.demonic_core.stack<3\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up&buff.shard_of_annihilation.stack<3\n# Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd>20\n# During Tyrant setup, spend Demonic Cores for Soul Shards\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd<12\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&(buff.demonic_core.stack>2||talent.sacrificed_souls.enabled)\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up\nactions+=/demonbolt,if=set_bonus.tier28_2pc&soul_shard<4&((6-soul_shard)*action.shadow_bolt.execute_time>pet.dreadstalker.remains-action.hand_of_guldan.execute_time-action.demonbolt.execute_time)&buff.demonic_core.stack>=1\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&active_enemies>1\nactions+=/soul_strike\nactions+=/call_action_list,name=covenant_ability\n# If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now\nactions+=/hand_of_guldan,if=soul_shard>=3&variable.next_tyrant_cd>25&(talent.demonic_calling.enabled||cooldown.call_dreadstalkers.remains>((5-soul_shard)*action.shadow_bolt.execute_time)+action.hand_of_guldan.execute_time)\nactions+=/doom,cycle_targets=1,if=refreshable&time>first_tyrant_time\n# Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.\nactions+=/demonbolt,if=buff.demonic_core.react&buff.demonic_core.remains<1+gcd.max*buff.demonic_core.stack\nactions+=/shadow_bolt\n\nactions.slow_trinkets=use_item,name=soulletting_ruby,cycle_targets=1,if=variable.buff_sync_cd<target.distance%5-(2*gcd.max*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=sunblood_amethyst,if=variable.buff_sync_cd<target.distance%5+(2*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=empyreal_ordnance,if=variable.buff_sync_cd<(target.distance%5)+12+(2*variable.use_bolt_timings)\n\nactions.covenant_ability=soul_rot,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&pet.demonic_tyrant.active\nactions.covenant_ability+=/soul_rot,if=soulbind.grove_invigoration&!runeforge.decaying_soul_satchel&(variable.next_tyrant_cd<20||variable.next_tyrant_cd>30)\nactions.covenant_ability+=/soul_rot,if=!(soulbind.field_of_blossoms||soulbind.grove_invigoration)&!runeforge.decaying_soul_satchel&!pet.demonic_tyrant.active&variable.next_tyrant_cd>18\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.lead_by_example&(pet.demonic_tyrant.active&soul_shard<2||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.kevins_oozeling&(pet.demonic_tyrant.active||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=!variable.use_bolt_timings&(soulbind.forgeborne_reveries||(soulbind.volatile_solvent&!soulbind.kevins_oozeling))&!pet.demonic_tyrant.active\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=variable.use_bolt_timings&(!talent.power_siphon||cooldown.power_siphon.remains<action.decimating_bolt.execute_time)&!cooldown.summon_demonic_tyrant.up&(pet.demonic_tyrant.remains<8||cooldown.summon_demonic_tyrant.remains_expected<30)\nactions.covenant_ability+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent.down,interrupt_if=buff.volatile_solvent.up\nactions.covenant_ability+=/scouring_tithe,if=soulbind.combat_meditation&pet.demonic_tyrant.active\nactions.covenant_ability+=/scouring_tithe,if=!soulbind.combat_meditation\nactions.covenant_ability+=/impending_catastrophe,if=pet.demonic_tyrant.active&soul_shard=0\n\nactions.hp_trinks=use_item,name=sinful_gladiators_emblem\nactions.hp_trinks+=/use_item,name=sinful_aspirants_emblem\n\nactions.ogcd=berserking\nactions.ogcd+=/blood_fury\nactions.ogcd+=/fireblood\nactions.ogcd+=/use_items\n\nactions.opener=soul_rot,if=soulbind.grove_invigoration,if=!runeforge.decaying_soul_satchel\nactions.opener+=/nether_portal\nactions.opener+=/grimoire_felguard\nactions.opener+=/summon_vilefiend\nactions.opener+=/shadow_bolt,if=soul_shard<5&cooldown.call_dreadstalkers.up\nactions.opener+=/shadow_bolt,if=variable.use_bolt_timings&soul_shard<5&buff.balespiders_burning_core.stack<4\nactions.opener+=/call_dreadstalkers\n\nactions.pure_damage_trinks=use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=resonant_reservoir\nactions.pure_damage_trinks+=/use_item,name=architects_ingenuity_core\nactions.pure_damage_trinks+=/use_item,name=cosmic_gladiators_resonator\nactions.pure_damage_trinks+=/use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=soul_igniter\nactions.pure_damage_trinks+=/use_item,name=glyph_of_assimilation,if=active_enemies=1\nactions.pure_damage_trinks+=/use_item,name=darkmoon_deck_putrescence\nactions.pure_damage_trinks+=/use_item,name=ebonsoul_vise\nactions.pure_damage_trinks+=/use_item,name=unchained_gladiators_shackles\n\nactions.trinkets=variable,name=use_buff_trinkets,value=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=shadowed_orb_of_torment,if=variable.buff_sync_cd<22\nactions.trinkets+=/use_item,name=moonlit_prism,if=variable.use_bolt_timings&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=grim_eclipse,if=variable.buff_sync_cd<7\nactions.trinkets+=/call_action_list,name=hp_trinks,if=talent.demonic_consumption.enabled&variable.next_tyrant_cd<20\n# Effects that travel slowly from the target require additional, separate handling\nactions.trinkets+=/call_action_list,name=slow_trinkets\nactions.trinkets+=/use_item,name=overflowing_anima_cage,if=variable.use_buff_trinkets\nactions.trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/call_action_list,name=pure_damage_trinks,if=time>first_tyrant_time&variable.buff_sync_cd>20\n\nactions.tyrant_setup=nether_portal,if=variable.next_tyrant_cd<15\nactions.tyrant_setup+=/grimoire_felguard,if=variable.next_tyrant_cd<17-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)&(cooldown.call_dreadstalkers.remains<17-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time+action.shadow_bolt.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time)\nactions.tyrant_setup+=/summon_vilefiend,if=(variable.next_tyrant_cd<15-(action.summon_demonic_tyrant.execute_time)&(cooldown.call_dreadstalkers.remains<15-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time))||(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>40)\nactions.tyrant_setup+=/call_dreadstalkers,if=variable.next_tyrant_cd<12-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)\nactions.tyrant_setup+=/summon_demonic_tyrant,if=time>first_tyrant_time&(pet.dreadstalker.active&pet.dreadstalker.remains>action.summon_demonic_tyrant.execute_time)&(!talent.summon_vilefiend.enabled||pet.vilefiend.active)&(soul_shard=0||(pet.dreadstalker.active&pet.dreadstalker.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(pet.vilefiend.active&pet.vilefiend.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(buff.grimoire_felguard.up&buff.grimoire_felguard.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time))",
				},
				["Destruction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220604,
					["author"] = "SimC",
					["desc"] = "Destruction Warlock\nMay 31, 2022\n\nChanges:\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Avoid spamming Immolate.\n- Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).",
					["lists"] = {
						["havoc"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1 & soul_shard <= 4",
								["action"] = "conflagrate",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "soul_fire",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & soulbind.lead_by_example.enabled",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "scouring_tithe",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & remains < duration * 0.5 || ! talent.internal_combustion.enabled & refreshable",
								["action"] = "immolate",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & ! ( set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled )",
								["action"] = "chaos_bolt",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled",
								["action"] = "rain_of_fire",
							}, -- [7]
							{
								["action"] = "shadowburn",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "incinerate",
							}, -- [9]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["action"] = "fel_domination",
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
								["criteria"] = "time > 0 & ! pet.alive",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [9]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active & ( ! cooldown.havoc.ready || active_enemies > 3 )",
								["action"] = "rain_of_fire",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc",
								["action"] = "rain_of_fire",
							}, -- [2]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "dot.immolate.remains > cast_time",
								["action"] = "channel_demonfire",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "active_enemies < 5 & remains < 5 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "active_enemies < 4",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["action"] = "rain_of_fire",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.fire_and_brimstone.enabled & buff.backdraft.up & soul_shard < 5 - 0.2 * active_enemies",
								["action"] = "incinerate",
							}, -- [12]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down",
								["action"] = "conflagrate",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "target.health.pct < 20",
								["action"] = "shadowburn",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [18]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "cooldown.summon_infernal.remains < 3 || boss & time_to_die < 42",
								["name"] = "shadowed_orb_of_torment",
							}, -- [1]
							{
								["action"] = "summon_infernal",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & cooldown.summon_infernal.remains_expected > time_to_die",
								["action"] = "dark_soul_instability",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "potion",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "berserking",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "blood_fury",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "fireblood",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
								["name"] = "scars_of_fraternal_strife",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.infernal.active",
								["name"] = "scars_of_fraternal_strife",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & time_to_die < 21",
								["action"] = "use_items",
							}, -- [10]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spell_lock",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "havoc_active & active_enemies > 1 & active_enemies < 5 - talent.inferno.enabled + ( talent.inferno.enabled & talent.internal_combustion.enabled )",
								["list_name"] = "havoc",
							}, -- [2]
							{
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.roaring_blaze.enabled & debuff.roaring_blaze.remains < 1.5",
								["action"] = "conflagrate",
							}, -- [4]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "settings.fixed_aoe_3_plus & active_enemies > 2 || ! settings.fixed_aoe_3_plus & active_enemies > 2 - set_bonus.tier28_4pc",
								["list_name"] = "aoe",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "soul_fire",
								["criteria"] = "refreshable & soul_shard <= 4 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "remains < 3 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & action.chaos_bolt.in_flight & remains < duration * 0.5",
								["action"] = "immolate",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( pet.infernal.active || pet.blasphemy.active ) & soul_shard >= 4",
								["action"] = "chaos_bolt",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [11]
							{
								["action"] = "channel_demonfire",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "dot.immolate.remains > dot.immolate.duration * 0.5 || ! talent.internal_combustion.enabled",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.odr_shawl_of_the_ymirjar.equipped",
								["action"] = "havoc",
							}, -- [18]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies > 1 & cooldown.havoc.remains <= 10 || buff.ritual_of_ruin.up & talent.rain_of_chaos.enabled",
								["var_name"] = "pool_soul_shards",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1.5 - 0.3 * talent.flashover.enabled & ! variable.pool_soul_shards",
								["action"] = "conflagrate",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || buff.rain_of_chaos.remains > cast_time",
								["action"] = "chaos_bolt",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.up & ! variable.pool_soul_shards",
								["action"] = "chaos_bolt",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.eradication.enabled & ! variable.pool_soul_shards & debuff.eradication.remains < cast_time",
								["action"] = "chaos_bolt",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pool_soul_shards || soul_shard >= 4.5",
								["action"] = "shadowburn",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 3.5",
								["action"] = "chaos_bolt",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 5 & target.time_to_die > cast_time + travel_time",
								["action"] = "chaos_bolt",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 || target.time_to_die < gcd",
								["action"] = "conflagrate",
							}, -- [27]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [28]
						},
					},
					["version"] = 20220604,
					["warnings"] = "WARNING:  The import for 'default' required some automated changes.\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "## Destruction Warlock\n## May 31, 2022\n\n## Changes:\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Avoid spamming Immolate.\n## - Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/soul_fire\nactions.precombat+=/incinerate\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions=call_action_list,name=havoc,strict=1,if=havoc_active&active_enemies>1&active_enemies<5-talent.inferno.enabled+(talent.inferno.enabled&talent.internal_combustion.enabled)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/conflagrate,if=talent.roaring_blaze.enabled&debuff.roaring_blaze.remains<1.5\nactions+=/cataclysm\nactions+=/call_action_list,name=aoe,strict=1,if=settings.fixed_aoe_3_plus&active_enemies>2||!settings.fixed_aoe_3_plus&active_enemies>2-set_bonus.tier28_4pc\nactions+=/soul_fire,cycle_targets=1,if=refreshable&soul_shard<=4&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,cycle_targets=1,if=remains<3&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,if=talent.internal_combustion.enabled&action.chaos_bolt.in_flight&remains<duration*0.5\nactions+=/chaos_bolt,if=(pet.infernal.active||pet.blasphemy.active)&soul_shard>=4\nactions+=/call_action_list,name=cds\nactions+=/channel_demonfire\nactions+=/scouring_tithe\nactions+=/decimating_bolt\nactions+=/havoc,cycle_targets=1,if=dot.immolate.remains>dot.immolate.duration*0.5||!talent.internal_combustion.enabled\nactions+=/impending_catastrophe\nactions+=/soul_rot\nactions+=/havoc,if=runeforge.odr_shawl_of_the_ymirjar.equipped\nactions+=/variable,name=pool_soul_shards,value=active_enemies>1&cooldown.havoc.remains<=10||buff.ritual_of_ruin.up&talent.rain_of_chaos\nactions+=/conflagrate,if=buff.backdraft.down&soul_shard>=1.5-0.3*talent.flashover.enabled&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=pet.infernal.active||buff.rain_of_chaos.remains>cast_time\nactions+=/chaos_bolt,if=buff.backdraft.up&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=talent.eradication&!variable.pool_soul_shards&debuff.eradication.remains<cast_time\nactions+=/shadowburn,if=!variable.pool_soul_shards||soul_shard>=4.5\nactions+=/chaos_bolt,if=soul_shard>3.5\nactions+=/chaos_bolt,if=boss&fight_remains<5&target.time_to_die>cast_time+travel_time\nactions+=/conflagrate,if=charges>1||target.time_to_die<gcd\nactions+=/incinerate\n\nactions.aoe=rain_of_fire,if=pet.infernal.active&(!cooldown.havoc.ready||active_enemies>3)\nactions.aoe+=/rain_of_fire,if=set_bonus.tier28_4pc\nactions.aoe+=/soul_rot\nactions.aoe+=/impending_catastrophe\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains>cast_time\nactions.aoe+=/immolate,cycle_targets=1,if=active_enemies<5&remains<5&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions.aoe+=/call_action_list,name=cds\nactions.aoe+=/havoc,cycle_targets=1,if=active_enemies<4\nactions.aoe+=/rain_of_fire\nactions.aoe+=/havoc,cycle_targets=1\nactions.aoe+=/decimating_bolt\nactions.aoe+=/incinerate,if=talent.fire_and_brimstone.enabled&buff.backdraft.up&soul_shard<5-0.2*active_enemies\nactions.aoe+=/soul_fire\nactions.aoe+=/conflagrate,if=buff.backdraft.down\nactions.aoe+=/shadowburn,if=target.health.pct<20\nactions.aoe+=/immolate,cycle_targets=1,if=refreshable\nactions.aoe+=/scouring_tithe\nactions.aoe+=/incinerate\n\nactions.cds=use_item,name=shadowed_orb_of_torment,if=cooldown.summon_infernal.remains<3||boss&time_to_die<42\nactions.cds+=/summon_infernal\nactions.cds+=/dark_soul_instability,if=pet.infernal.active||boss&cooldown.summon_infernal.remains_expected>time_to_die\nactions.cds+=/potion,if=pet.infernal.active\nactions.cds+=/berserking,if=pet.infernal.active\nactions.cds+=/blood_fury,if=pet.infernal.active\nactions.cds+=/fireblood,if=pet.infernal.active\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.infernal.active\nactions.cds+=/use_items,if=pet.infernal.active||boss&time_to_die<21\n\nactions.havoc=conflagrate,if=buff.backdraft.down&soul_shard>=1&soul_shard<=4\nactions.havoc+=/soul_fire,if=cast_time<havoc_remains\nactions.havoc+=/decimating_bolt,if=cast_time<havoc_remains&soulbind.lead_by_example.enabled\nactions.havoc+=/scouring_tithe,if=cast_time<havoc_remains\nactions.havoc+=/immolate,if=talent.internal_combustion.enabled&remains<duration*0.5||!talent.internal_combustion.enabled&refreshable\nactions.havoc+=/chaos_bolt,if=cast_time<havoc_remains&!(set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled)\nactions.havoc+=/rain_of_fire,if=set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled\nactions.havoc+=/shadowburn\nactions.havoc+=/incinerate,if=cast_time<havoc_remains",
					["spec"] = 267,
				},
				["Affliction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220617,
					["spec"] = 265,
					["desc"] = "Affliction Warlock\nJune 17, 2022\n\nChanges:\n- Added Spell Lock.\n- Added Devour Magic.\n- Added breakchannel logic for Drain Soul.\n- Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n- Enable Rampant Afflictions PvP talent.\n- Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n- Condense some Darkglare Prep calls to reduce computation time.\n- Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n- Only Seed once pre-pull.\n- Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Integrate Necro MW priority list.\n- Don't break Drain Soul with Decimating Bolt buff.",
					["profile"] = "## Affliction Warlock\n## June 17, 2022\n\n## Changes:\n## - Added Spell Lock.\n## - Added Devour Magic.\n## - Added breakchannel logic for Drain Soul.\n## - Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n## - Enable Rampant Afflictions PvP talent.\n## - Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n## - Condense some Darkglare Prep calls to reduce computation time.\n## - Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n## - Only Seed once pre-pull.\n## - Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Integrate Necro MW priority list.\n## - Don't break Drain Soul with Decimating Bolt buff.\n\nactions.precombat=fel_domination,if=time>0&!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/fleshcraft\nactions.precombat+=/variable,name=dots_ready,value=active_dot.corruption>0&active_dot.agony>0&active_dot.unstable_affliction>0&(!talent.siphon_life.enabled||active_dot.siphon_life>0)&(dot.phantom_singularity.ticking||!talent.phantom_singularity.enabled)\nactions.precombat+=/seed_of_corruption,line_cd=10,if=spell_targets.seed_of_corruption_aoe>=3\nactions.precombat+=/haunt\nactions.precombat+=/unstable_affliction\n\n## Executed every time the actor is available.\nactions=spell_lock\nactions+=/devour_magic\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>3\nactions+=/malefic_rapture,if=buff.calamitous_crescendo.up\n# Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.\nactions+=/run_action_list,name=necro_mw,strict=1,if=covenant.necrolord&runeforge.malefic_wrath&active_enemies=1&talent.phantom_singularity\n# Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.\nactions+=/call_action_list,name=trinket_split_check\nactions+=/call_action_list,name=delayed_trinkets\nactions+=/call_action_list,name=stat_trinkets,strict=1,if=(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking||dot.phantom_singularity.ticking)&soul_shard>3||dot.vile_taint.ticking||talent.sow_the_seeds\nactions+=/call_action_list,name=damage_trinkets,if=covenant.night_fae&(!variable.trinket_split||cooldown.soul_rot.remains>20||(variable.trinket_one&cooldown.soul_rot.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.soul_rot.remains<trinket.2.cooldown.remains))||covenant.venthyr&(!variable.trinket_split||cooldown.impending_catastrophe.remains>20||(variable.trinket_one&cooldown.impending_catastrophe.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.impending_catastrophe.remains<trinket.2.cooldown.remains))||(covenant.necrolord||covenant.kyrian||covenant.none)&(!variable.trinket_split||cooldown.phantom_singularity.remains>20||(variable.trinket_one&cooldown.phantom_singularity.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.phantom_singularity.remains<trinket.2.cooldown.remains))||!talent.phantom_singularity.enabled&(!variable.trinket_split||cooldown.summon_darkglare.remains>20||(variable.trinket_one&cooldown.summon_darkglare.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.summon_darkglare.remains<trinket.2.cooldown.remains))\n# Burn soul shards if fight is almost over\nactions+=/malefic_rapture,if=boss&fight_remains<execute_time*soul_shard&dot.unstable_affliction.ticking\n# If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||((covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2)\n# Refresh dots early if going into a shard spending phase\nactions+=/call_action_list,name=dot_prep,if=(covenant.night_fae&!dot.soul_rot.ticking&cooldown.soul_rot.remains<4)||(covenant.venthyr&!dot.impending_catastrophe_dot.ticking&cooldown.impending_catastrophe.remains<4)||((covenant.necrolord||covenant.kyrian||covenant.none)&talent.phantom_singularity&!dot.phantom_singularity.ticking&cooldown.phantom_singularity.remains<4)\n# If Phantom Singularity is ticking, it is safe to use Dark Soul\nactions+=/dark_soul,if=dot.phantom_singularity.ticking\nactions+=/dark_soul,if=!talent.phantom_singularity&(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking)\n# Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)\nactions+=/phantom_singularity,if=covenant.night_fae&time>5&cooldown.soul_rot.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=covenant.venthyr&time>5&cooldown.impending_catastrophe.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt\nactions+=/phantom_singularity,if=covenant.necrolord&runeforge.malefic_wrath&time>5&cooldown.decimating_bolt.remains<3&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Other covenants (including non-MW Necro) cast PS on cooldown\nactions+=/phantom_singularity,if=(covenant.kyrian||covenant.none||(covenant.necrolord&!runeforge.malefic_wrath))&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=boss&fight_remains<16\n# If Phantom Singularity is ticking, it's time to use other major dots\nactions+=/call_action_list,name=covenant,strict=1,if=dot.phantom_singularity.ticking&(covenant.night_fae||covenant.venthyr)\nactions+=/agony,cycle_targets=1,if=dot.agony.remains<4\nactions+=/haunt\n# Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.\nactions+=/seed_of_corruption,if=active_enemies>2&talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight\nactions+=/seed_of_corruption,if=active_enemies>2&talent.siphon_life&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.remains<4\nactions+=/vile_taint,if=(soul_shard>1||active_enemies>2)&cooldown.summon_darkglare.remains>12\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&dot.unstable_affliction.remains<4\nactions+=/siphon_life,cycle_targets=1,if=dot.siphon_life.remains<4\nactions+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\n# Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption\nactions+=/corruption,cycle_targets=1,if=active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)&dot.corruption.remains<2\n# After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping\nactions+=/malefic_rapture,if=soul_shard>4&time>21\n# When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&!talent.phantom_singularity&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready)||(covenant.night_fae&!talent.phantom_singularity&dot.soul_rot.ticking&cooldown.summon_darkglare.ready)||((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.ready)\n# Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses\nactions+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions+=/dark_soul,if=boss&!talent.phantom_singularity&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\n# Catch-all item usage for anything not specified elsewhere\nactions+=/call_action_list,name=item\n## Refresh Shadow Embrace before spending shards on Malefic Rapture\nactions+=/call_action_list,name=se,if=talent.shadow_embrace.enabled&(debuff.shadow_embrace.stack<(2-action.shadow_bolt.in_flight)||debuff.shadow_embrace.remains<3)\n# Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff\nactions+=/malefic_rapture,if=(dot.vile_taint.ticking||dot.impending_catastrophe_dot.ticking||dot.soul_rot.ticking)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\n# Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&cooldown.soul_rot.remains>20&buff.malefic_wrath.remains<4\n# Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&(covenant.necrolord||covenant.kyrian)&buff.malefic_wrath.remains<4\n# Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it\nactions+=/malefic_rapture,if=talent.phantom_singularity&(dot.phantom_singularity.ticking||cooldown.phantom_singularity.remains>25||boss&time_to_die<cooldown.phantom_singularity.remains)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\nactions+=/malefic_rapture,if=talent.sow_the_seeds\n# Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks\nactions+=/drain_life,if=buff.inevitable_demise.stack>40||buff.inevitable_demise.up&boss&fight_remains<4\nactions+=/call_action_list,name=covenant\nactions+=/agony,cycle_targets=1,if=refreshable\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions+=/siphon_life,cycle_targets=1,if=refreshable\nactions+=/corruption,cycle_targets=1,if=refreshable&active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions+=/shadow_bolt\n\nactions.aoe=phantom_singularity\nactions.aoe+=/haunt\nactions.aoe+=/call_action_list,name=darkglare_prep,if=covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||(covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2\nactions.aoe+=/seed_of_corruption,if=talent.sow_the_seeds&can_seed\nactions.aoe+=/seed_of_corruption,if=!talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.refreshable\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony<4&!dot.agony.ticking\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony>=4&refreshable&dot.agony.ticking\nactions.aoe+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions.aoe+=/unstable_affliction,cycle_targets=1,if=!ticking&pvptalent.rampant_afflictions.enabled&active_dot.unstable_affliction<3\nactions.aoe+=/vile_taint,if=soul_shard>1\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.aoe+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&(cooldown.impending_catastrophe.ready||dot.impending_catastrophe_dot.ticking)&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))&((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&(cooldown.soul_rot.ready||dot.soul_rot.ticking)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\nactions.aoe+=/call_action_list,name=item\nactions.aoe+=/call_action_list,name=delayed_trinkets\nactions.aoe+=/call_action_list,name=damage_trinkets\nactions.aoe+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking||!talent.phantom_singularity\nactions.aoe+=/malefic_rapture,if=dot.vile_taint.ticking\nactions.aoe+=/malefic_rapture,if=dot.soul_rot.ticking&!talent.sow_the_seeds\nactions.aoe+=/malefic_rapture,if=!talent.vile_taint\nactions.aoe+=/malefic_rapture,if=soul_shard>4\nactions.aoe+=/siphon_life,cycle_targets=1,if=active_dot.siphon_life<=3&refreshable&!dot.siphon_life.ticking\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=covenant.necrolord\nactions.aoe+=/drain_life,if=buff.inevitable_demise.stack>=50||boss&buff.inevitable_demise.up&fight_remains<5||buff.inevitable_demise.stack>=35&dot.soul_rot.ticking\nactions.aoe+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions.aoe+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.aoe+=/shadow_bolt\n\nactions.covenant=impending_catastrophe,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<10||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/impending_catastrophe,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/decimating_bolt,if=cooldown.summon_darkglare.remains>5&(debuff.haunt.remains>4||!talent.haunt)\nactions.covenant+=/soul_rot,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<5||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/soul_rot,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/scouring_tithe\n\nactions.damage_trinkets=use_item,name=soul_igniter\nactions.damage_trinkets+=/use_item,name=dreadfire_vessel\nactions.damage_trinkets+=/use_item,name=glyph_of_assimilation\nactions.damage_trinkets+=/use_item,name=unchained_gladiators_shackles\nactions.damage_trinkets+=/use_item,name=ebonsoul_vice\nactions.damage_trinkets+=/use_item,name=resonant_reservoir\nactions.damage_trinkets+=/use_item,name=architects_ingenuity_core\nactions.damage_trinkets+=/use_item,name=grim_eclipse\nactions.damage_trinkets+=/use_item,name=toe_knees_promise\nactions.damage_trinkets+=/use_item,name=mrrgrias_favor\nactions.damage_trinkets+=/use_item,name=cosmic_gladiators_resonator\n\nactions.darkglare_prep=vile_taint\nactions.darkglare_prep+=/dark_soul\nactions.darkglare_prep+=/potion\nactions.darkglare_prep+=/fireblood\nactions.darkglare_prep+=/blood_fury\nactions.darkglare_prep+=/berserking\nactions.darkglare_prep+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.darkglare_prep+=/summon_darkglare\n\nactions.delayed_trinkets=use_item,name=grim_eclipse,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=empyreal_ordnance,if=(covenant.night_fae&cooldown.soul_rot.remains<20)||(covenant.venthyr&cooldown.impending_catastrophe.remains<20)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=sunblood_amethyst,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=soulletting_ruby,if=(covenant.night_fae&cooldown.soul_rot.remains<8)||(covenant.venthyr&cooldown.impending_catastrophe.remains<8)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=shadowed_orb_of_torment,if=(covenant.night_fae&cooldown.soul_rot.remains<4)||(covenant.venthyr&cooldown.impending_catastrophe.remains<4)||(covenant.necrolord||covenant.kyrian||covenant.none)\n\nactions.dot_prep=agony,if=dot.agony.remains<8&cooldown.summon_darkglare.remains>dot.agony.remains\nactions.dot_prep+=/siphon_life,if=dot.siphon_life.remains<8&cooldown.summon_darkglare.remains>dot.siphon_life.remains\nactions.dot_prep+=/unstable_affliction,if=dot.unstable_affliction.remains<8&cooldown.summon_darkglare.remains>dot.unstable_affliction.remains\nactions.dot_prep+=/corruption,if=dot.corruption.remains<8&cooldown.summon_darkglare.remains>dot.corruption.remains\n\nactions.item=use_items\n\nactions.necro_mw=variable,name=dots_ticking,value=dot.corruption.remains>2&dot.agony.remains>2&dot.unstable_affliction.remains>2&(!talent.siphon_life||dot.siphon_life.remains>2)\n# Trinkets align with PS for Shadow Embrace, DB for Haunt.\nactions.necro_mw+=/variable,name=trinket_delay,value=cooldown.phantom_singularity.remains,value_else=cooldown.decimating_bolt.remains,op=setif,condition=talent.shadow_embrace,if=covenant.necrolord\n# Burn soul shards if the fight will be ending soon.\nactions.necro_mw+=/malefic_rapture,if=time_to_die<execute_time*soul_shard&dot.unstable_affliction.ticking\n# Cast haunt to refresh before falloff.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<2+execute_time\n# High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<gcd.max+execute_time\n# Fire delayed trinkets in anticipation of Decimating Bolt.\nactions.necro_mw+=/use_item,name=empyreal_ordnance,if=variable.trinket_delay<20\nactions.necro_mw+=/use_item,name=sunblood_amethyst,if=variable.trinket_delay<6\nactions.necro_mw+=/use_item,name=soulletting_ruby,if=variable.trinket_delay<8\nactions.necro_mw+=/use_item,name=shadowed_orb_of_torment,if=variable.trinket_delay<4\n# If the player is using Haunt, fire PS on cooldown then follow with DB\nactions.necro_mw+=/phantom_singularity,if=talent.haunt&variable.dots_ticking\nactions.necro_mw+=/decimating_bolt,if=talent.haunt&cooldown.phantom_singularity.remains>0\n# If the player is using SE, fire DB on cooldown then following with PS\nactions.necro_mw+=/decimating_bolt,if=talent.shadow_embrace&variable.dots_ticking\nactions.necro_mw+=/phantom_singularity,if=talent.shadow_embrace&cooldown.decimating_bolt.remains>0\nactions.necro_mw+=/unstable_affliction,if=dot.unstable_affliction.remains<6\nactions.necro_mw+=/agony,if=dot.agony.remains<4\nactions.necro_mw+=/siphon_life,if=dot.siphon_life.remains<4\nactions.necro_mw+=/corruption,if=dot.corruption.remains<4\n# Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<2*gcd.max+execute_time\n# Call darkglare_prep if Phantom Singularity is currently ticking\nactions.necro_mw+=/call_action_list,name=darkglare_prep,strict=1,if=dot.phantom_singularity.ticking\n# Utilize any other stat trinkets if Phantom Singularity is ticking\nactions.necro_mw+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking\n# Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)\nactions.necro_mw+=/malefic_rapture,if=time>7&(buff.malefic_wrath.stack<3||buff.malefic_wrath.remains<4.5)\n# Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.\nactions.necro_mw+=/malefic_rapture,if=(dot.phantom_singularity.ticking||time_to_die<cooldown.phantom_singularity.remains)&(buff.malefic_wrath.stack<3||soul_shard>1)\n# Additional Drain Soul cast when PS is ticking\nactions.necro_mw+=/drain_soul,if=dot.phantom_singularity.ticking\n# Low - priority dot refresh when refreshable.\nactions.necro_mw+=/agony,if=refreshable\nactions.necro_mw+=/unstable_affliction,if=refreshable\nactions.necro_mw+=/corruption,if=refreshable\nactions.necro_mw+=/siphon_life,if=talent.siphon_life&refreshable\n# Fleshcraft to maintain Volatile Solvent.\nactions.necro_mw+=/fleshcraft,if=soulbind.volatile_solvent,cancel_if=buff.volatile_solvent_humanoid.up\n# Low-priority haunt refresh.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<3\n# Uninterruptible DS channel if we have the DB buff.\nactions.necro_mw+=/drain_soul,if=buff.decimating_bolt.up\nactions.necro_mw+=/drain_soul,if=talent.shadow_embrace&debuff.shadow_embrace.remains<3||debuff.shadow_embrace.stack<3,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/shadow_bolt\n\nactions.se=haunt\nactions.se+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.se+=/shadow_bolt\n\nactions.stat_trinkets=use_item,name=the_first_sigil\nactions.stat_trinkets+=/use_item,name=scars_of_fraternal_strife\nactions.stat_trinkets+=/use_item,name=inscrutable_quantum_device\nactions.stat_trinkets+=/use_item,name=instructors_divine_bell\nactions.stat_trinkets+=/use_item,name=overflowing_anima_cage\nactions.stat_trinkets+=/use_item,name=darkmoon_deck_putrescence\nactions.stat_trinkets+=/use_item,name=macabre_sheet_music\nactions.stat_trinkets+=/use_item,name=flame_of_battle\nactions.stat_trinkets+=/use_item,name=wakeners_frond\nactions.stat_trinkets+=/use_item,name=tablet_of_despair\nactions.stat_trinkets+=/use_item,name=sinful_aspirants_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=cosmic_aspirants_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=sinful_gladiators_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=cosmic_gladiators_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=obelisk_of_the_void\nactions.stat_trinkets+=/use_item,name=horn_of_valor\nactions.stat_trinkets+=/use_item,name=moonlit_prism\nactions.stat_trinkets+=/use_item,name=figurehead_of_the_naglfar\nactions.stat_trinkets+=/blood_fury\nactions.stat_trinkets+=/fireblood\nactions.stat_trinkets+=/berserking\n\n# We don't support ^ as XOR in Lua, so I've converted this to arithmetic.\nactions.trinket_split_check=variable,name=special_equipped,value=((1*equipped.empyreal_ordnance)+(1*equipped.inscrutable_quantum_device)+(1*equipped.soulletting_ruby)+(1*equipped.sunblood_amethyst))=1\nactions.trinket_split_check+=/variable,name=trinket_one,value=(trinket.1.has_proc&trinket.1.has_cooldown)\nactions.trinket_split_check+=/variable,name=trinket_two,value=(trinket.2.has_proc&trinket.2.has_cooldown)\nactions.trinket_split_check+=/variable,name=damage_trinket,value=(!(trinket.1.has_proc&trinket.1.has_cooldown))||(!(trinket.2.has_proc&trinket.2.has_cooldown))||equipped.glyph_of_assimilation\nactions.trinket_split_check+=/variable,name=trinket_split,value=(variable.trinket_one&variable.damage_trinket)||(variable.trinket_two&variable.damage_trinket)||(1*variable.trinket_one)+(1*variable.special_equipped)=1||(1*variable.trinket_two)+(1*variable.special_equipped)=1",
					["version"] = 20220617,
					["warnings"] = "WARNING:  The import for 'trinket_split_check' required some automated changes.\nLine 2: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 3: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 4: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 4: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\n\nWARNING:  The import for 'damage_trinkets' required some automated changes.\nLine 9: Unsupported use_item action [ toe_knees_promise]; entry disabled.\nLine 10: Unsupported use_item action [ mrrgrias_favor]; entry disabled.\n\nWARNING:  The import for 'stat_trinkets' required some automated changes.\nLine 15: Unsupported use_item action [ obelisk_of_the_void]; entry disabled.\nLine 18: Unsupported use_item action [ figurehead_of_the_naglfar]; entry disabled.\n\nWARNING:  The import for 'covenant' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 1: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 8: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 9: Converted 'trinket.1.X' to 'trinket.t1.X' (4x).\nLine 9: Converted 'trinket.2.X' to 'trinket.t2.X' (4x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 16: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 18: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 24: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 29: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 32: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 33: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 36: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 37: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 38: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 39: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 39: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 40: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 46: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 47: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (3x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 18: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 20: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 26: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'necro_mw' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 27: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 28: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 13 action lists.\n",
					["lists"] = {
						["darkglare_prep"] = {
							{
								["action"] = "vile_taint",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "dark_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [7]
							{
								["action"] = "summon_darkglare",
								["enabled"] = true,
							}, -- [8]
						},
						["trinket_split_check"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ( 1 * equipped.empyreal_ordnance ) + ( 1 * equipped.inscrutable_quantum_device ) + ( 1 * equipped.soulletting_ruby ) + ( 1 * equipped.sunblood_amethyst ) ) = 1",
								["description"] = "We don't support ",
								["var_name"] = "special_equipped",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t1.has_proc & trinket.t1.has_cooldown )",
								["var_name"] = "trinket_one",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t2.has_proc & trinket.t2.has_cooldown )",
								["var_name"] = "trinket_two",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! ( trinket.t1.has_proc & trinket.t1.has_cooldown ) ) || ( ! ( trinket.t2.has_proc & trinket.t2.has_cooldown ) ) || equipped.glyph_of_assimilation",
								["var_name"] = "damage_trinket",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( variable.trinket_one & variable.damage_trinket ) || ( variable.trinket_two & variable.damage_trinket ) || ( 1 * variable.trinket_one ) + ( 1 * variable.special_equipped ) = 1 || ( 1 * variable.trinket_two ) + ( 1 * variable.special_equipped ) = 1",
								["var_name"] = "trinket_split",
							}, -- [5]
						},
						["damage_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vice",
								["action"] = "ebonsoul_vice",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "toe_knees_promise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "mrrgrias_favor",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [11]
						},
						["delayed_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 20 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 20 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 8 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 8 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 4 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [5]
						},
						["stat_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "the_first_sigil",
								["action"] = "the_first_sigil",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "tablet_of_despair",
								["action"] = "tablet_of_despair",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "sinful_aspirants_badge_of_ferocity",
								["action"] = "sinful_aspirants_badge_of_ferocity",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "cosmic_aspirants_badge_of_ferocity",
								["action"] = "cosmic_aspirants_badge_of_ferocity",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "sinful_gladiators_badge_of_ferocity",
								["action"] = "sinful_gladiators_badge_of_ferocity",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_badge_of_ferocity",
								["action"] = "cosmic_gladiators_badge_of_ferocity",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "obelisk_of_the_void",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "horn_of_valor",
								["action"] = "horn_of_valor",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "figurehead_of_the_naglfar",
							}, -- [18]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [19]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [20]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [21]
						},
						["covenant"] = {
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 10 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "impending_catastrophe",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "impending_catastrophe",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.summon_darkglare.remains > 5 & ( debuff.haunt.remains > 4 || ! talent.haunt.enabled )",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 5 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "soul_rot",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "soul_rot",
							}, -- [5]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [6]
						},
						["dot_prep"] = {
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 8 & cooldown.summon_darkglare.remains > dot.agony.remains",
								["action"] = "agony",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 8 & cooldown.summon_darkglare.remains > dot.siphon_life.remains",
								["action"] = "siphon_life",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 8 & cooldown.summon_darkglare.remains > dot.unstable_affliction.remains",
								["action"] = "unstable_affliction",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 8 & cooldown.summon_darkglare.remains > dot.corruption.remains",
								["action"] = "corruption",
							}, -- [4]
						},
						["default"] = {
							{
								["action"] = "spell_lock",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 3",
								["list_name"] = "aoe",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.calamitous_crescendo.up",
								["action"] = "malefic_rapture",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & active_enemies = 1 & talent.phantom_singularity.enabled",
								["list_name"] = "necro_mw",
							}, -- [5]
							{
								["enabled"] = true,
								["description"] = "Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.",
								["action"] = "call_action_list",
								["list_name"] = "trinket_split_check",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking || dot.phantom_singularity.ticking ) & soul_shard > 3 || dot.vile_taint.ticking || talent.sow_the_seeds.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & ( ! variable.trinket_split || cooldown.soul_rot.remains > 20 || ( variable.trinket_one & cooldown.soul_rot.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.soul_rot.remains < trinket.t2.cooldown.remains ) ) || covenant.venthyr & ( ! variable.trinket_split || cooldown.impending_catastrophe.remains > 20 || ( variable.trinket_one & cooldown.impending_catastrophe.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.impending_catastrophe.remains < trinket.t2.cooldown.remains ) ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & ( ! variable.trinket_split || cooldown.phantom_singularity.remains > 20 || ( variable.trinket_one & cooldown.phantom_singularity.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.phantom_singularity.remains < trinket.t2.cooldown.remains ) ) || ! talent.phantom_singularity.enabled & ( ! variable.trinket_split || cooldown.summon_darkglare.remains > 20 || ( variable.trinket_one & cooldown.summon_darkglare.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.summon_darkglare.remains < trinket.t2.cooldown.remains ) )",
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
								["description"] = "Burn soul shards if fight is almost over",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set",
								["criteria"] = "( covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2 )",
								["list_name"] = "darkglare_prep",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Refresh dots early if going into a shard spending phase",
								["criteria"] = "( covenant.night_fae & ! dot.soul_rot.ticking & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & ! dot.impending_catastrophe_dot.ticking & cooldown.impending_catastrophe.remains < 4 ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & talent.phantom_singularity.enabled & ! dot.phantom_singularity.ticking & cooldown.phantom_singularity.remains < 4 )",
								["list_name"] = "dot_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "dark_soul",
								["description"] = "If Phantom Singularity is ticking, it is safe to use Dark Soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking )",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & time > 5 & cooldown.soul_rot.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & time > 5 & cooldown.impending_catastrophe.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & time > 5 & cooldown.decimating_bolt.remains < 3 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.kyrian || covenant.none || ( covenant.necrolord & ! runeforge.malefic_wrath.enabled ) ) & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Other covenants (including non-MW Necro) cast PS on cooldown",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 16",
								["action"] = "phantom_singularity",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If Phantom Singularity is ticking, it's time to use other major dots",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking & ( covenant.night_fae || covenant.venthyr )",
								["list_name"] = "covenant",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "dot.agony.remains < 4",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight",
								["action"] = "seed_of_corruption",
								["description"] = "Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.siphon_life.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.remains < 4",
								["action"] = "seed_of_corruption",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "( soul_shard > 1 || active_enemies > 2 ) & cooldown.summon_darkglare.remains > 12",
								["action"] = "vile_taint",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & dot.unstable_affliction.remains < 4",
								["action"] = "unstable_affliction",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "dot.siphon_life.remains < 4",
								["cycle_targets"] = 1,
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["cycle_targets"] = 1,
								["criteria"] = "active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled ) & dot.corruption.remains < 2",
								["description"] = "Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4 & time > 21",
								["action"] = "malefic_rapture",
								["description"] = "After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied",
								["criteria"] = "( covenant.venthyr & ! talent.phantom_singularity.enabled & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready ) || ( covenant.night_fae & ! talent.phantom_singularity.enabled & dot.soul_rot.ticking & cooldown.summon_darkglare.ready ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.ready )",
								["list_name"] = "darkglare_prep",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
								["description"] = "Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "boss & ! talent.phantom_singularity.enabled & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [33]
							{
								["enabled"] = true,
								["description"] = "Catch-all item usage for anything not specified elsewhere",
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < ( 2 - action.shadow_bolt.in_flight ) || debuff.shadow_embrace.remains < 3 )",
								["action"] = "call_action_list",
								["list_name"] = "se",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "( dot.vile_taint.ticking || dot.impending_catastrophe_dot.ticking || dot.soul_rot.ticking ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.malefic_wrath.enabled & cooldown.soul_rot.remains > 20 & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.malefic_wrath.enabled & ( covenant.necrolord || covenant.kyrian ) & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
								["description"] = "Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & ( dot.phantom_singularity.ticking || cooldown.phantom_singularity.remains > 25 || boss & time_to_die < cooldown.phantom_singularity.remains ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack > 40 || buff.inevitable_demise.up & boss & fight_remains < 4",
								["action"] = "drain_life",
								["description"] = "Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks",
							}, -- [41]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant",
							}, -- [42]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [44]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [45]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["criteria"] = "refreshable & active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled )",
								["cycle_targets"] = 1,
							}, -- [46]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [47]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [48]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [49]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive & ! buff.grimoire_of_sacrifice.up",
								["action"] = "fel_domination",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [5]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.corruption > 0 & active_dot.agony > 0 & active_dot.unstable_affliction > 0 & ( ! talent.siphon_life.enabled || active_dot.siphon_life > 0 ) & ( dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled )",
								["var_name"] = "dots_ready",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "seed_of_corruption",
								["criteria"] = "spell_targets.seed_of_corruption_aoe >= 3",
								["line_cd"] = "10",
							}, -- [8]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "unstable_affliction",
								["enabled"] = true,
							}, -- [10]
						},
						["aoe"] = {
							{
								["action"] = "phantom_singularity",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled & can_seed",
								["action"] = "seed_of_corruption",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.refreshable",
								["action"] = "seed_of_corruption",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony < 4 & ! dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony >= 4 & refreshable & dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "unstable_affliction",
								["criteria"] = "! ticking & pvptalent.rampant_afflictions.enabled & active_dot.unstable_affliction < 3",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 1",
								["action"] = "vile_taint",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.venthyr & ( cooldown.impending_catastrophe.ready || dot.impending_catastrophe_dot.ticking ) & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) & ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & ( cooldown.soul_rot.ready || dot.soul_rot.ticking ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) )",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "dot.vile_taint.ticking",
								["action"] = "malefic_rapture",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "dot.soul_rot.ticking & ! talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! talent.vile_taint.enabled",
								["action"] = "malefic_rapture",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4",
								["action"] = "malefic_rapture",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "active_dot.siphon_life <= 3 & refreshable & ! dot.siphon_life.ticking",
								["cycle_targets"] = 1,
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack >= 50 || boss & buff.inevitable_demise.up & fight_remains < 5 || buff.inevitable_demise.stack >= 35 & dot.soul_rot.ticking",
								["action"] = "drain_life",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [26]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [27]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [28]
						},
						["item"] = {
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [1]
						},
						["se"] = {
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [1]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [3]
						},
						["necro_mw"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "dot.corruption.remains > 2 & dot.agony.remains > 2 & dot.unstable_affliction.remains > 2 & ( ! talent.siphon_life.enabled || dot.siphon_life.remains > 2 )",
								["var_name"] = "dots_ticking",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Trinkets align with PS for Shadow Embrace, DB for Haunt.",
								["criteria"] = "covenant.necrolord",
								["value"] = "cooldown.phantom_singularity.remains",
								["action"] = "variable",
								["value_else"] = "cooldown.decimating_bolt.remains",
								["var_name"] = "trinket_delay",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
								["description"] = "Burn soul shards if the fight will be ending soon.",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.haunt.remains < 2 + execute_time",
								["action"] = "haunt",
								["description"] = "Cast haunt to refresh before falloff.",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < gcd.max + execute_time",
								["action"] = "malefic_rapture",
								["description"] = "High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["description"] = "Fire delayed trinkets in anticipation of Decimating Bolt.",
								["criteria"] = "variable.trinket_delay < 20",
								["action"] = "empyreal_ordnance",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "variable.trinket_delay < 6",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "variable.trinket_delay < 8",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "variable.trinket_delay < 4",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & variable.dots_ticking",
								["action"] = "phantom_singularity",
								["description"] = "If the player is using Haunt, fire PS on cooldown then follow with DB",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & cooldown.phantom_singularity.remains > 0",
								["action"] = "decimating_bolt",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & variable.dots_ticking",
								["action"] = "decimating_bolt",
								["description"] = "If the player is using SE, fire DB on cooldown then following with PS",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & cooldown.decimating_bolt.remains > 0",
								["action"] = "phantom_singularity",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 6",
								["action"] = "unstable_affliction",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 4",
								["action"] = "agony",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 4",
								["action"] = "siphon_life",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 4",
								["action"] = "corruption",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < 2 * gcd.max + execute_time",
								["action"] = "malefic_rapture",
								["description"] = "Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Call darkglare_prep if Phantom Singularity is currently ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "darkglare_prep",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Utilize any other stat trinkets if Phantom Singularity is ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "stat_trinkets",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & ( buff.malefic_wrath.stack < 3 || buff.malefic_wrath.remains < 4.5 )",
								["action"] = "malefic_rapture",
								["description"] = "Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "( dot.phantom_singularity.ticking || time_to_die < cooldown.phantom_singularity.remains ) & ( buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "drain_soul",
								["description"] = "Additional Drain Soul cast when PS is ticking",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "agony",
								["description"] = "Low - priority dot refresh when refreshable.",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "unstable_affliction",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "corruption",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "talent.siphon_life.enabled & refreshable",
								["action"] = "siphon_life",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent_humanoid.up",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["description"] = "Fleshcraft to maintain Volatile Solvent.",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "dot.haunt.remains < 3",
								["action"] = "haunt",
								["description"] = "Low-priority haunt refresh.",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.decimating_bolt.up",
								["action"] = "drain_soul",
								["description"] = "Uninterruptible DS channel if we have the DB buff.",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & debuff.shadow_embrace.remains < 3 || debuff.shadow_embrace.stack < 3",
								["action"] = "drain_soul",
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
							}, -- [31]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [32]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [33]
						},
					},
					["author"] = "SimC",
				},
			},
		},
		["WARLOCK"] = {
			["runOnce"] = {
				["forceReloadClassDefaultOptions_20220306_265"] = true,
				["forceReloadClassDefaultOptions_20220306_267"] = true,
				["forceEnableAllClassesOnceDueToBug_20220225"] = true,
				["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
				["updateMaxRefreshToNewSpecOptions_20220222"] = true,
				["forceReloadAllDefaultPriorities_20220228"] = true,
				["forceReloadClassDefaultOptions_20220306_266"] = true,
				["resetAberrantPackageDates_20190728_1"] = true,
			},
			["specs"] = {
				[266] = {
					["settings"] = {
						["dcon_imps"] = 0,
					},
				},
				[267] = {
					["settings"] = {
						["default_pet"] = "summon_sayaad",
						["fixed_aoe_3_plus"] = false,
					},
				},
				[265] = {
					["settings"] = {
						["manage_ds_ticks"] = false,
					},
				},
			},
			["packs"] = {
				["Demonology"] = {
					["source"] = "SimC",
					["builtIn"] = true,
					["date"] = 20220615,
					["spec"] = 266,
					["desc"] = "Demonology Warlock\nhttps://github.com/simulationcraft/simc/\nJune 11, 2022\n\nChanges:\n- Spell Lock.\n- Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n- Power Siphon allowed pre-combat to proc instant Demonbolt.\n- PvP talent interrupt.\n- Avoid SB->HoG spam when you're not about to summon a Tyrant.\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Try to avoid wasting Demonic Core stacks.\n- Try to make opener priority only work if we can actually open with a Tyrant.\n- Improve compatibility with M+ builds.",
					["lists"] = {
						["slow_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["cycle_targets"] = 1,
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 - ( 2 * gcd.max * variable.use_bolt_timings )",
								["action"] = "soulletting_ruby",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 + ( 2 * variable.use_bolt_timings )",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "variable.buff_sync_cd < ( target.distance / 5 ) + 12 + ( 2 * variable.use_bolt_timings )",
							}, -- [3]
						},
						["hp_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "sinful_gladiators_emblem",
								["action"] = "sinful_gladiators_emblem",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "sinful_aspirants_emblem",
								["action"] = "sinful_aspirants_emblem",
							}, -- [2]
						},
						["covenant_ability"] = {
							{
								["enabled"] = true,
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & pet.demonic_tyrant.active",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.grove_invigoration.enabled & ! runeforge.decaying_soul_satchel.enabled & ( variable.next_tyrant_cd < 20 || variable.next_tyrant_cd > 30 )",
								["action"] = "soul_rot",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! ( soulbind.field_of_blossoms.enabled || soulbind.grove_invigoration.enabled ) & ! runeforge.decaying_soul_satchel.enabled & ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 18",
								["action"] = "soul_rot",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.lead_by_example.enabled & ( pet.demonic_tyrant.active & soul_shard < 2 || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & soulbind.kevins_oozeling.enabled & ( pet.demonic_tyrant.active || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( soulbind.forgeborne_reveries.enabled || ( soulbind.volatile_solvent.enabled & ! soulbind.kevins_oozeling.enabled ) ) & ! pet.demonic_tyrant.active",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & ( ! talent.power_siphon.enabled || cooldown.power_siphon.remains < action.decimating_bolt.execute_time ) & ! cooldown.summon_demonic_tyrant.up & ( pet.demonic_tyrant.remains < 8 || cooldown.summon_demonic_tyrant.remains_expected < 30 )",
								["action"] = "decimating_bolt",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent.down",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.combat_meditation.enabled & pet.demonic_tyrant.active",
								["action"] = "scouring_tithe",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! soulbind.combat_meditation.enabled",
								["action"] = "scouring_tithe",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "pet.demonic_tyrant.active & soul_shard = 0",
								["action"] = "impending_catastrophe",
							}, -- [11]
						},
						["tyrant_setup"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 15",
								["action"] = "nether_portal",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 17 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) & ( cooldown.call_dreadstalkers.remains < 17 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time + action.shadow_bolt.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time )",
								["action"] = "grimoire_felguard",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( variable.next_tyrant_cd < 15 - ( action.summon_demonic_tyrant.execute_time ) & ( cooldown.call_dreadstalkers.remains < 15 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time ) ) || ( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 40 )",
								["action"] = "summon_vilefiend",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 12 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time )",
								["action"] = "call_dreadstalkers",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > first_tyrant_time & ( pet.dreadstalker.active & pet.dreadstalker.remains > action.summon_demonic_tyrant.execute_time ) & ( ! talent.summon_vilefiend.enabled || pet.vilefiend.active ) & ( soul_shard = 0 || ( pet.dreadstalker.active & pet.dreadstalker.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( pet.vilefiend.active & pet.vilefiend.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( buff.grimoire_felguard.up & buff.grimoire_felguard.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) )",
								["action"] = "summon_demonic_tyrant",
							}, -- [5]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spell_lock",
							}, -- [1]
							{
								["action"] = "call_felhunter",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "axe_toss",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.summon_demonic_tyrant.remains_expected",
								["var_name"] = "next_tyrant_cd",
								["criteria"] = "! soulbind.field_of_blossoms.enabled || cooldown.summon_demonic_tyrant.remains_expected > cooldown.soul_rot.remains_expected",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.soul_rot.remains_expected",
								["var_name"] = "next_tyrant_cd",
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & cooldown.summon_demonic_tyrant.remains_expected < cooldown.soul_rot.remains_expected",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "variable.next_tyrant_cd",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & ! in_opener",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "12",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & ! pet.dreadstalker.active",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & buff.wild_imps.stack > 0 & ! talent.vilefiend.enabled",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & prev_gcd.1.hand_of_guldan & talent.vilefiend.enabled",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.decimating_bolt.remains_expected",
								["var_name"] = "buff_sync_cd",
								["criteria"] = "variable.use_bolt_timings",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up & ( ! talent.power_siphon.enabled || buff.power_siphon.up ) )",
								["list_name"] = "ogcd",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 2 * gcd",
								["action"] = "implosion",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "toggle.cooldowns & time < first_tyrant_time",
								["list_name"] = "opener",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || soulbind.combat_meditation.enabled || covenant.necrolord",
								["list_name"] = "covenant_ability",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "( ! variable.use_bolt_timings & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time || soulbind.refined_palate.enabled & variable.next_tyrant_cd < 38 ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["action"] = "potion",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "tyrant_setup",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 9 ) || ( pet.demonic_tyrant.active & pet.demonic_tyrant.remains < 6 * gcd.max )",
								["action"] = "demonic_strength",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & cooldown.summon_demonic_tyrant.remains_expected > 22",
								["action"] = "call_dreadstalkers",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( variable.next_tyrant_cd > 20 - 5 * ! runeforge.wilfreds_sigil_of_superior_summoning.enabled )",
								["action"] = "call_dreadstalkers",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.tyrant.down & variable.next_tyrant_cd > 5",
								["action"] = "bilescourge_bombers",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 30",
								["action"] = "grimoire_felguard",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 28",
								["action"] = "summon_vilefiend",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 15",
								["action"] = "summon_demonic_tyrant",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard = 5",
								["action"] = "hand_of_guldan",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & runeforge.balespiders_burning_core.enabled & buff.balespiders_burning_core.remains < 5",
								["action"] = "shadow_bolt",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "doom",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 3 & ( pet.dreadstalker.active || pet.demonic_tyrant.active )",
								["action"] = "hand_of_guldan",
								["description"] = "If Dreadstalkers are already active, no need to save shards",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.nether_portal.up & cooldown.call_dreadstalkers.remains > 2 * gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.wild_imps.stack > 2 & pet.dreadstalker.remains > 0.5 + cast_time + action.summon_demonic_tyrant.cast_time & pet.dreadstalker.remains < 0.5 + cast_time + action.summon_demonic_tyrant.cast_time + ( 0 >? ( 3 - soul_shard ) ) * action.shadow_bolt.cast_time & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time - gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [35]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.venthyr",
								["list_name"] = "covenant_ability",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sacrificed_souls.enabled",
								["action"] = "soul_strike",
								["description"] = "Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & buff.wild_imps.stack > 1 & buff.demonic_core.stack < 3",
								["action"] = "power_siphon",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up & buff.shard_of_annihilation.stack < 3",
								["action"] = "power_siphon",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd > 20",
								["action"] = "demonbolt",
								["description"] = "Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd < 12",
								["action"] = "demonbolt",
								["description"] = "During Tyrant setup, spend Demonic Cores for Soul Shards",
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & ( buff.demonic_core.stack > 2 || talent.sacrificed_souls.enabled )",
								["action"] = "demonbolt",
							}, -- [42]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up",
								["action"] = "power_siphon",
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & soul_shard < 4 & ( ( 6 - soul_shard ) * action.shadow_bolt.execute_time > pet.dreadstalker.remains - action.hand_of_guldan.execute_time - action.demonbolt.execute_time ) & buff.demonic_core.stack >= 1",
								["action"] = "demonbolt",
							}, -- [44]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & active_enemies > 1",
								["action"] = "demonbolt",
							}, -- [45]
							{
								["action"] = "soul_strike",
								["enabled"] = true,
							}, -- [46]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant_ability",
							}, -- [47]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 3 & variable.next_tyrant_cd > 25 & ( talent.demonic_calling.enabled || cooldown.call_dreadstalkers.remains > ( ( 5 - soul_shard ) * action.shadow_bolt.execute_time ) + action.hand_of_guldan.execute_time )",
								["action"] = "hand_of_guldan",
								["description"] = "If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now",
							}, -- [48]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & time > first_tyrant_time",
								["action"] = "doom",
								["cycle_targets"] = 1,
							}, -- [49]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & buff.demonic_core.remains < 1 + gcd.max * buff.demonic_core.stack",
								["action"] = "demonbolt",
								["description"] = "Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.",
							}, -- [50]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [51]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive",
								["action"] = "fel_domination",
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.wild_imps.stack > 1 & buff.demonic_core.stack <= 2",
								["action"] = "power_siphon",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ( boss || action.demonbolt.cast = 0 )",
								["action"] = "demonbolt",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ! ( boss || action.demonbolt.cast = 0 )",
								["action"] = "shadow_bolt",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "runeforge.shard_of_annihilation.enabled & ( runeforge.balespiders_burning_core.enabled + talent.sacrificed_souls.enabled + talent.power_siphon.enabled > 1 )",
								["var_name"] = "use_bolt_timings",
							}, -- [10]
						},
						["opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.decaying_soul_satchel.enabled",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["action"] = "nether_portal",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "grimoire_felguard",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "summon_vilefiend",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & cooldown.call_dreadstalkers.up",
								["action"] = "shadow_bolt",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & soul_shard < 5 & buff.balespiders_burning_core.stack < 4",
								["action"] = "shadow_bolt",
							}, -- [6]
							{
								["action"] = "call_dreadstalkers",
								["enabled"] = true,
							}, -- [7]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["var_name"] = "use_buff_trinkets",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.demonic_tyrant.active",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "variable.buff_sync_cd < 22",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "variable.use_bolt_timings & pet.demonic_tyrant.active",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "variable.buff_sync_cd < 7",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "talent.demonic_consumption.enabled & variable.next_tyrant_cd < 20",
								["list_name"] = "hp_trinks",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Effects that travel slowly from the target require additional, separate handling",
								["list_name"] = "slow_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
								["criteria"] = "variable.use_buff_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t1.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket1",
								["slot"] = "trinket1",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t2.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket2",
								["slot"] = "trinket2",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "time > first_tyrant_time & variable.buff_sync_cd > 20",
								["list_name"] = "pure_damage_trinks",
							}, -- [12]
						},
						["pure_damage_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
								["criteria"] = "active_enemies = 1",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vise",
								["action"] = "ebonsoul_vise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [10]
						},
						["ogcd"] = {
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20220615,
					["warnings"] = "WARNING:  The import for 'slow_trinkets' required some automated changes.\nLine 1: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 2: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 3: Converted SimC syntax % to Lua division operator (/) (1x).\n\nWARNING:  The import for 'covenant_ability' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 4: Removed min:X check (not available in emulation) (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 5: Removed min:X check (not available in emulation) (1x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 9: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 10: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'tyrant_setup' required some automated changes.\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 16: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 17: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'trinkets' required some automated changes.\nLine 10: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 11: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\n\nWARNING:  The import for 'opener' required some automated changes.\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\n\nImported 10 action lists.\n",
					["author"] = "",
					["profile"] = "## Demonology Warlock\n## https://github.com/simulationcraft/simc/\n## June 11, 2022\n\n## Changes:\n## - Spell Lock.\n## - Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n## - Power Siphon allowed pre-combat to proc instant Demonbolt.\n## - PvP talent interrupt.\n## - Avoid SB->HoG spam when you're not about to summon a Tyrant.\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Try to avoid wasting Demonic Core stacks.\n## - Try to make opener priority only work if we can actually open with a Tyrant.\n## - Improve compatibility with M+ builds.\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/power_siphon,if=buff.wild_imps.stack>1&buff.demonic_core.stack<=2\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/demonbolt,if=soul_shards<5&(boss||action.demonbolt.cast=0)\nactions.precombat+=/shadow_bolt,if=soul_shards<5&!(boss||action.demonbolt.cast=0)\n## actions.precombat+=/variable,name=first_tyrant_time,op=set,value=10\n## actions.precombat+=/variable,name=in_opener,op=set,value=1\nactions.precombat+=/variable,name=use_bolt_timings,op=set,value=runeforge.shard_of_annihilation&(runeforge.balespiders_burning_core+talent.sacrificed_souls.enabled+talent.power_siphon.enabled>1)\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions+=/call_felhunter\nactions+=/axe_toss\nactions+=/devour_magic\nactions=variable,name=next_tyrant_cd,op=set,value=cooldown.summon_demonic_tyrant.remains_expected,if=!soulbind.field_of_blossoms||cooldown.summon_demonic_tyrant.remains_expected>cooldown.soul_rot.remains_expected\nactions+=/variable,name=next_tyrant_cd,op=set,value=cooldown.soul_rot.remains_expected,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&cooldown.summon_demonic_tyrant.remains_expected<cooldown.soul_rot.remains_expected\n## actions+=/variable,name=in_opener,op=set,value=0,if=pet.demonic_tyrant.active\nactions+=/variable,name=buff_sync_cd,op=set,value=variable.next_tyrant_cd,if=!variable.use_bolt_timings&!in_opener\nactions+=/variable,name=buff_sync_cd,op=set,value=12,if=!variable.use_bolt_timings&in_opener&!pet.dreadstalker.active\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&buff.wild_imps.stack>0&!talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&prev_gcd.1.hand_of_guldan&talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=cooldown.decimating_bolt.remains_expected,if=variable.use_bolt_timings\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=ogcd,if=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up&(!talent.power_siphon.enabled||buff.power_siphon.up))\nactions+=/implosion,if=boss&fight_remains<2*gcd\nactions+=/call_action_list,name=opener,strict=1,if=toggle.cooldowns&time<first_tyrant_time\nactions+=/call_action_list,name=covenant_ability,strict=1,if=soulbind.grove_invigoration||soulbind.field_of_blossoms||soulbind.combat_meditation||covenant.necrolord\nactions+=/potion,if=(!variable.use_bolt_timings&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time||soulbind.refined_palate&variable.next_tyrant_cd<38)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions+=/call_action_list,name=tyrant_setup\nactions+=/demonic_strength,if=(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>9)||(pet.demonic_tyrant.active&pet.demonic_tyrant.remains<6*gcd.max)\nactions+=/call_dreadstalkers,if=variable.use_bolt_timings&cooldown.summon_demonic_tyrant.remains_expected>22\nactions+=/call_dreadstalkers,if=!variable.use_bolt_timings&(variable.next_tyrant_cd>20-5*!runeforge.wilfreds_sigil_of_superior_summoning)\nactions+=/bilescourge_bombers,if=buff.tyrant.down&variable.next_tyrant_cd>5\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/grimoire_felguard,if=boss&time_to_die<30\nactions+=/summon_vilefiend,if=boss&time_to_die<28\nactions+=/summon_demonic_tyrant,if=boss&time_to_die<15\nactions+=/hand_of_guldan,if=soul_shard=5\nactions+=/shadow_bolt,if=soul_shard<5&runeforge.balespiders_burning_core&buff.balespiders_burning_core.remains<5\nactions+=/doom,if=refreshable\n# If Dreadstalkers are already active, no need to save shards\nactions+=/hand_of_guldan,if=soul_shard>=3&(pet.dreadstalker.active||pet.demonic_tyrant.active)\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.nether_portal.up&cooldown.call_dreadstalkers.remains>2*gcd.max\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.wild_imps.stack>2&pet.dreadstalker.remains>0.5+cast_time+action.summon_demonic_tyrant.cast_time&pet.dreadstalker.remains<0.5+cast_time+action.summon_demonic_tyrant.cast_time+(0>?(3-soul_shard))*action.shadow_bolt.cast_time&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time-gcd.max\nactions+=/call_action_list,name=covenant_ability,strict=1,if=!covenant.venthyr\n# Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority\nactions+=/soul_strike,if=!talent.sacrificed_souls.enabled\nactions+=/power_siphon,if=!variable.use_bolt_timings&buff.wild_imps.stack>1&buff.demonic_core.stack<3\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up&buff.shard_of_annihilation.stack<3\n# Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd>20\n# During Tyrant setup, spend Demonic Cores for Soul Shards\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd<12\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&(buff.demonic_core.stack>2||talent.sacrificed_souls.enabled)\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up\nactions+=/demonbolt,if=set_bonus.tier28_2pc&soul_shard<4&((6-soul_shard)*action.shadow_bolt.execute_time>pet.dreadstalker.remains-action.hand_of_guldan.execute_time-action.demonbolt.execute_time)&buff.demonic_core.stack>=1\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&active_enemies>1\nactions+=/soul_strike\nactions+=/call_action_list,name=covenant_ability\n# If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now\nactions+=/hand_of_guldan,if=soul_shard>=3&variable.next_tyrant_cd>25&(talent.demonic_calling.enabled||cooldown.call_dreadstalkers.remains>((5-soul_shard)*action.shadow_bolt.execute_time)+action.hand_of_guldan.execute_time)\nactions+=/doom,cycle_targets=1,if=refreshable&time>first_tyrant_time\n# Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.\nactions+=/demonbolt,if=buff.demonic_core.react&buff.demonic_core.remains<1+gcd.max*buff.demonic_core.stack\nactions+=/shadow_bolt\n\nactions.slow_trinkets=use_item,name=soulletting_ruby,cycle_targets=1,if=variable.buff_sync_cd<target.distance%5-(2*gcd.max*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=sunblood_amethyst,if=variable.buff_sync_cd<target.distance%5+(2*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=empyreal_ordnance,if=variable.buff_sync_cd<(target.distance%5)+12+(2*variable.use_bolt_timings)\n\nactions.covenant_ability=soul_rot,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&pet.demonic_tyrant.active\nactions.covenant_ability+=/soul_rot,if=soulbind.grove_invigoration&!runeforge.decaying_soul_satchel&(variable.next_tyrant_cd<20||variable.next_tyrant_cd>30)\nactions.covenant_ability+=/soul_rot,if=!(soulbind.field_of_blossoms||soulbind.grove_invigoration)&!runeforge.decaying_soul_satchel&!pet.demonic_tyrant.active&variable.next_tyrant_cd>18\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.lead_by_example&(pet.demonic_tyrant.active&soul_shard<2||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.kevins_oozeling&(pet.demonic_tyrant.active||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=!variable.use_bolt_timings&(soulbind.forgeborne_reveries||(soulbind.volatile_solvent&!soulbind.kevins_oozeling))&!pet.demonic_tyrant.active\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=variable.use_bolt_timings&(!talent.power_siphon||cooldown.power_siphon.remains<action.decimating_bolt.execute_time)&!cooldown.summon_demonic_tyrant.up&(pet.demonic_tyrant.remains<8||cooldown.summon_demonic_tyrant.remains_expected<30)\nactions.covenant_ability+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent.down,interrupt_if=buff.volatile_solvent.up\nactions.covenant_ability+=/scouring_tithe,if=soulbind.combat_meditation&pet.demonic_tyrant.active\nactions.covenant_ability+=/scouring_tithe,if=!soulbind.combat_meditation\nactions.covenant_ability+=/impending_catastrophe,if=pet.demonic_tyrant.active&soul_shard=0\n\nactions.hp_trinks=use_item,name=sinful_gladiators_emblem\nactions.hp_trinks+=/use_item,name=sinful_aspirants_emblem\n\nactions.ogcd=berserking\nactions.ogcd+=/blood_fury\nactions.ogcd+=/fireblood\nactions.ogcd+=/use_items\n\nactions.opener=soul_rot,if=soulbind.grove_invigoration,if=!runeforge.decaying_soul_satchel\nactions.opener+=/nether_portal\nactions.opener+=/grimoire_felguard\nactions.opener+=/summon_vilefiend\nactions.opener+=/shadow_bolt,if=soul_shard<5&cooldown.call_dreadstalkers.up\nactions.opener+=/shadow_bolt,if=variable.use_bolt_timings&soul_shard<5&buff.balespiders_burning_core.stack<4\nactions.opener+=/call_dreadstalkers\n\nactions.pure_damage_trinks=use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=resonant_reservoir\nactions.pure_damage_trinks+=/use_item,name=architects_ingenuity_core\nactions.pure_damage_trinks+=/use_item,name=cosmic_gladiators_resonator\nactions.pure_damage_trinks+=/use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=soul_igniter\nactions.pure_damage_trinks+=/use_item,name=glyph_of_assimilation,if=active_enemies=1\nactions.pure_damage_trinks+=/use_item,name=darkmoon_deck_putrescence\nactions.pure_damage_trinks+=/use_item,name=ebonsoul_vise\nactions.pure_damage_trinks+=/use_item,name=unchained_gladiators_shackles\n\nactions.trinkets=variable,name=use_buff_trinkets,value=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=shadowed_orb_of_torment,if=variable.buff_sync_cd<22\nactions.trinkets+=/use_item,name=moonlit_prism,if=variable.use_bolt_timings&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=grim_eclipse,if=variable.buff_sync_cd<7\nactions.trinkets+=/call_action_list,name=hp_trinks,if=talent.demonic_consumption.enabled&variable.next_tyrant_cd<20\n# Effects that travel slowly from the target require additional, separate handling\nactions.trinkets+=/call_action_list,name=slow_trinkets\nactions.trinkets+=/use_item,name=overflowing_anima_cage,if=variable.use_buff_trinkets\nactions.trinkets+=/use_item,slot=trinket1,if=trinket.1.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/use_item,slot=trinket2,if=trinket.2.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/call_action_list,name=pure_damage_trinks,if=time>first_tyrant_time&variable.buff_sync_cd>20\n\nactions.tyrant_setup=nether_portal,if=variable.next_tyrant_cd<15\nactions.tyrant_setup+=/grimoire_felguard,if=variable.next_tyrant_cd<17-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)&(cooldown.call_dreadstalkers.remains<17-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time+action.shadow_bolt.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time)\nactions.tyrant_setup+=/summon_vilefiend,if=(variable.next_tyrant_cd<15-(action.summon_demonic_tyrant.execute_time)&(cooldown.call_dreadstalkers.remains<15-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time))||(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>40)\nactions.tyrant_setup+=/call_dreadstalkers,if=variable.next_tyrant_cd<12-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)\nactions.tyrant_setup+=/summon_demonic_tyrant,if=time>first_tyrant_time&(pet.dreadstalker.active&pet.dreadstalker.remains>action.summon_demonic_tyrant.execute_time)&(!talent.summon_vilefiend.enabled||pet.vilefiend.active)&(soul_shard=0||(pet.dreadstalker.active&pet.dreadstalker.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(pet.vilefiend.active&pet.vilefiend.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(buff.grimoire_felguard.up&buff.grimoire_felguard.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time))",
				},
				["Destruction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220604,
					["author"] = "SimC",
					["desc"] = "Destruction Warlock\nMay 31, 2022\n\nChanges:\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Avoid spamming Immolate.\n- Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).",
					["lists"] = {
						["havoc"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1 & soul_shard <= 4",
								["action"] = "conflagrate",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "soul_fire",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & soulbind.lead_by_example.enabled",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "scouring_tithe",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & remains < duration * 0.5 || ! talent.internal_combustion.enabled & refreshable",
								["action"] = "immolate",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & ! ( set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled )",
								["action"] = "chaos_bolt",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled",
								["action"] = "rain_of_fire",
							}, -- [7]
							{
								["action"] = "shadowburn",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "incinerate",
							}, -- [9]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["action"] = "fel_domination",
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
								["criteria"] = "time > 0 & ! pet.alive",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [9]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active & ( ! cooldown.havoc.ready || active_enemies > 3 )",
								["action"] = "rain_of_fire",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc",
								["action"] = "rain_of_fire",
							}, -- [2]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "dot.immolate.remains > cast_time",
								["action"] = "channel_demonfire",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "active_enemies < 5 & remains < 5 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "active_enemies < 4",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["action"] = "rain_of_fire",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.fire_and_brimstone.enabled & buff.backdraft.up & soul_shard < 5 - 0.2 * active_enemies",
								["action"] = "incinerate",
							}, -- [12]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down",
								["action"] = "conflagrate",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "target.health.pct < 20",
								["action"] = "shadowburn",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [18]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "cooldown.summon_infernal.remains < 3 || boss & time_to_die < 42",
								["name"] = "shadowed_orb_of_torment",
							}, -- [1]
							{
								["action"] = "summon_infernal",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & cooldown.summon_infernal.remains_expected > time_to_die",
								["action"] = "dark_soul_instability",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "potion",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "berserking",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "blood_fury",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "fireblood",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
								["name"] = "scars_of_fraternal_strife",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.infernal.active",
								["name"] = "scars_of_fraternal_strife",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & time_to_die < 21",
								["action"] = "use_items",
							}, -- [10]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spell_lock",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "havoc_active & active_enemies > 1 & active_enemies < 5 - talent.inferno.enabled + ( talent.inferno.enabled & talent.internal_combustion.enabled )",
								["list_name"] = "havoc",
							}, -- [2]
							{
								["interrupt_if"] = "buff.volatile_solvent.up",
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.roaring_blaze.enabled & debuff.roaring_blaze.remains < 1.5",
								["action"] = "conflagrate",
							}, -- [4]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "settings.fixed_aoe_3_plus & active_enemies > 2 || ! settings.fixed_aoe_3_plus & active_enemies > 2 - set_bonus.tier28_4pc",
								["list_name"] = "aoe",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "soul_fire",
								["criteria"] = "refreshable & soul_shard <= 4 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "immolate",
								["criteria"] = "remains < 3 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & action.chaos_bolt.in_flight & remains < duration * 0.5",
								["action"] = "immolate",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( pet.infernal.active || pet.blasphemy.active ) & soul_shard >= 4",
								["action"] = "chaos_bolt",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [11]
							{
								["action"] = "channel_demonfire",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["criteria"] = "dot.immolate.remains > dot.immolate.duration * 0.5 || ! talent.internal_combustion.enabled",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.odr_shawl_of_the_ymirjar.equipped",
								["action"] = "havoc",
							}, -- [18]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies > 1 & cooldown.havoc.remains <= 10 || buff.ritual_of_ruin.up & talent.rain_of_chaos.enabled",
								["var_name"] = "pool_soul_shards",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1.5 - 0.3 * talent.flashover.enabled & ! variable.pool_soul_shards",
								["action"] = "conflagrate",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || buff.rain_of_chaos.remains > cast_time",
								["action"] = "chaos_bolt",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.up & ! variable.pool_soul_shards",
								["action"] = "chaos_bolt",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.eradication.enabled & ! variable.pool_soul_shards & debuff.eradication.remains < cast_time",
								["action"] = "chaos_bolt",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pool_soul_shards || soul_shard >= 4.5",
								["action"] = "shadowburn",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 3.5",
								["action"] = "chaos_bolt",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 5 & target.time_to_die > cast_time + travel_time",
								["action"] = "chaos_bolt",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 || target.time_to_die < gcd",
								["action"] = "conflagrate",
							}, -- [27]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [28]
						},
					},
					["version"] = 20220604,
					["warnings"] = "WARNING:  The import for 'default' required some automated changes.\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "## Destruction Warlock\n## May 31, 2022\n\n## Changes:\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Avoid spamming Immolate.\n## - Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/soul_fire\nactions.precombat+=/incinerate\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions=call_action_list,name=havoc,strict=1,if=havoc_active&active_enemies>1&active_enemies<5-talent.inferno.enabled+(talent.inferno.enabled&talent.internal_combustion.enabled)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/conflagrate,if=talent.roaring_blaze.enabled&debuff.roaring_blaze.remains<1.5\nactions+=/cataclysm\nactions+=/call_action_list,name=aoe,strict=1,if=settings.fixed_aoe_3_plus&active_enemies>2||!settings.fixed_aoe_3_plus&active_enemies>2-set_bonus.tier28_4pc\nactions+=/soul_fire,cycle_targets=1,if=refreshable&soul_shard<=4&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,cycle_targets=1,if=remains<3&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,if=talent.internal_combustion.enabled&action.chaos_bolt.in_flight&remains<duration*0.5\nactions+=/chaos_bolt,if=(pet.infernal.active||pet.blasphemy.active)&soul_shard>=4\nactions+=/call_action_list,name=cds\nactions+=/channel_demonfire\nactions+=/scouring_tithe\nactions+=/decimating_bolt\nactions+=/havoc,cycle_targets=1,if=dot.immolate.remains>dot.immolate.duration*0.5||!talent.internal_combustion.enabled\nactions+=/impending_catastrophe\nactions+=/soul_rot\nactions+=/havoc,if=runeforge.odr_shawl_of_the_ymirjar.equipped\nactions+=/variable,name=pool_soul_shards,value=active_enemies>1&cooldown.havoc.remains<=10||buff.ritual_of_ruin.up&talent.rain_of_chaos\nactions+=/conflagrate,if=buff.backdraft.down&soul_shard>=1.5-0.3*talent.flashover.enabled&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=pet.infernal.active||buff.rain_of_chaos.remains>cast_time\nactions+=/chaos_bolt,if=buff.backdraft.up&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=talent.eradication&!variable.pool_soul_shards&debuff.eradication.remains<cast_time\nactions+=/shadowburn,if=!variable.pool_soul_shards||soul_shard>=4.5\nactions+=/chaos_bolt,if=soul_shard>3.5\nactions+=/chaos_bolt,if=boss&fight_remains<5&target.time_to_die>cast_time+travel_time\nactions+=/conflagrate,if=charges>1||target.time_to_die<gcd\nactions+=/incinerate\n\nactions.aoe=rain_of_fire,if=pet.infernal.active&(!cooldown.havoc.ready||active_enemies>3)\nactions.aoe+=/rain_of_fire,if=set_bonus.tier28_4pc\nactions.aoe+=/soul_rot\nactions.aoe+=/impending_catastrophe\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains>cast_time\nactions.aoe+=/immolate,cycle_targets=1,if=active_enemies<5&remains<5&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions.aoe+=/call_action_list,name=cds\nactions.aoe+=/havoc,cycle_targets=1,if=active_enemies<4\nactions.aoe+=/rain_of_fire\nactions.aoe+=/havoc,cycle_targets=1\nactions.aoe+=/decimating_bolt\nactions.aoe+=/incinerate,if=talent.fire_and_brimstone.enabled&buff.backdraft.up&soul_shard<5-0.2*active_enemies\nactions.aoe+=/soul_fire\nactions.aoe+=/conflagrate,if=buff.backdraft.down\nactions.aoe+=/shadowburn,if=target.health.pct<20\nactions.aoe+=/immolate,cycle_targets=1,if=refreshable\nactions.aoe+=/scouring_tithe\nactions.aoe+=/incinerate\n\nactions.cds=use_item,name=shadowed_orb_of_torment,if=cooldown.summon_infernal.remains<3||boss&time_to_die<42\nactions.cds+=/summon_infernal\nactions.cds+=/dark_soul_instability,if=pet.infernal.active||boss&cooldown.summon_infernal.remains_expected>time_to_die\nactions.cds+=/potion,if=pet.infernal.active\nactions.cds+=/berserking,if=pet.infernal.active\nactions.cds+=/blood_fury,if=pet.infernal.active\nactions.cds+=/fireblood,if=pet.infernal.active\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.infernal.active\nactions.cds+=/use_items,if=pet.infernal.active||boss&time_to_die<21\n\nactions.havoc=conflagrate,if=buff.backdraft.down&soul_shard>=1&soul_shard<=4\nactions.havoc+=/soul_fire,if=cast_time<havoc_remains\nactions.havoc+=/decimating_bolt,if=cast_time<havoc_remains&soulbind.lead_by_example.enabled\nactions.havoc+=/scouring_tithe,if=cast_time<havoc_remains\nactions.havoc+=/immolate,if=talent.internal_combustion.enabled&remains<duration*0.5||!talent.internal_combustion.enabled&refreshable\nactions.havoc+=/chaos_bolt,if=cast_time<havoc_remains&!(set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled)\nactions.havoc+=/rain_of_fire,if=set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled\nactions.havoc+=/shadowburn\nactions.havoc+=/incinerate,if=cast_time<havoc_remains",
					["spec"] = 267,
				},
				["Affliction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220617,
					["spec"] = 265,
					["desc"] = "Affliction Warlock\nJune 17, 2022\n\nChanges:\n- Added Spell Lock.\n- Added Devour Magic.\n- Added breakchannel logic for Drain Soul.\n- Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n- Enable Rampant Afflictions PvP talent.\n- Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n- Condense some Darkglare Prep calls to reduce computation time.\n- Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n- Only Seed once pre-pull.\n- Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Integrate Necro MW priority list.\n- Don't break Drain Soul with Decimating Bolt buff.",
					["profile"] = "## Affliction Warlock\n## June 17, 2022\n\n## Changes:\n## - Added Spell Lock.\n## - Added Devour Magic.\n## - Added breakchannel logic for Drain Soul.\n## - Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n## - Enable Rampant Afflictions PvP talent.\n## - Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n## - Condense some Darkglare Prep calls to reduce computation time.\n## - Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n## - Only Seed once pre-pull.\n## - Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Integrate Necro MW priority list.\n## - Don't break Drain Soul with Decimating Bolt buff.\n\nactions.precombat=fel_domination,if=time>0&!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/fleshcraft\nactions.precombat+=/variable,name=dots_ready,value=active_dot.corruption>0&active_dot.agony>0&active_dot.unstable_affliction>0&(!talent.siphon_life.enabled||active_dot.siphon_life>0)&(dot.phantom_singularity.ticking||!talent.phantom_singularity.enabled)\nactions.precombat+=/seed_of_corruption,line_cd=10,if=spell_targets.seed_of_corruption_aoe>=3\nactions.precombat+=/haunt\nactions.precombat+=/unstable_affliction\n\n## Executed every time the actor is available.\nactions=spell_lock\nactions+=/devour_magic\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>3\nactions+=/malefic_rapture,if=buff.calamitous_crescendo.up\n# Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.\nactions+=/run_action_list,name=necro_mw,strict=1,if=covenant.necrolord&runeforge.malefic_wrath&active_enemies=1&talent.phantom_singularity\n# Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.\nactions+=/call_action_list,name=trinket_split_check\nactions+=/call_action_list,name=delayed_trinkets\nactions+=/call_action_list,name=stat_trinkets,strict=1,if=(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking||dot.phantom_singularity.ticking)&soul_shard>3||dot.vile_taint.ticking||talent.sow_the_seeds\nactions+=/call_action_list,name=damage_trinkets,if=covenant.night_fae&(!variable.trinket_split||cooldown.soul_rot.remains>20||(variable.trinket_one&cooldown.soul_rot.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.soul_rot.remains<trinket.2.cooldown.remains))||covenant.venthyr&(!variable.trinket_split||cooldown.impending_catastrophe.remains>20||(variable.trinket_one&cooldown.impending_catastrophe.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.impending_catastrophe.remains<trinket.2.cooldown.remains))||(covenant.necrolord||covenant.kyrian||covenant.none)&(!variable.trinket_split||cooldown.phantom_singularity.remains>20||(variable.trinket_one&cooldown.phantom_singularity.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.phantom_singularity.remains<trinket.2.cooldown.remains))||!talent.phantom_singularity.enabled&(!variable.trinket_split||cooldown.summon_darkglare.remains>20||(variable.trinket_one&cooldown.summon_darkglare.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.summon_darkglare.remains<trinket.2.cooldown.remains))\n# Burn soul shards if fight is almost over\nactions+=/malefic_rapture,if=boss&fight_remains<execute_time*soul_shard&dot.unstable_affliction.ticking\n# If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||((covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2)\n# Refresh dots early if going into a shard spending phase\nactions+=/call_action_list,name=dot_prep,if=(covenant.night_fae&!dot.soul_rot.ticking&cooldown.soul_rot.remains<4)||(covenant.venthyr&!dot.impending_catastrophe_dot.ticking&cooldown.impending_catastrophe.remains<4)||((covenant.necrolord||covenant.kyrian||covenant.none)&talent.phantom_singularity&!dot.phantom_singularity.ticking&cooldown.phantom_singularity.remains<4)\n# If Phantom Singularity is ticking, it is safe to use Dark Soul\nactions+=/dark_soul,if=dot.phantom_singularity.ticking\nactions+=/dark_soul,if=!talent.phantom_singularity&(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking)\n# Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)\nactions+=/phantom_singularity,if=covenant.night_fae&time>5&cooldown.soul_rot.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=covenant.venthyr&time>5&cooldown.impending_catastrophe.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt\nactions+=/phantom_singularity,if=covenant.necrolord&runeforge.malefic_wrath&time>5&cooldown.decimating_bolt.remains<3&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Other covenants (including non-MW Necro) cast PS on cooldown\nactions+=/phantom_singularity,if=(covenant.kyrian||covenant.none||(covenant.necrolord&!runeforge.malefic_wrath))&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=boss&fight_remains<16\n# If Phantom Singularity is ticking, it's time to use other major dots\nactions+=/call_action_list,name=covenant,strict=1,if=dot.phantom_singularity.ticking&(covenant.night_fae||covenant.venthyr)\nactions+=/agony,cycle_targets=1,if=dot.agony.remains<4\nactions+=/haunt\n# Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.\nactions+=/seed_of_corruption,if=active_enemies>2&talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight\nactions+=/seed_of_corruption,if=active_enemies>2&talent.siphon_life&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.remains<4\nactions+=/vile_taint,if=(soul_shard>1||active_enemies>2)&cooldown.summon_darkglare.remains>12\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&dot.unstable_affliction.remains<4\nactions+=/siphon_life,cycle_targets=1,if=dot.siphon_life.remains<4\nactions+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\n# Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption\nactions+=/corruption,cycle_targets=1,if=active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)&dot.corruption.remains<2\n# After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping\nactions+=/malefic_rapture,if=soul_shard>4&time>21\n# When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&!talent.phantom_singularity&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready)||(covenant.night_fae&!talent.phantom_singularity&dot.soul_rot.ticking&cooldown.summon_darkglare.ready)||((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.ready)\n# Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses\nactions+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions+=/dark_soul,if=boss&!talent.phantom_singularity&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\n# Catch-all item usage for anything not specified elsewhere\nactions+=/call_action_list,name=item\n## Refresh Shadow Embrace before spending shards on Malefic Rapture\nactions+=/call_action_list,name=se,if=talent.shadow_embrace.enabled&(debuff.shadow_embrace.stack<(2-action.shadow_bolt.in_flight)||debuff.shadow_embrace.remains<3)\n# Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff\nactions+=/malefic_rapture,if=(dot.vile_taint.ticking||dot.impending_catastrophe_dot.ticking||dot.soul_rot.ticking)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\n# Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&cooldown.soul_rot.remains>20&buff.malefic_wrath.remains<4\n# Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&(covenant.necrolord||covenant.kyrian)&buff.malefic_wrath.remains<4\n# Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it\nactions+=/malefic_rapture,if=talent.phantom_singularity&(dot.phantom_singularity.ticking||cooldown.phantom_singularity.remains>25||boss&time_to_die<cooldown.phantom_singularity.remains)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\nactions+=/malefic_rapture,if=talent.sow_the_seeds\n# Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks\nactions+=/drain_life,if=buff.inevitable_demise.stack>40||buff.inevitable_demise.up&boss&fight_remains<4\nactions+=/call_action_list,name=covenant\nactions+=/agony,cycle_targets=1,if=refreshable\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions+=/siphon_life,cycle_targets=1,if=refreshable\nactions+=/corruption,cycle_targets=1,if=refreshable&active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions+=/shadow_bolt\n\nactions.aoe=phantom_singularity\nactions.aoe+=/haunt\nactions.aoe+=/call_action_list,name=darkglare_prep,if=covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||(covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2\nactions.aoe+=/seed_of_corruption,if=talent.sow_the_seeds&can_seed\nactions.aoe+=/seed_of_corruption,if=!talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.refreshable\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony<4&!dot.agony.ticking\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony>=4&refreshable&dot.agony.ticking\nactions.aoe+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions.aoe+=/unstable_affliction,cycle_targets=1,if=!ticking&pvptalent.rampant_afflictions.enabled&active_dot.unstable_affliction<3\nactions.aoe+=/vile_taint,if=soul_shard>1\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.aoe+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&(cooldown.impending_catastrophe.ready||dot.impending_catastrophe_dot.ticking)&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))&((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&(cooldown.soul_rot.ready||dot.soul_rot.ticking)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\nactions.aoe+=/call_action_list,name=item\nactions.aoe+=/call_action_list,name=delayed_trinkets\nactions.aoe+=/call_action_list,name=damage_trinkets\nactions.aoe+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking||!talent.phantom_singularity\nactions.aoe+=/malefic_rapture,if=dot.vile_taint.ticking\nactions.aoe+=/malefic_rapture,if=dot.soul_rot.ticking&!talent.sow_the_seeds\nactions.aoe+=/malefic_rapture,if=!talent.vile_taint\nactions.aoe+=/malefic_rapture,if=soul_shard>4\nactions.aoe+=/siphon_life,cycle_targets=1,if=active_dot.siphon_life<=3&refreshable&!dot.siphon_life.ticking\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=covenant.necrolord\nactions.aoe+=/drain_life,if=buff.inevitable_demise.stack>=50||boss&buff.inevitable_demise.up&fight_remains<5||buff.inevitable_demise.stack>=35&dot.soul_rot.ticking\nactions.aoe+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions.aoe+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.aoe+=/shadow_bolt\n\nactions.covenant=impending_catastrophe,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<10||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/impending_catastrophe,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/decimating_bolt,if=cooldown.summon_darkglare.remains>5&(debuff.haunt.remains>4||!talent.haunt)\nactions.covenant+=/soul_rot,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<5||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/soul_rot,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/scouring_tithe\n\nactions.damage_trinkets=use_item,name=soul_igniter\nactions.damage_trinkets+=/use_item,name=dreadfire_vessel\nactions.damage_trinkets+=/use_item,name=glyph_of_assimilation\nactions.damage_trinkets+=/use_item,name=unchained_gladiators_shackles\nactions.damage_trinkets+=/use_item,name=ebonsoul_vice\nactions.damage_trinkets+=/use_item,name=resonant_reservoir\nactions.damage_trinkets+=/use_item,name=architects_ingenuity_core\nactions.damage_trinkets+=/use_item,name=grim_eclipse\nactions.damage_trinkets+=/use_item,name=toe_knees_promise\nactions.damage_trinkets+=/use_item,name=mrrgrias_favor\nactions.damage_trinkets+=/use_item,name=cosmic_gladiators_resonator\n\nactions.darkglare_prep=vile_taint\nactions.darkglare_prep+=/dark_soul\nactions.darkglare_prep+=/potion\nactions.darkglare_prep+=/fireblood\nactions.darkglare_prep+=/blood_fury\nactions.darkglare_prep+=/berserking\nactions.darkglare_prep+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.darkglare_prep+=/summon_darkglare\n\nactions.delayed_trinkets=use_item,name=grim_eclipse,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=empyreal_ordnance,if=(covenant.night_fae&cooldown.soul_rot.remains<20)||(covenant.venthyr&cooldown.impending_catastrophe.remains<20)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=sunblood_amethyst,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=soulletting_ruby,if=(covenant.night_fae&cooldown.soul_rot.remains<8)||(covenant.venthyr&cooldown.impending_catastrophe.remains<8)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=shadowed_orb_of_torment,if=(covenant.night_fae&cooldown.soul_rot.remains<4)||(covenant.venthyr&cooldown.impending_catastrophe.remains<4)||(covenant.necrolord||covenant.kyrian||covenant.none)\n\nactions.dot_prep=agony,if=dot.agony.remains<8&cooldown.summon_darkglare.remains>dot.agony.remains\nactions.dot_prep+=/siphon_life,if=dot.siphon_life.remains<8&cooldown.summon_darkglare.remains>dot.siphon_life.remains\nactions.dot_prep+=/unstable_affliction,if=dot.unstable_affliction.remains<8&cooldown.summon_darkglare.remains>dot.unstable_affliction.remains\nactions.dot_prep+=/corruption,if=dot.corruption.remains<8&cooldown.summon_darkglare.remains>dot.corruption.remains\n\nactions.item=use_items\n\nactions.necro_mw=variable,name=dots_ticking,value=dot.corruption.remains>2&dot.agony.remains>2&dot.unstable_affliction.remains>2&(!talent.siphon_life||dot.siphon_life.remains>2)\n# Trinkets align with PS for Shadow Embrace, DB for Haunt.\nactions.necro_mw+=/variable,name=trinket_delay,value=cooldown.phantom_singularity.remains,value_else=cooldown.decimating_bolt.remains,op=setif,condition=talent.shadow_embrace,if=covenant.necrolord\n# Burn soul shards if the fight will be ending soon.\nactions.necro_mw+=/malefic_rapture,if=time_to_die<execute_time*soul_shard&dot.unstable_affliction.ticking\n# Cast haunt to refresh before falloff.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<2+execute_time\n# High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<gcd.max+execute_time\n# Fire delayed trinkets in anticipation of Decimating Bolt.\nactions.necro_mw+=/use_item,name=empyreal_ordnance,if=variable.trinket_delay<20\nactions.necro_mw+=/use_item,name=sunblood_amethyst,if=variable.trinket_delay<6\nactions.necro_mw+=/use_item,name=soulletting_ruby,if=variable.trinket_delay<8\nactions.necro_mw+=/use_item,name=shadowed_orb_of_torment,if=variable.trinket_delay<4\n# If the player is using Haunt, fire PS on cooldown then follow with DB\nactions.necro_mw+=/phantom_singularity,if=talent.haunt&variable.dots_ticking\nactions.necro_mw+=/decimating_bolt,if=talent.haunt&cooldown.phantom_singularity.remains>0\n# If the player is using SE, fire DB on cooldown then following with PS\nactions.necro_mw+=/decimating_bolt,if=talent.shadow_embrace&variable.dots_ticking\nactions.necro_mw+=/phantom_singularity,if=talent.shadow_embrace&cooldown.decimating_bolt.remains>0\nactions.necro_mw+=/unstable_affliction,if=dot.unstable_affliction.remains<6\nactions.necro_mw+=/agony,if=dot.agony.remains<4\nactions.necro_mw+=/siphon_life,if=dot.siphon_life.remains<4\nactions.necro_mw+=/corruption,if=dot.corruption.remains<4\n# Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<2*gcd.max+execute_time\n# Call darkglare_prep if Phantom Singularity is currently ticking\nactions.necro_mw+=/call_action_list,name=darkglare_prep,strict=1,if=dot.phantom_singularity.ticking\n# Utilize any other stat trinkets if Phantom Singularity is ticking\nactions.necro_mw+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking\n# Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)\nactions.necro_mw+=/malefic_rapture,if=time>7&(buff.malefic_wrath.stack<3||buff.malefic_wrath.remains<4.5)\n# Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.\nactions.necro_mw+=/malefic_rapture,if=(dot.phantom_singularity.ticking||time_to_die<cooldown.phantom_singularity.remains)&(buff.malefic_wrath.stack<3||soul_shard>1)\n# Additional Drain Soul cast when PS is ticking\nactions.necro_mw+=/drain_soul,if=dot.phantom_singularity.ticking\n# Low - priority dot refresh when refreshable.\nactions.necro_mw+=/agony,if=refreshable\nactions.necro_mw+=/unstable_affliction,if=refreshable\nactions.necro_mw+=/corruption,if=refreshable\nactions.necro_mw+=/siphon_life,if=talent.siphon_life&refreshable\n# Fleshcraft to maintain Volatile Solvent.\nactions.necro_mw+=/fleshcraft,if=soulbind.volatile_solvent,cancel_if=buff.volatile_solvent_humanoid.up\n# Low-priority haunt refresh.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<3\n# Uninterruptible DS channel if we have the DB buff.\nactions.necro_mw+=/drain_soul,if=buff.decimating_bolt.up\nactions.necro_mw+=/drain_soul,if=talent.shadow_embrace&debuff.shadow_embrace.remains<3||debuff.shadow_embrace.stack<3,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/shadow_bolt\n\nactions.se=haunt\nactions.se+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.se+=/shadow_bolt\n\nactions.stat_trinkets=use_item,name=the_first_sigil\nactions.stat_trinkets+=/use_item,name=scars_of_fraternal_strife\nactions.stat_trinkets+=/use_item,name=inscrutable_quantum_device\nactions.stat_trinkets+=/use_item,name=instructors_divine_bell\nactions.stat_trinkets+=/use_item,name=overflowing_anima_cage\nactions.stat_trinkets+=/use_item,name=darkmoon_deck_putrescence\nactions.stat_trinkets+=/use_item,name=macabre_sheet_music\nactions.stat_trinkets+=/use_item,name=flame_of_battle\nactions.stat_trinkets+=/use_item,name=wakeners_frond\nactions.stat_trinkets+=/use_item,name=tablet_of_despair\nactions.stat_trinkets+=/use_item,name=sinful_aspirants_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=cosmic_aspirants_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=sinful_gladiators_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=cosmic_gladiators_badge_of_ferocity\nactions.stat_trinkets+=/use_item,name=obelisk_of_the_void\nactions.stat_trinkets+=/use_item,name=horn_of_valor\nactions.stat_trinkets+=/use_item,name=moonlit_prism\nactions.stat_trinkets+=/use_item,name=figurehead_of_the_naglfar\nactions.stat_trinkets+=/blood_fury\nactions.stat_trinkets+=/fireblood\nactions.stat_trinkets+=/berserking\n\n# We don't support ^ as XOR in Lua, so I've converted this to arithmetic.\nactions.trinket_split_check=variable,name=special_equipped,value=((1*equipped.empyreal_ordnance)+(1*equipped.inscrutable_quantum_device)+(1*equipped.soulletting_ruby)+(1*equipped.sunblood_amethyst))=1\nactions.trinket_split_check+=/variable,name=trinket_one,value=(trinket.1.has_proc&trinket.1.has_cooldown)\nactions.trinket_split_check+=/variable,name=trinket_two,value=(trinket.2.has_proc&trinket.2.has_cooldown)\nactions.trinket_split_check+=/variable,name=damage_trinket,value=(!(trinket.1.has_proc&trinket.1.has_cooldown))||(!(trinket.2.has_proc&trinket.2.has_cooldown))||equipped.glyph_of_assimilation\nactions.trinket_split_check+=/variable,name=trinket_split,value=(variable.trinket_one&variable.damage_trinket)||(variable.trinket_two&variable.damage_trinket)||(1*variable.trinket_one)+(1*variable.special_equipped)=1||(1*variable.trinket_two)+(1*variable.special_equipped)=1",
					["version"] = 20220617,
					["warnings"] = "WARNING:  The import for 'trinket_split_check' required some automated changes.\nLine 2: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 3: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 4: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 4: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\n\nWARNING:  The import for 'damage_trinkets' required some automated changes.\nLine 9: Unsupported use_item action [ toe_knees_promise]; entry disabled.\nLine 10: Unsupported use_item action [ mrrgrias_favor]; entry disabled.\n\nWARNING:  The import for 'stat_trinkets' required some automated changes.\nLine 15: Unsupported use_item action [ obelisk_of_the_void]; entry disabled.\nLine 18: Unsupported use_item action [ figurehead_of_the_naglfar]; entry disabled.\n\nWARNING:  The import for 'covenant' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 1: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 8: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 9: Converted 'trinket.1.X' to 'trinket.t1.X' (4x).\nLine 9: Converted 'trinket.2.X' to 'trinket.t2.X' (4x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 16: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 18: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 24: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 29: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 32: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 33: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 36: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 37: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 38: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 39: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 39: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 40: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 46: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 47: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (3x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 18: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 20: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 26: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'necro_mw' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 27: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 28: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 13 action lists.\n",
					["lists"] = {
						["darkglare_prep"] = {
							{
								["action"] = "vile_taint",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "dark_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [7]
							{
								["action"] = "summon_darkglare",
								["enabled"] = true,
							}, -- [8]
						},
						["trinket_split_check"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ( 1 * equipped.empyreal_ordnance ) + ( 1 * equipped.inscrutable_quantum_device ) + ( 1 * equipped.soulletting_ruby ) + ( 1 * equipped.sunblood_amethyst ) ) = 1",
								["description"] = "We don't support ",
								["var_name"] = "special_equipped",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t1.has_proc & trinket.t1.has_cooldown )",
								["var_name"] = "trinket_one",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t2.has_proc & trinket.t2.has_cooldown )",
								["var_name"] = "trinket_two",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! ( trinket.t1.has_proc & trinket.t1.has_cooldown ) ) || ( ! ( trinket.t2.has_proc & trinket.t2.has_cooldown ) ) || equipped.glyph_of_assimilation",
								["var_name"] = "damage_trinket",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( variable.trinket_one & variable.damage_trinket ) || ( variable.trinket_two & variable.damage_trinket ) || ( 1 * variable.trinket_one ) + ( 1 * variable.special_equipped ) = 1 || ( 1 * variable.trinket_two ) + ( 1 * variable.special_equipped ) = 1",
								["var_name"] = "trinket_split",
							}, -- [5]
						},
						["damage_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vice",
								["action"] = "ebonsoul_vice",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "toe_knees_promise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "mrrgrias_favor",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [11]
						},
						["delayed_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 20 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 20 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 8 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 8 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 4 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
							}, -- [5]
						},
						["stat_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "the_first_sigil",
								["action"] = "the_first_sigil",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "tablet_of_despair",
								["action"] = "tablet_of_despair",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "sinful_aspirants_badge_of_ferocity",
								["action"] = "sinful_aspirants_badge_of_ferocity",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "cosmic_aspirants_badge_of_ferocity",
								["action"] = "cosmic_aspirants_badge_of_ferocity",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "sinful_gladiators_badge_of_ferocity",
								["action"] = "sinful_gladiators_badge_of_ferocity",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_badge_of_ferocity",
								["action"] = "cosmic_gladiators_badge_of_ferocity",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "obelisk_of_the_void",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "horn_of_valor",
								["action"] = "horn_of_valor",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "figurehead_of_the_naglfar",
							}, -- [18]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [19]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [20]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [21]
						},
						["covenant"] = {
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 10 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "impending_catastrophe",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "impending_catastrophe",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.summon_darkglare.remains > 5 & ( debuff.haunt.remains > 4 || ! talent.haunt.enabled )",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 5 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "soul_rot",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "soul_rot",
							}, -- [5]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [6]
						},
						["dot_prep"] = {
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 8 & cooldown.summon_darkglare.remains > dot.agony.remains",
								["action"] = "agony",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 8 & cooldown.summon_darkglare.remains > dot.siphon_life.remains",
								["action"] = "siphon_life",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 8 & cooldown.summon_darkglare.remains > dot.unstable_affliction.remains",
								["action"] = "unstable_affliction",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 8 & cooldown.summon_darkglare.remains > dot.corruption.remains",
								["action"] = "corruption",
							}, -- [4]
						},
						["default"] = {
							{
								["action"] = "spell_lock",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 3",
								["list_name"] = "aoe",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.calamitous_crescendo.up",
								["action"] = "malefic_rapture",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & active_enemies = 1 & talent.phantom_singularity.enabled",
								["list_name"] = "necro_mw",
							}, -- [5]
							{
								["enabled"] = true,
								["description"] = "Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.",
								["action"] = "call_action_list",
								["list_name"] = "trinket_split_check",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking || dot.phantom_singularity.ticking ) & soul_shard > 3 || dot.vile_taint.ticking || talent.sow_the_seeds.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & ( ! variable.trinket_split || cooldown.soul_rot.remains > 20 || ( variable.trinket_one & cooldown.soul_rot.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.soul_rot.remains < trinket.t2.cooldown.remains ) ) || covenant.venthyr & ( ! variable.trinket_split || cooldown.impending_catastrophe.remains > 20 || ( variable.trinket_one & cooldown.impending_catastrophe.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.impending_catastrophe.remains < trinket.t2.cooldown.remains ) ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & ( ! variable.trinket_split || cooldown.phantom_singularity.remains > 20 || ( variable.trinket_one & cooldown.phantom_singularity.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.phantom_singularity.remains < trinket.t2.cooldown.remains ) ) || ! talent.phantom_singularity.enabled & ( ! variable.trinket_split || cooldown.summon_darkglare.remains > 20 || ( variable.trinket_one & cooldown.summon_darkglare.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.summon_darkglare.remains < trinket.t2.cooldown.remains ) )",
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
								["description"] = "Burn soul shards if fight is almost over",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set",
								["criteria"] = "( covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2 )",
								["list_name"] = "darkglare_prep",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Refresh dots early if going into a shard spending phase",
								["criteria"] = "( covenant.night_fae & ! dot.soul_rot.ticking & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & ! dot.impending_catastrophe_dot.ticking & cooldown.impending_catastrophe.remains < 4 ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & talent.phantom_singularity.enabled & ! dot.phantom_singularity.ticking & cooldown.phantom_singularity.remains < 4 )",
								["list_name"] = "dot_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "dark_soul",
								["description"] = "If Phantom Singularity is ticking, it is safe to use Dark Soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking )",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & time > 5 & cooldown.soul_rot.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & time > 5 & cooldown.impending_catastrophe.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & time > 5 & cooldown.decimating_bolt.remains < 3 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.kyrian || covenant.none || ( covenant.necrolord & ! runeforge.malefic_wrath.enabled ) ) & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
								["description"] = "Other covenants (including non-MW Necro) cast PS on cooldown",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 16",
								["action"] = "phantom_singularity",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If Phantom Singularity is ticking, it's time to use other major dots",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking & ( covenant.night_fae || covenant.venthyr )",
								["list_name"] = "covenant",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "dot.agony.remains < 4",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight",
								["action"] = "seed_of_corruption",
								["description"] = "Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.siphon_life.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.remains < 4",
								["action"] = "seed_of_corruption",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "( soul_shard > 1 || active_enemies > 2 ) & cooldown.summon_darkglare.remains > 12",
								["action"] = "vile_taint",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & dot.unstable_affliction.remains < 4",
								["action"] = "unstable_affliction",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "dot.siphon_life.remains < 4",
								["cycle_targets"] = 1,
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["cycle_targets"] = 1,
								["criteria"] = "active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled ) & dot.corruption.remains < 2",
								["description"] = "Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4 & time > 21",
								["action"] = "malefic_rapture",
								["description"] = "After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied",
								["criteria"] = "( covenant.venthyr & ! talent.phantom_singularity.enabled & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready ) || ( covenant.night_fae & ! talent.phantom_singularity.enabled & dot.soul_rot.ticking & cooldown.summon_darkglare.ready ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.ready )",
								["list_name"] = "darkglare_prep",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
								["description"] = "Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "boss & ! talent.phantom_singularity.enabled & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [33]
							{
								["enabled"] = true,
								["description"] = "Catch-all item usage for anything not specified elsewhere",
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < ( 2 - action.shadow_bolt.in_flight ) || debuff.shadow_embrace.remains < 3 )",
								["action"] = "call_action_list",
								["list_name"] = "se",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "( dot.vile_taint.ticking || dot.impending_catastrophe_dot.ticking || dot.soul_rot.ticking ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.malefic_wrath.enabled & cooldown.soul_rot.remains > 20 & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.malefic_wrath.enabled & ( covenant.necrolord || covenant.kyrian ) & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
								["description"] = "Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & ( dot.phantom_singularity.ticking || cooldown.phantom_singularity.remains > 25 || boss & time_to_die < cooldown.phantom_singularity.remains ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack > 40 || buff.inevitable_demise.up & boss & fight_remains < 4",
								["action"] = "drain_life",
								["description"] = "Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks",
							}, -- [41]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant",
							}, -- [42]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [44]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [45]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["criteria"] = "refreshable & active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled )",
								["cycle_targets"] = 1,
							}, -- [46]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [47]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [48]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [49]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive & ! buff.grimoire_of_sacrifice.up",
								["action"] = "fel_domination",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [5]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.corruption > 0 & active_dot.agony > 0 & active_dot.unstable_affliction > 0 & ( ! talent.siphon_life.enabled || active_dot.siphon_life > 0 ) & ( dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled )",
								["var_name"] = "dots_ready",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "seed_of_corruption",
								["criteria"] = "spell_targets.seed_of_corruption_aoe >= 3",
								["line_cd"] = "10",
							}, -- [8]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "unstable_affliction",
								["enabled"] = true,
							}, -- [10]
						},
						["aoe"] = {
							{
								["action"] = "phantom_singularity",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled & can_seed",
								["action"] = "seed_of_corruption",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.refreshable",
								["action"] = "seed_of_corruption",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony < 4 & ! dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony >= 4 & refreshable & dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "unstable_affliction",
								["criteria"] = "! ticking & pvptalent.rampant_afflictions.enabled & active_dot.unstable_affliction < 3",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 1",
								["action"] = "vile_taint",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.venthyr & ( cooldown.impending_catastrophe.ready || dot.impending_catastrophe_dot.ticking ) & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) & ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & ( cooldown.soul_rot.ready || dot.soul_rot.ticking ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) )",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "dot.vile_taint.ticking",
								["action"] = "malefic_rapture",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "dot.soul_rot.ticking & ! talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! talent.vile_taint.enabled",
								["action"] = "malefic_rapture",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4",
								["action"] = "malefic_rapture",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "active_dot.siphon_life <= 3 & refreshable & ! dot.siphon_life.ticking",
								["cycle_targets"] = 1,
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack >= 50 || boss & buff.inevitable_demise.up & fight_remains < 5 || buff.inevitable_demise.stack >= 35 & dot.soul_rot.ticking",
								["action"] = "drain_life",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [26]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [27]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [28]
						},
						["item"] = {
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [1]
						},
						["se"] = {
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [1]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [3]
						},
						["necro_mw"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "dot.corruption.remains > 2 & dot.agony.remains > 2 & dot.unstable_affliction.remains > 2 & ( ! talent.siphon_life.enabled || dot.siphon_life.remains > 2 )",
								["var_name"] = "dots_ticking",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Trinkets align with PS for Shadow Embrace, DB for Haunt.",
								["criteria"] = "covenant.necrolord",
								["value"] = "cooldown.phantom_singularity.remains",
								["action"] = "variable",
								["value_else"] = "cooldown.decimating_bolt.remains",
								["var_name"] = "trinket_delay",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "time_to_die < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
								["description"] = "Burn soul shards if the fight will be ending soon.",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.haunt.remains < 2 + execute_time",
								["action"] = "haunt",
								["description"] = "Cast haunt to refresh before falloff.",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < gcd.max + execute_time",
								["action"] = "malefic_rapture",
								["description"] = "High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["description"] = "Fire delayed trinkets in anticipation of Decimating Bolt.",
								["criteria"] = "variable.trinket_delay < 20",
								["action"] = "empyreal_ordnance",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "variable.trinket_delay < 6",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "variable.trinket_delay < 8",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "variable.trinket_delay < 4",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & variable.dots_ticking",
								["action"] = "phantom_singularity",
								["description"] = "If the player is using Haunt, fire PS on cooldown then follow with DB",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & cooldown.phantom_singularity.remains > 0",
								["action"] = "decimating_bolt",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & variable.dots_ticking",
								["action"] = "decimating_bolt",
								["description"] = "If the player is using SE, fire DB on cooldown then following with PS",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & cooldown.decimating_bolt.remains > 0",
								["action"] = "phantom_singularity",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 6",
								["action"] = "unstable_affliction",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 4",
								["action"] = "agony",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 4",
								["action"] = "siphon_life",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 4",
								["action"] = "corruption",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < 2 * gcd.max + execute_time",
								["action"] = "malefic_rapture",
								["description"] = "Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Call darkglare_prep if Phantom Singularity is currently ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "darkglare_prep",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Utilize any other stat trinkets if Phantom Singularity is ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "stat_trinkets",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "time > 7 & ( buff.malefic_wrath.stack < 3 || buff.malefic_wrath.remains < 4.5 )",
								["action"] = "malefic_rapture",
								["description"] = "Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "( dot.phantom_singularity.ticking || time_to_die < cooldown.phantom_singularity.remains ) & ( buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
								["description"] = "Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "drain_soul",
								["description"] = "Additional Drain Soul cast when PS is ticking",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "agony",
								["description"] = "Low - priority dot refresh when refreshable.",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "unstable_affliction",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "corruption",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "talent.siphon_life.enabled & refreshable",
								["action"] = "siphon_life",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent_humanoid.up",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["description"] = "Fleshcraft to maintain Volatile Solvent.",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "dot.haunt.remains < 3",
								["action"] = "haunt",
								["description"] = "Low-priority haunt refresh.",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.decimating_bolt.up",
								["action"] = "drain_soul",
								["description"] = "Uninterruptible DS channel if we have the DB buff.",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & debuff.shadow_embrace.remains < 3 || debuff.shadow_embrace.stack < 3",
								["action"] = "drain_soul",
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
							}, -- [31]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [32]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [33]
						},
					},
					["author"] = "SimC",
				},
			},
		},
		["Default"] = {
			["displays"] = {
				["Interrupts"] = {
					["primaryWidth"] = 60,
					["rel"] = "CENTER",
					["x"] = -68.61532592773438,
					["y"] = -114.5226821899414,
					["elvuiCooldown"] = true,
					["primaryHeight"] = 60,
				},
				["Cooldowns"] = {
					["primaryWidth"] = 60,
					["rel"] = "CENTER",
					["numIcons"] = 4,
					["x"] = -68.58293151855469,
					["y"] = -114.4856109619141,
					["elvuiCooldown"] = true,
					["primaryHeight"] = 60,
				},
				["Primary"] = {
					["primaryWidth"] = 60,
					["rel"] = "CENTER",
					["numIcons"] = 5,
					["queue"] = {
						["width"] = 30,
						["height"] = 30,
					},
					["y"] = -115.1510314941406,
					["x"] = -67.06875610351562,
					["primaryHeight"] = 60,
				},
				["AOE"] = {
					["primaryWidth"] = 60,
					["rel"] = "CENTER",
					["numIcons"] = 5,
					["queue"] = {
						["width"] = 30,
						["height"] = 30,
					},
					["y"] = -113.3367156982422,
					["x"] = -68.88533020019531,
					["primaryHeight"] = 60,
				},
				["Defensives"] = {
					["primaryWidth"] = 60,
					["rel"] = "CENTER",
					["x"] = -67.5,
					["y"] = -116.3720016479492,
					["elvuiCooldown"] = true,
					["primaryHeight"] = 60,
				},
			},
			["iconStore"] = {
				["minimapPos"] = 174.4363645910583,
			},
			["runOnce"] = {
				["forceReloadClassDefaultOptions_20220306_103"] = true,
				["forceReloadClassDefaultOptions_20220306_262"] = true,
				["forceReloadClassDefaultOptions_20220306_267"] = true,
				["forceEnableEnhancedRecheckBoomkin_20210712"] = true,
				["forceReloadClassDefaultOptions_20220306_266"] = true,
				["forceReloadClassDefaultOptions_20220306_102"] = true,
				["forceReloadAllDefaultPriorities_20220228"] = true,
				["forceEnableAllClassesOnceDueToBug_20220225"] = true,
				["forceReloadClassDefaultOptions_20220306_258"] = true,
				["updateMaxRefreshToNewSpecOptions_20220222"] = true,
				["forceReloadClassDefaultOptions_20220306_63"] = true,
				["forceReloadClassDefaultOptions_20220306_62"] = true,
				["forceReloadClassDefaultOptions_20220306_64"] = true,
				["forceReloadClassDefaultOptions_20220306_263"] = true,
				["forceReloadClassDefaultOptions_20220306_104"] = true,
				["forceReloadClassDefaultOptions_20220306_265"] = true,
				["resetAberrantPackageDates_20190728_1"] = true,
			},
			["notifications"] = {
				["x"] = 45.0001220703125,
				["y"] = 437.9999694824219,
			},
			["specs"] = {
				[103] = {
					["settings"] = {
						["delay_berserking"] = false,
						["owlweave_cat"] = false,
						["filler_regrowth"] = false,
					},
				},
				[63] = {
					["settings"] = {
						["prevent_hardcasts"] = false,
						["pyroblast_pull"] = false,
					},
				},
				[262] = {
					["settings"] = {
						["stack_buffer"] = 1.1,
					},
				},
				[263] = {
					["settings"] = {
						["pad_lava_lash"] = true,
						["pad_windstrike"] = true,
						["filler_shock"] = true,
					},
				},
				[104] = {
					["settings"] = {
						["catweave_bear"] = false,
						["ironfur_damage_threshold"] = 5,
						["mangle_more"] = false,
						["maul_rage"] = 20,
						["owlweave_bear"] = false,
						["shift_for_convoke"] = false,
					},
				},
				[265] = {
					["settings"] = {
						["manage_ds_ticks"] = false,
					},
				},
				[266] = {
					["abilities"] = {
						["soulstone"] = {
							["toggle"] = "none",
						},
					},
					["settings"] = {
						["dcon_imps"] = 5,
					},
				},
				[267] = {
					["settings"] = {
						["default_pet"] = "summon_sayaad",
						["fixed_aoe_3_plus"] = false,
					},
					["throttleRefresh"] = true,
				},
				[64] = {
					["settings"] = {
						["ignore_freezing_rain_st"] = true,
					},
				},
				[102] = {
					["settings"] = {
						["starlord_cancel"] = false,
						["delay_berserking"] = false,
					},
				},
				[258] = {
					["settings"] = {
						["pad_void_bolt"] = true,
						["ignore_solvent"] = true,
						["stm_timer"] = 20,
						["sw_death_protection"] = 50,
						["pad_ascended_blast"] = true,
					},
				},
			},
			["packs"] = {
				["Shadow"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220821,
					["author"] = "SimC",
					["desc"] = "Shadow Priest\nAugust 21, 2022\n\nChanges:\n- Tweak Void Torrent when target counts are forced.\n- Pretend dots are up when targets are close to dying, so that nukes are still recommended.",
					["lists"] = {
						["cwc"] = {
							{
								["enabled"] = true,
								["description"] = "T28 4-set conditional for CWC Mind Blast",
								["only_cwc"] = "1",
								["criteria"] = "set_bonus.tier28_4pc & buff.dark_thought.up & pet.fiend.active & runeforge.shadowflame_prism.equipped & ! buff.voidform.up & pet.your_shadow.remains < fight_remains || buff.dark_thought.up & pet.your_shadow.remains < gcd.max * ( 3 + ( ! buff.voidform.up ) * 16 ) & pet.your_shadow.remains < fight_remains",
								["action"] = "mind_blast",
							}, -- [1]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "searing_nightmare",
								["cycle_targets"] = 1,
								["criteria"] = "( variable.searing_nightmare_cutoff & ! variable.pool_for_cds ) || ( dot.shadow_word_pain.refreshable & spell_targets.mind_sear > 1 )",
								["description"] = "Use Searing Nightmare if you will hit enough targets and Power Infusion and Voidform are not ready, or to refresh SW:P on two or more targets.",
							}, -- [2]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "searing_nightmare",
								["cycle_targets"] = 1,
								["criteria"] = "talent.searing_nightmare.enabled & dot.shadow_word_pain.refreshable & spell_targets.mind_sear > 2",
								["description"] = "Short Circuit Searing Nightmare condition to keep SW:P up in AoE",
							}, -- [3]
							{
								["enabled"] = true,
								["only_cwc"] = "1",
								["action"] = "mind_blast",
								["description"] = "only_cwc makes the action only usable during channeling and not as a regular action.",
							}, -- [4]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "silence",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.voidform.up || buff.power_infusion.up",
								["action"] = "potion",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( dot.shadow_word_pain.ticking || target.time_to_die <= 4 ) & ( dot.vampiric_touch.ticking || target.time_to_die <= 6 )",
								["var_name"] = "dots_up",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "variable.dots_up & ( dot.devouring_plague.ticking || target.time_to_die <= 4 )",
								["var_name"] = "all_dots_up",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.mind_sear > 2 + buff.voidform.up",
								["description"] = "Start using Searing Nightmare at 3+ targets or 4+ if you are in Voidform",
								["var_name"] = "searing_nightmare_cutoff",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! runeforge.spheres_harmony.equipped & ! covenant.necrolord || cooldown.power_infusion.remains <= gcd.max * 3 || buff.power_infusion.up || boss & fight_remains <= 25 )",
								["var_name"] = "cd_management",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.vampiric_touch",
								["var_name"] = "max_vts",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "5 + 2 * ( variable.cd_management & cooldown.void_eruption.remains <= 10 ) & talent.hungering_void.enabled",
								["criteria"] = "talent.searing_nightmare.enabled & spell_targets.mind_sear = 7",
								["var_name"] = "max_vts",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["criteria"] = "talent.searing_nightmare.enabled & spell_targets.mind_sear > 7",
								["var_name"] = "max_vts",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "4",
								["criteria"] = "talent.searing_nightmare.enabled & spell_targets.mind_sear = 8 & ! talent.shadow_crash.enabled",
								["var_name"] = "max_vts",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( spell_targets.mind_sear <= 5 ) * spell_targets.mind_sear",
								["criteria"] = "buff.voidform.up",
								["var_name"] = "max_vts",
							}, -- [11]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "1",
								["criteria"] = "! settings.cycle",
								["var_name"] = "max_vts",
							}, -- [12]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.vampiric_touch < cycle_enemies",
								["var_name"] = "is_vt_possible",
							}, -- [13]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.vampiric_touch >= variable.max_vts || ! variable.is_vt_possible",
								["var_name"] = "vts_applied",
							}, -- [14]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.void_eruption.up & variable.cd_management",
								["description"] = "Cooldown Pool Variable, Used to pool before activating Voidform.",
								["var_name"] = "pool_for_cds",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.power_infusion.up || cooldown.power_infusion.remains > action.power_infusion.cooldown - 10",
								["action"] = "blood_fury",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.voidform.up",
								["action"] = "fireblood",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.voidform.up",
								["action"] = "berserking",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "lights_judgment",
								["description"] = "Use Light's Judgment if there are 2 or more targets, or adds aren't spawning for more than 75s.",
								["criteria"] = "spell_targets.lights_judgment >= 2 || ( ! raid_event.adds.exists || raid_event.adds.in > 75 )",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.voidform.up",
								["action"] = "ancestral_call",
							}, -- [20]
							{
								["enabled"] = true,
								["name"] = "hyperthread_wristwraps",
								["description"] = "Disable use of the Hyperthread Wristwraps entirely.",
								["criteria"] = "0",
								["action"] = "hyperthread_wristwraps",
							}, -- [21]
							{
								["enabled"] = true,
								["name"] = "ring_of_collapsing_futures",
								["description"] = "Use the ring every 30s as to not increase the cooldown unless the target is about to die.",
								["criteria"] = "( buff.temptation.stack < 1 & target.time_to_die > 60 ) || target.time_to_die < 60",
								["action"] = "ring_of_collapsing_futures",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cwc",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "main",
							}, -- [24]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "remains < 300",
								["action"] = "power_word_fortitude",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! buff.shadowform.up",
								["action"] = "shadowform",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "insanity.deficit > 15",
								["action"] = "arcane_torrent",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "2",
								["var_name"] = "mind_sear_cutoff",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! talent.damnation.enabled",
								["action"] = "vampiric_touch",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.damnation.enabled",
								["action"] = "mind_blast",
							}, -- [8]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["description"] = "Use trinket after pull starts and then on CD after that until you get 4th stack. Try to delay getting 5th stack for cooldowns. Use before other on use to not trigger ICD between trinkets (bug?).",
								["criteria"] = "( ! buff.scars_of_fraternal_strife_4.up & time > 1 ) || ( buff.voidform.up || buff.power_infusion.up || cooldown.void_eruption.remains > 10 ) || covenant.night_fae",
								["action"] = "scars_of_fraternal_strife",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["description"] = "Use on CD ASAP to get DoT ticking and expire to line up better with Voidform",
								["criteria"] = "cooldown.void_eruption.remains <= 12 || cooldown.void_eruption.remains > 27",
								["action"] = "empyreal_ordnance",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["description"] = "Try to Sync IQD with Double Stacked CDs if possible. On longer fights with more IQD uses attempt to sync with any cd or just use it.",
								["criteria"] = "buff.voidform.up & buff.power_infusion.up || boss & fight_remains <= 20 || buff.power_infusion.up & cooldown.void_eruption.remains + 15 > fight_remains || buff.voidform.up & cooldown.power_infusion.remains + 15 > fight_remains || ( cooldown.power_infusion.remains >= 10 & cooldown.void_eruption.remains >= 10 ) & fight_remains >= 190",
								["action"] = "inscrutable_quantum_device",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["description"] = "Sync Sheet Music with Voidform",
								["criteria"] = "cooldown.void_eruption.remains > 10",
								["action"] = "macabre_sheet_music",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["cycle_targets"] = 1,
								["action"] = "soulletting_ruby",
								["criteria"] = "buff.power_infusion.up || ! priest.self_power_infusion || equipped.shadowed_orb_of_torment",
								["description"] = "Sync Ruby with Power Infusion usage, make sure to snipe the lowest HP target. When used with Shadowed Orb of Torment, just use on CD as much as possible.",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "the_first_sigil",
								["description"] = "First Sigil small optimization with Soulletting Ruby",
								["criteria"] = "buff.voidform.up || buff.power_infusion.up || ! priest.self_power_infusion || cooldown.void_eruption.remains > 10 || ( equipped.soulletting_ruby & ! cooldown.soulletting_ruby.up ) || boss & fight_remains < 20",
								["action"] = "the_first_sigil",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "gladiators_badge",
								["description"] = "Use Badge inside of VF for the first use or on CD after the first use. Short circuit if void eruption cooldown is 10s or more away.",
								["criteria"] = "cooldown.void_eruption.remains >= 10",
								["action"] = "gladiators_badge",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["description"] = "Use Shadowed Orb of Torment when not in Voidform, or in between Void Bolt casts in Voidform. As Kyrian or Necrolord line it up with stacked cooldowns.",
								["criteria"] = "cooldown.power_infusion.remains <= 10 & cooldown.void_eruption.remains <= 10 & ( covenant.necrolord || covenant.kyrian ) || ( covenant.venthyr || covenant.night_fae ) & ( ! buff.voidform.up || prev_gcd.1.void_bolt ) || boss & fight_remains <= 40",
								["action"] = "shadowed_orb_of_torment",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "architects_ingenuity_core",
								["description"] = "Use this on CD for max CDR",
								["name"] = "architects_ingenuity_core",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "use_items",
								["description"] = "Default fallback for usable items: Use on cooldown in order by trinket slot.",
								["criteria"] = "buff.voidform.up || buff.power_infusion.up || cooldown.void_eruption.remains > 10",
							}, -- [10]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["action"] = "power_infusion",
								["description"] = "Use Power Infusion with Voidform. Hold for Voidform comes off cooldown in the next 10 seconds otherwise use on cd unless the player is part of the kyrian covenant, or if there will not be another Void Eruption this fight. Attempt to sync the last power infusion of the fight to void eruption for non Kyrians.",
								["criteria"] = "priest.self_power_infusion & ( buff.voidform.up || ! covenant.kyrian & ! covenant.necrolord & cooldown.void_eruption.remains >= 10 || fight_remains < cooldown.void_eruption.remains ) & ( fight_remains >= cooldown.void_eruption.remains + 15 & cooldown.void_eruption.remains <= gcd * 4 || fight_remains > cooldown.power_infusion.duration || boss & fight_remains < cooldown.void_eruption.remains + 15 || covenant.kyrian || buff.bloodlust.up )",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "sinful_gladiators_badge_of_ferocity",
								["description"] = "Use Badge inside of VF for the first use or on CD after the first use. With Night Fae hold for VF.",
								["criteria"] = "buff.voidform.up || time > 10 & ( ! covenant.night_fae )",
								["action"] = "sinful_gladiators_badge_of_ferocity",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "fae_guardians",
								["description"] = "Use Fae Guardians on CD outside of Voidform. Use Fae Guardiands in Voidform if you have either Grove Invigoration or Field of Blossoms. Wait for dots to be up before activating Fae Guardians to maximise the buff.",
								["criteria"] = "! buff.voidform.up & ( ! cooldown.void_torrent.up || ! talent.void_torrent.enabled ) & ( variable.dots_up & spell_targets.vampiric_touch = 1 || variable.vts_applied & spell_targets.vampiric_touch > 1 ) || buff.voidform.up & ( soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled )",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "mindgames",
								["cycle_targets"] = 1,
								["criteria"] = "insanity < 90 & ( ( variable.all_dots_up & ( ! cooldown.void_eruption.up || ! talent.hungering_void.enabled ) ) || buff.voidform.up ) & ( ! talent.hungering_void.enabled || debuff.hungering_void.remains > cast_time || ! buff.voidform.up ) & ( ! talent.searing_nightmare.enabled || spell_targets.mind_sear < 5 )",
								["description"] = "Use Mindgames when all 3 DoTs are up, or you are in Voidform. Ensure Hungering Void will still be up when the cast time finishes. Stop using at 5+ targets with Searing Nightmare.",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "unholy_nova",
								["description"] = "Use Unholy Nova on CD, holding briefly to wait for power infusion or add spawns.",
								["criteria"] = "! talent.hungering_void.enabled & variable.dots_up || debuff.hungering_void.up & buff.voidform.up || ( cooldown.void_eruption.remains > 10 || ! variable.pool_for_cds ) & ! buff.voidform.up",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "boon_of_the_ascended",
								["description"] = "Use on CD but prioritise using Void Eruption first, if used inside of VF on ST use after a voidbolt for cooldown efficiency and for hungering void uptime if talented.",
								["criteria"] = "! buff.voidform.up & ! cooldown.void_eruption.up & spell_targets.mind_sear > 1 & ! talent.searing_nightmare.enabled || ( buff.voidform.up & spell_targets.mind_sear < 2 & ! talent.searing_nightmare.enabled & ( prev_gcd.1.void_bolt & ( ! equipped.empyreal_ordnance || ! talent.hungering_void.enabled ) || equipped.empyreal_ordnance & cooldown.empyreal_ordnance.remains <= 162 & debuff.hungering_void.up ) ) || ( buff.voidform.up & talent.searing_nightmare.enabled )",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "health.pct <= 75",
								["action"] = "desperate_prayer",
							}, -- [8]
						},
						["boon"] = {
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.mind_sear <= 3",
								["action"] = "ascended_blast",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "ascended_nova",
								["description"] = "Only use Ascended Nova when not talented into Searing Nightmare on 2+ targets.",
								["criteria"] = "spell_targets.ascended_nova > 1 & spell_targets.mind_sear > 1 & ! talent.searing_nightmare.enabled",
							}, -- [2]
						},
						["main"] = {
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "buff.boon_of_the_ascended.up",
								["list_name"] = "boon",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! target.is_player",
								["action"] = "dispel_magic",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "void_eruption",
								["description"] = "Use Void Eruption on cooldown pooling at least 25 insanity (or 40 for Blood Elf on opener) but not if you will overcap insanity in VF. Make sure Shadowfiend/Mindbender and Mind Blast is on cooldown before VE if Shadowflame is equipped. Ignore pooling restrictions if using Shadowflame Prism and Bender is out.",
								["criteria"] = "variable.pool_for_cds & ( insanity >= 25 + ( 15 * ( race.blood_elf & time < 30 ) ) || pet.fiend.active & runeforge.shadowflame_prism.equipped & ! cooldown.mind_blast.up & ! cooldown.shadow_word_death.up ) & ( insanity <= 85 || talent.searing_nightmare.enabled & variable.searing_nightmare_cutoff ) & ! cooldown.fiend.up & ( ! soulbind.volatile_solvent.enabled || buff.volatile_solvent.up || settings.ignore_solvent )",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "shadow_word_pain",
								["description"] = "Make sure you put up SW:P ASAP on the target if Wrathful Faerie isn't active when fighting 1-3 targets.",
								["criteria"] = "buff.fae_guardians.up & ! debuff.wrathful_faerie.up & spell_targets.mind_sear < 4",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "mind_sear",
								["criteria"] = "talent.searing_nightmare.enabled & spell_targets.mind_sear > variable.mind_sear_cutoff & ! dot.shadow_word_pain.ticking & ! cooldown.fiend.up & spell_targets.mind_sear >= 4",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "mind_sear",
								["cycle_targets"] = 1,
								["criteria"] = "talent.searing_nightmare.enabled & spell_targets.mind_sear > variable.mind_sear_cutoff & ! dot.shadow_word_pain.ticking & ! cooldown.fiend.up",
								["description"] = "High Priority Mind Sear action to refresh DoTs with searing_nightmare",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "damnation",
								["cycle_targets"] = 1,
								["criteria"] = "( dot.vampiric_touch.refreshable || dot.shadow_word_pain.refreshable || ( ! buff.mind_devourer.up & insanity < 50 ) ) & ( buff.dark_thought.stack < buff.dark_thought.max_stack || ! set_bonus.tier28_2pc )",
								["description"] = "Prefer to use Damnation ASAP if SW:P or VT is not up or you cannot cast a normal Devouring Plague (including Mind Devourer procs) and you will not cap Dark Thoughts stacks if using T28 2pc.",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "shadow_word_death",
								["description"] = "Use Shadow Word Death if using Shadowflame Prism and bender will expire during the next gcd.",
								["criteria"] = "pet.fiend.active & runeforge.shadowflame_prism.equipped & pet.fiend.remains <= gcd & spell_targets.mind_sear <= 7",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "mind_blast",
								["description"] = "Always use mindblasts if capped and hungering void is up and using Shadowflame Prism and bender is up.  Additionally, cast mindblast if you would be unable to get the rift by waiting a gcd.",
								["criteria"] = "( cooldown.mind_blast.charges > 1 & ( debuff.hungering_void.up || ! talent.hungering_void.enabled ) || pet.fiend.remains <= cast_time + gcd ) & pet.fiend.active & runeforge.shadowflame_prism.equipped & pet.fiend.remains > cast_time & spell_targets.mind_sear <= 7 || buff.dark_thought.up & buff.voidform.up & ! cooldown.void_bolt.up & ( ! runeforge.shadowflame_prism.equipped || ! pet.fiend.active ) & set_bonus.tier28_4pc",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "void_bolt",
								["description"] = "Use Void Bolt at higher priority with Hungering Void up to 4 targets, or other talents on ST.",
								["criteria"] = "insanity <= 85 & talent.hungering_void.enabled & talent.searing_nightmare.enabled & spell_targets.mind_sear <= 6 || ( ( talent.hungering_void.enabled & ! talent.searing_nightmare.enabled ) || spell_targets.mind_sear = 1 )",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "devouring_plague",
								["description"] = "Special Devouring Plague with Searing Nightmare when usage during Cooldowns",
								["criteria"] = "( set_bonus.tier28_4pc || talent.hungering_void.enabled ) & talent.searing_nightmare.enabled & pet.fiend.active & runeforge.shadowflame_prism.equipped & buff.voidform.up & spell_targets.mind_sear <= 6",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "devouring_plague",
								["description"] = "Don't use Devouring Plague if you can get into Voidform instead, or if Searing Nightmare is talented and will hit enough targets.",
								["criteria"] = "( refreshable || insanity > 75 || talent.void_torrent.enabled & cooldown.void_torrent.remains <= 3 * gcd ) & ( ! variable.pool_for_cds || insanity >= 85 ) & ( ! talent.searing_nightmare.enabled || ( talent.searing_nightmare.enabled & ! variable.searing_nightmare_cutoff ) )",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "void_bolt",
								["description"] = "Use VB on CD if you don't need to cast Devouring Plague, and there are less than 4 targets out (5 with conduit).",
								["criteria"] = "spell_targets.mind_sear < ( 4 + conduit.dissonant_echoes.enabled ) & insanity <= 85 & talent.searing_nightmare.enabled || ! talent.searing_nightmare.enabled",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "shadow_word_death",
								["cycle_targets"] = 1,
								["criteria"] = "( target.health.pct < 20 & spell_targets.mind_sear < 4 ) || ( pet.fiend.active & runeforge.shadowflame_prism.equipped & spell_targets.mind_sear <= 7 )",
								["description"] = "Use Shadow Word: Death if the target is about to die or you have Shadowflame Prism equipped with Mindbender or Shadowfiend active.",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "surrender_to_madness",
								["cycle_targets"] = 1,
								["criteria"] = "target.time_to_die < 20 & buff.voidform.down",
								["description"] = "Use Surrender to Madness on a target that is going to die at the right time.",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "void_torrent",
								["cycle_targets"] = 1,
								["criteria"] = "variable.dots_up & ( buff.voidform.down || buff.voidform.remains < cooldown.void_bolt.remains || prev_gcd.1.void_bolt & ! buff.bloodlust.react & spell_targets.mind_sear < 3 ) & variable.vts_applied & spell_targets.mind_sear < ( 5 + ( 6 * talent.twist_of_fate.enabled ) )",
								["description"] = "Use Void Torrent only if SW:P and VT are active and the target won't die during the channel.",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "( talent.searing_nightmare.enabled & spell_targets.mind_sear > variable.mind_sear_cutoff || dot.shadow_word_pain.ticking ) & variable.vts_applied",
								["action"] = "mindbender",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "shadow_word_death",
								["description"] = "Use SW:D with Painbreaker Psalm unless the target will be below 20% before the cooldown comes back.",
								["criteria"] = "runeforge.painbreaker_psalm.equipped & variable.dots_up & target.time_to_pct_20 > ( cooldown.shadow_word_death.duration + gcd )",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "shadow_crash",
								["description"] = "Use Shadow Crash on CD unless there are adds incoming.",
								["criteria"] = "raid_event.adds.in > 10",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.mind_sear > variable.mind_sear_cutoff & buff.dark_thought.up",
								["description"] = "Use Mind Sear to consume Dark Thoughts procs on AOE. TODO Confirm is this is a higher priority than redotting on AOE unless dark thoughts is about to time out",
								["cycle_targets"] = 1,
								["interrupt_if"] = "ticks>=4",
								["interrupt_immediate"] = "1",
								["chain"] = "1",
								["action"] = "mind_sear",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.dark_thought.up & variable.dots_up & ! buff.voidform.up & ! variable.pool_for_cds & cooldown.mind_blast.full_recharge_time >= gcd.max",
								["description"] = "Use Mind Flay to consume Dark Thoughts procs on ST outside of VF.",
								["interrupt_if"] = "ticks>=4&!buff.dark_thought.up",
								["interrupt_immediate"] = "1",
								["chain"] = "1",
								["action"] = "mind_flay",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "mind_blast",
								["description"] = "Use Mind Blast if you don't need to refresh DoTs. Stop casting at 4 or more targets with Searing Nightmare talented and you are not using Shadowflame Prism or Psychic Link.spell_targets.mind_sear>?5 gets the minimum of 5 and the number of targets. Also, do not press mindblast until all targets are dotted with VT when using shadowflame prism if bender is available.",
								["criteria"] = "variable.dots_up & raid_event.movement.in > cast_time + 0.5 & spell_targets.mind_sear < ( 4 + 2 * talent.misery.enabled + active_dot.vampiric_touch * talent.psychic_link.enabled + ( spell_targets.mind_sear >? 5 ) * ( pet.fiend.active & runeforge.shadowflame_prism.equipped ) ) & ( ! runeforge.shadowflame_prism.equipped || ! cooldown.fiend.up & runeforge.shadowflame_prism.equipped || variable.vts_applied )",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "vampiric_touch",
								["cycle_targets"] = 1,
								["criteria"] = "refreshable & target.time_to_die >= 18 & ( dot.vampiric_touch.ticking || ! variable.vts_applied ) & variable.max_vts > 0 || ( talent.misery.enabled & dot.shadow_word_pain.refreshable ) || buff.unfurling_darkness.up",
								["description"] = "Refresh Vampiric Touch wisely based on Damnation and other Talents.",
							}, -- [24]
							{
								["enabled"] = true,
								["action"] = "shadow_word_pain",
								["description"] = "Special condition to stop casting SW:P on off-targets when fighting 3 or more stacked mobs and using Psychic Link and NOT Misery.",
								["criteria"] = "refreshable & target.time_to_die > 4 & ! talent.misery.enabled & talent.psychic_link.enabled & spell_targets.mind_sear > 2",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "shadow_word_pain",
								["cycle_targets"] = 1,
								["criteria"] = "refreshable & target.time_to_die > 4 & ! talent.misery.enabled & ! ( talent.searing_nightmare.enabled & spell_targets.mind_sear > variable.mind_sear_cutoff ) & ( ! talent.psychic_link.enabled || ( talent.psychic_link.enabled & spell_targets.mind_sear <= 2 ) )",
								["description"] = "Keep SW:P up on as many targets as possible, except when fighting 3 or more stacked mobs with Psychic Link.",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["interrupt_if"] = "ticks>=1",
								["interrupt_immediate"] = "1",
								["criteria"] = "soulbind.volatile_solvent.enabled & ! buff.voidform.up & ! buff.power_infusion.up & buff.volatile_solvent.remains < 10",
								["description"] = "Use Fleshcraft outside of main cooldowns to maintain Volatile Solvent buff.",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "mind_sear",
								["cycle_targets"] = 1,
								["interrupt_if"] = "ticks>=2",
								["interrupt_immediate"] = "1",
								["criteria"] = "spell_targets.mind_sear > variable.mind_sear_cutoff",
								["chain"] = "1",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "mind_flay",
								["interrupt_if"] = "ticks>=2&(!buff.dark_thought.up||cooldown.void_bolt.up&(buff.voidform.up||!buff.dark_thought.up&buff.dissonant_echoes.up))",
								["interrupt_immediate"] = "1",
								["chain"] = "1",
							}, -- [29]
							{
								["enabled"] = true,
								["description"] = "Use SW:D as last resort if on the move",
								["action"] = "shadow_word_death",
							}, -- [30]
							{
								["enabled"] = true,
								["description"] = "Use SW:P as last resort if on the move and SW:D is on CD",
								["action"] = "shadow_word_pain",
							}, -- [31]
						},
					},
					["version"] = 20220821,
					["warnings"] = "WARNING:  The import for 'trinkets' required some automated changes.\nLine 6: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'main' required some automated changes.\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 27: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\n\nWARNING:  The import for 'cds' required some automated changes.\nLine 6: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\n\nImported 7 action lists.\n",
					["profile"] = "## Shadow Priest\n## August 21, 2022\n\n## Changes:\n## - Tweak Void Torrent when target counts are forced.\n## - Pretend dots are up when targets are close to dying, so that nukes are still recommended.\n\n## Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/power_word_fortitude,if=remains<300\nactions.precombat+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent\nactions.precombat+=/shadowform,if=!buff.shadowform.up\nactions.precombat+=/arcane_torrent,if=insanity.deficit>15\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/variable,name=mind_sear_cutoff,op=set,value=2\nactions.precombat+=/vampiric_touch,if=!talent.damnation.enabled\nactions.precombat+=/mind_blast,if=talent.damnation.enabled\n\n# Executed every time the actor is available.\nactions=silence\n## Potions\nactions=potion,if=buff.voidform.up||buff.power_infusion.up\nactions+=/variable,name=dots_up,op=set,value=(dot.shadow_word_pain.ticking||target.time_to_die<=4)&(dot.vampiric_touch.ticking||target.time_to_die<=6)\nactions+=/variable,name=all_dots_up,op=set,value=variable.dots_up&(dot.devouring_plague.ticking||target.time_to_die<=4)\n# Start using Searing Nightmare at 3+ targets or 4+ if you are in Voidform\nactions+=/variable,name=searing_nightmare_cutoff,op=set,value=spell_targets.mind_sear>2+buff.voidform.up\nactions+=/variable,name=cd_management,op=set,value=(!runeforge.spheres_harmony.equipped&!covenant.necrolord||cooldown.power_infusion.remains<=gcd.max*3||buff.power_infusion.up||boss&fight_remains<=25)\nactions+=/variable,name=max_vts,op=set,value=spell_targets.vampiric_touch\nactions+=/variable,name=max_vts,op=set,value=5+2*(variable.cd_management&cooldown.void_eruption.remains<=10)&talent.hungering_void.enabled,if=talent.searing_nightmare.enabled&spell_targets.mind_sear=7\nactions+=/variable,name=max_vts,op=set,value=0,if=talent.searing_nightmare.enabled&spell_targets.mind_sear>7\nactions+=/variable,name=max_vts,op=set,value=4,if=talent.searing_nightmare.enabled&spell_targets.mind_sear=8&!talent.shadow_crash.enabled\nactions+=/variable,name=max_vts,op=set,value=(spell_targets.mind_sear<=5)*spell_targets.mind_sear,if=buff.voidform.up\nactions+=/variable,name=max_vts,op=set,value=1,if=!settings.cycle\nactions+=/variable,name=is_vt_possible,op=set,value=active_dot.vampiric_touch<cycle_enemies\nactions+=/variable,name=vts_applied,op=set,value=active_dot.vampiric_touch>=variable.max_vts||!variable.is_vt_possible\n# Cooldown Pool Variable, Used to pool before activating Voidform.\nactions+=/variable,name=pool_for_cds,op=set,value=cooldown.void_eruption.up&variable.cd_management\nactions+=/blood_fury,if=buff.power_infusion.up||cooldown.power_infusion.remains>action.power_infusion.cooldown-10\nactions+=/fireblood,if=buff.voidform.up\nactions+=/berserking,if=buff.voidform.up\n# Use Light's Judgment if there are 2 or more targets, or adds aren't spawning for more than 75s.\nactions+=/lights_judgment,if=spell_targets.lights_judgment>=2||(!raid_event.adds.exists||raid_event.adds.in>75)\nactions+=/ancestral_call,if=buff.voidform.up\n# Disable use of the Hyperthread Wristwraps entirely.\nactions+=/use_item,name=hyperthread_wristwraps,if=0\n# Use the ring every 30s as to not increase the cooldown unless the target is about to die.\nactions+=/use_item,name=ring_of_collapsing_futures,if=(buff.temptation.stack<1&target.time_to_die>60)||target.time_to_die<60\nactions+=/call_action_list,name=cwc\nactions+=/run_action_list,name=main\n\n## APL to use when Boon of the Ascended is active\nactions.boon=ascended_blast,if=spell_targets.mind_sear<=3\n# Only use Ascended Nova when not talented into Searing Nightmare on 2+ targets.\nactions.boon+=/ascended_nova,if=spell_targets.ascended_nova>1&spell_targets.mind_sear>1&!talent.searing_nightmare.enabled\n\n## CDs\n# Use Power Infusion with Voidform. Hold for Voidform comes off cooldown in the next 10 seconds otherwise use on cd unless the player is part of the kyrian covenant, or if there will not be another Void Eruption this fight. Attempt to sync the last power infusion of the fight to void eruption for non Kyrians.\nactions.cds=power_infusion,if=priest.self_power_infusion&(buff.voidform.up||!covenant.kyrian&!covenant.necrolord&cooldown.void_eruption.remains>=10||fight_remains<cooldown.void_eruption.remains)&(fight_remains>=cooldown.void_eruption.remains+15&cooldown.void_eruption.remains<=gcd*4||fight_remains>cooldown.power_infusion.duration||boss&fight_remains<cooldown.void_eruption.remains+15||covenant.kyrian||buff.bloodlust.up)\n# Use Silence on CD to proc Sephuz's Proclamation.\n# actions.cds+=/silence,target_if=runeforge.sephuzs_proclamation.equipped&(target.is_add||target.debuff.casting.react)\n# Use Badge inside of VF for the first use or on CD after the first use. With Night Fae hold for VF.\nactions.cds+=/use_item,name=sinful_gladiators_badge_of_ferocity,if=buff.voidform.up||time>10&(!covenant.night_fae)\n# Use Fae Guardians on CD outside of Voidform. Use Fae Guardiands in Voidform if you have either Grove Invigoration or Field of Blossoms. Wait for dots to be up before activating Fae Guardians to maximise the buff.\nactions.cds+=/fae_guardians,if=!buff.voidform.up&(!cooldown.void_torrent.up||!talent.void_torrent.enabled)&(variable.dots_up&spell_targets.vampiric_touch=1||variable.vts_applied&spell_targets.vampiric_touch>1)||buff.voidform.up&(soulbind.grove_invigoration.enabled||soulbind.field_of_blossoms.enabled)\n# Use Mindgames when all 3 DoTs are up, or you are in Voidform. Ensure Hungering Void will still be up when the cast time finishes. Stop using at 5+ targets with Searing Nightmare.\nactions.cds+=/mindgames,cycle_targets=1,if=insanity<90&((variable.all_dots_up&(!cooldown.void_eruption.up||!talent.hungering_void.enabled))||buff.voidform.up)&(!talent.hungering_void.enabled||debuff.hungering_void.remains>cast_time||!buff.voidform.up)&(!talent.searing_nightmare.enabled||spell_targets.mind_sear<5)\n# Use Unholy Nova on CD, holding briefly to wait for power infusion or add spawns.\nactions.cds+=/unholy_nova,if=!talent.hungering_void.enabled&variable.dots_up||debuff.hungering_void.up&buff.voidform.up||(cooldown.void_eruption.remains>10||!variable.pool_for_cds)&!buff.voidform.up\n# Use on CD but prioritise using Void Eruption first, if used inside of VF on ST use after a voidbolt for cooldown efficiency and for hungering void uptime if talented.\nactions.cds+=/boon_of_the_ascended,if=!buff.voidform.up&!cooldown.void_eruption.up&spell_targets.mind_sear>1&!talent.searing_nightmare.enabled||(buff.voidform.up&spell_targets.mind_sear<2&!talent.searing_nightmare.enabled&(prev_gcd.1.void_bolt&(!equipped.empyreal_ordnance||!talent.hungering_void.enabled)||equipped.empyreal_ordnance&trinket.empyreal_ordnance.cooldown.remains<=162&debuff.hungering_void.up))||(buff.voidform.up&talent.searing_nightmare.enabled)\nactions.cds+=/call_action_list,name=trinkets\nactions.cds+=/desperate_prayer,if=health.pct<=75\n\n## Cast While Casting actions. Set at higher priority to short circuit interrupt conditions on Mind Sear/Flay\n# T28 4-set conditional for CWC Mind Blast\nactions.cwc=mind_blast,only_cwc=1,target_if=set_bonus.tier28_4pc&buff.dark_thought.up&pet.fiend.active&runeforge.shadowflame_prism.equipped&!buff.voidform.up&pet.your_shadow.remains<fight_remains||buff.dark_thought.up&pet.your_shadow.remains<gcd.max*(3+(!buff.voidform.up)*16)&pet.your_shadow.remains<fight_remains\n# Use Searing Nightmare if you will hit enough targets and Power Infusion and Voidform are not ready, or to refresh SW:P on two or more targets.\nactions.cwc=searing_nightmare,use_while_casting=1,cycle_targets=1,if=(variable.searing_nightmare_cutoff&!variable.pool_for_cds)||(dot.shadow_word_pain.refreshable&spell_targets.mind_sear>1)\n# Short Circuit Searing Nightmare condition to keep SW:P up in AoE\nactions.cwc+=/searing_nightmare,use_while_casting=1,cycle_targets=1,if=talent.searing_nightmare.enabled&dot.shadow_word_pain.refreshable&spell_targets.mind_sear>2\n# only_cwc makes the action only usable during channeling and not as a regular action.\nactions.cwc+=/mind_blast,only_cwc=1\n\n## Main APL, should cover all ranges of targets and scenarios\nactions.main=call_action_list,name=boon,strict=1,if=buff.boon_of_the_ascended.up\nactions.main+=/dispel_magic,if=!target.is_player\n# Use Void Eruption on cooldown pooling at least 25 insanity (or 40 for Blood Elf on opener) but not if you will overcap insanity in VF. Make sure Shadowfiend/Mindbender and Mind Blast is on cooldown before VE if Shadowflame is equipped. Ignore pooling restrictions if using Shadowflame Prism and Bender is out.\nactions.main+=/void_eruption,if=variable.pool_for_cds&(insanity>=25+(15*(race.blood_elf&time<30))||pet.fiend.active&runeforge.shadowflame_prism.equipped&!cooldown.mind_blast.up&!cooldown.shadow_word_death.up)&(insanity<=85||talent.searing_nightmare.enabled&variable.searing_nightmare_cutoff)&!cooldown.fiend.up&(!soulbind.volatile_solvent||buff.volatile_solvent.up||settings.ignore_solvent)\n# Make sure you put up SW:P ASAP on the target if Wrathful Faerie isn't active when fighting 1-3 targets.\nactions.main+=/shadow_word_pain,if=buff.fae_guardians.up&!debuff.wrathful_faerie.up&spell_targets.mind_sear<4\nactions.main+=/mind_sear,cycle_targets=1,if=talent.searing_nightmare.enabled&spell_targets.mind_sear>variable.mind_sear_cutoff&!dot.shadow_word_pain.ticking&!cooldown.fiend.up&spell_targets.mind_sear>=4\nactions.main+=/call_action_list,name=cds\n# High Priority Mind Sear action to refresh DoTs with searing_nightmare\nactions.main+=/mind_sear,cycle_targets=1,if=talent.searing_nightmare.enabled&spell_targets.mind_sear>variable.mind_sear_cutoff&!dot.shadow_word_pain.ticking&!cooldown.fiend.up\n# Prefer to use Damnation ASAP if SW:P or VT is not up or you cannot cast a normal Devouring Plague (including Mind Devourer procs) and you will not cap Dark Thoughts stacks if using T28 2pc.\nactions.main+=/damnation,cycle_targets=1,if=(dot.vampiric_touch.refreshable||dot.shadow_word_pain.refreshable||(!buff.mind_devourer.up&insanity<50))&(buff.dark_thought.stack<buff.dark_thought.max_stack||!set_bonus.tier28_2pc)\n# Use Shadow Word Death if using Shadowflame Prism and bender will expire during the next gcd.\nactions.main+=/shadow_word_death,if=pet.fiend.active&runeforge.shadowflame_prism.equipped&pet.fiend.remains<=gcd&spell_targets.mind_sear<=7\n# Always use mindblasts if capped and hungering void is up and using Shadowflame Prism and bender is up.  Additionally, cast mindblast if you would be unable to get the rift by waiting a gcd.\nactions.main+=/mind_blast,if=(cooldown.mind_blast.charges>1&(debuff.hungering_void.up||!talent.hungering_void.enabled)||pet.fiend.remains<=cast_time+gcd)&pet.fiend.active&runeforge.shadowflame_prism.equipped&pet.fiend.remains>cast_time&spell_targets.mind_sear<=7||buff.dark_thought.up&buff.voidform.up&!cooldown.void_bolt.up&(!runeforge.shadowflame_prism.equipped||!pet.fiend.active)&set_bonus.tier28_4pc\n# Use Void Bolt at higher priority with Hungering Void up to 4 targets, or other talents on ST.\nactions.main+=/void_bolt,if=insanity<=85&talent.hungering_void.enabled&talent.searing_nightmare.enabled&spell_targets.mind_sear<=6||((talent.hungering_void.enabled&!talent.searing_nightmare.enabled)||spell_targets.mind_sear=1)\n# Special Devouring Plague with Searing Nightmare when usage during Cooldowns\nactions.main+=/devouring_plague,if=(set_bonus.tier28_4pc||talent.hungering_void.enabled)&talent.searing_nightmare.enabled&pet.fiend.active&runeforge.shadowflame_prism.equipped&buff.voidform.up&spell_targets.mind_sear<=6\n# Don't use Devouring Plague if you can get into Voidform instead, or if Searing Nightmare is talented and will hit enough targets.\nactions.main+=/devouring_plague,if=(refreshable||insanity>75||talent.void_torrent.enabled&cooldown.void_torrent.remains<=3*gcd)&(!variable.pool_for_cds||insanity>=85)&(!talent.searing_nightmare.enabled||(talent.searing_nightmare.enabled&!variable.searing_nightmare_cutoff))\n# Use VB on CD if you don't need to cast Devouring Plague, and there are less than 4 targets out (5 with conduit).\nactions.main+=/void_bolt,if=spell_targets.mind_sear<(4+conduit.dissonant_echoes.enabled)&insanity<=85&talent.searing_nightmare.enabled||!talent.searing_nightmare.enabled\n# Use Shadow Word: Death if the target is about to die or you have Shadowflame Prism equipped with Mindbender or Shadowfiend active.\nactions.main+=/shadow_word_death,cycle_targets=1,if=(target.health.pct<20&spell_targets.mind_sear<4)||(pet.fiend.active&runeforge.shadowflame_prism.equipped&spell_targets.mind_sear<=7)\n# Use Surrender to Madness on a target that is going to die at the right time.\nactions.main+=/surrender_to_madness,cycle_targets=1,if=target.time_to_die<20&buff.voidform.down\n# Use Void Torrent only if SW:P and VT are active and the target won't die during the channel.\nactions.main+=/void_torrent,cycle_targets=1,if=variable.dots_up&(buff.voidform.down||buff.voidform.remains<cooldown.void_bolt.remains||prev_gcd.1.void_bolt&!buff.bloodlust.react&spell_targets.mind_sear<3)&variable.vts_applied&spell_targets.mind_sear<(5+(6*talent.twist_of_fate.enabled))\nactions.main+=/mindbender,if=(talent.searing_nightmare.enabled&spell_targets.mind_sear>variable.mind_sear_cutoff||dot.shadow_word_pain.ticking)&variable.vts_applied\n# Use SW:D with Painbreaker Psalm unless the target will be below 20% before the cooldown comes back.\nactions.main+=/shadow_word_death,if=runeforge.painbreaker_psalm.equipped&variable.dots_up&target.time_to_pct_20>(cooldown.shadow_word_death.duration+gcd)\n# Use Shadow Crash on CD unless there are adds incoming.\nactions.main+=/shadow_crash,if=raid_event.adds.in>10\n# Use Mind Sear to consume Dark Thoughts procs on AOE. TODO Confirm is this is a higher priority than redotting on AOE unless dark thoughts is about to time out\nactions.main+=/mind_sear,cycle_targets=1,if=spell_targets.mind_sear>variable.mind_sear_cutoff&buff.dark_thought.up,chain=1,interrupt_immediate=1,interrupt_if=ticks>=4\n## TODO:  Check this Mind Flay implementation to see if it breaks other routine channels of Mind Flay; may need to make this breakage only work with the set bonus.\n# Use Mind Flay to consume Dark Thoughts procs on ST outside of VF.\nactions.main+=/mind_flay,if=buff.dark_thought.up&variable.dots_up&!buff.voidform.up&!variable.pool_for_cds&cooldown.mind_blast.full_recharge_time>=gcd.max,chain=1,interrupt_immediate=1,interrupt_if=ticks>=4&!buff.dark_thought.up\n# Use Mind Blast if you don't need to refresh DoTs. Stop casting at 4 or more targets with Searing Nightmare talented and you are not using Shadowflame Prism or Psychic Link.spell_targets.mind_sear>?5 gets the minimum of 5 and the number of targets. Also, do not press mindblast until all targets are dotted with VT when using shadowflame prism if bender is available.\nactions.main+=/mind_blast,if=variable.dots_up&raid_event.movement.in>cast_time+0.5&spell_targets.mind_sear<(4+2*talent.misery.enabled+active_dot.vampiric_touch*talent.psychic_link.enabled+(spell_targets.mind_sear>?5)*(pet.fiend.active&runeforge.shadowflame_prism.equipped))&(!runeforge.shadowflame_prism.equipped||!cooldown.fiend.up&runeforge.shadowflame_prism.equipped||variable.vts_applied)\n# Refresh Vampiric Touch wisely based on Damnation and other Talents.\nactions.main+=/vampiric_touch,cycle_targets=1,if=refreshable&target.time_to_die>=18&(dot.vampiric_touch.ticking||!variable.vts_applied)&variable.max_vts>0||(talent.misery.enabled&dot.shadow_word_pain.refreshable)||buff.unfurling_darkness.up\n# Special condition to stop casting SW:P on off-targets when fighting 3 or more stacked mobs and using Psychic Link and NOT Misery.\nactions.main+=/shadow_word_pain,if=refreshable&target.time_to_die>4&!talent.misery.enabled&talent.psychic_link.enabled&spell_targets.mind_sear>2\n# Keep SW:P up on as many targets as possible, except when fighting 3 or more stacked mobs with Psychic Link.\nactions.main+=/shadow_word_pain,cycle_targets=1,if=refreshable&target.time_to_die>4&!talent.misery.enabled&!(talent.searing_nightmare.enabled&spell_targets.mind_sear>variable.mind_sear_cutoff)&(!talent.psychic_link.enabled||(talent.psychic_link.enabled&spell_targets.mind_sear<=2))\n# Use Fleshcraft outside of main cooldowns to maintain Volatile Solvent buff.\nactions.main+=/fleshcraft,if=soulbind.volatile_solvent&!buff.voidform.up&!buff.power_infusion.up&buff.volatile_solvent.remains<10,interrupt_immediate=1,interrupt_if=ticks>=1\nactions.main+=/mind_sear,cycle_targets=1,if=spell_targets.mind_sear>variable.mind_sear_cutoff,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2\nactions.main+=/mind_flay,chain=1,interrupt_immediate=1,interrupt_if=ticks>=2&(!buff.dark_thought.up||cooldown.void_bolt.up&(buff.voidform.up||!buff.dark_thought.up&buff.dissonant_echoes.up))\n# Use SW:D as last resort if on the move\nactions.main+=/shadow_word_death\n# Use SW:P as last resort if on the move and SW:D is on CD\nactions.main+=/shadow_word_pain\n\n# Use trinket after pull starts and then on CD after that until you get 4th stack. Try to delay getting 5th stack for cooldowns. Use before other on use to not trigger ICD between trinkets (bug?).\nactions.trinkets=use_item,name=scars_of_fraternal_strife,if=(!buff.scars_of_fraternal_strife_4.up&time>1)||(buff.voidform.up||buff.power_infusion.up||cooldown.void_eruption.remains>10)||covenant.night_fae\n# Use on CD ASAP to get DoT ticking and expire to line up better with Voidform\nactions.trinkets+=/use_item,name=empyreal_ordnance,if=cooldown.void_eruption.remains<=12||cooldown.void_eruption.remains>27\n# Try to Sync IQD with Double Stacked CDs if possible. On longer fights with more IQD uses attempt to sync with any cd or just use it.\nactions.trinkets+=/use_item,name=inscrutable_quantum_device,if=buff.voidform.up&buff.power_infusion.up||boss&fight_remains<=20||buff.power_infusion.up&cooldown.void_eruption.remains+15>fight_remains||buff.voidform.up&cooldown.power_infusion.remains+15>fight_remains||(cooldown.power_infusion.remains>=10&cooldown.void_eruption.remains>=10)&fight_remains>=190\n# Sync Sheet Music with Voidform\nactions.trinkets+=/use_item,name=macabre_sheet_music,if=cooldown.void_eruption.remains>10\n# Sync Ruby with Power Infusion usage, make sure to snipe the lowest HP target. When used with Shadowed Orb of Torment, just use on CD as much as possible.\nactions.trinkets+=/use_item,name=soulletting_ruby,cycle_targets=1,if=buff.power_infusion.up||!priest.self_power_infusion||equipped.shadowed_orb_of_torment\n# First Sigil small optimization with Soulletting Ruby\nactions.trinkets+=/use_item,name=the_first_sigil,if=buff.voidform.up||buff.power_infusion.up||!priest.self_power_infusion||cooldown.void_eruption.remains>10||(equipped.soulletting_ruby&!trinket.soulletting_ruby.cooldown.up)||boss&fight_remains<20\n# Use Badge inside of VF for the first use or on CD after the first use. Short circuit if void eruption cooldown is 10s or more away.\nactions.trinkets+=/use_item,name=gladiators_badge,if=cooldown.void_eruption.remains>=10\n# Use Shadowed Orb of Torment when not in Voidform, or in between Void Bolt casts in Voidform. As Kyrian or Necrolord line it up with stacked cooldowns.\nactions.trinkets+=/use_item,name=shadowed_orb_of_torment,if=cooldown.power_infusion.remains<=10&cooldown.void_eruption.remains<=10&(covenant.necrolord||covenant.kyrian)||(covenant.venthyr||covenant.night_fae)&(!buff.voidform.up||prev_gcd.1.void_bolt)||boss&fight_remains<=40\n# Use this on CD for max CDR\nactions.trinkets+=/use_item,name=architects_ingenuity_core\n# Default fallback for usable items: Use on cooldown in order by trinket slot.\nactions.trinkets+=/use_items,if=buff.voidform.up||buff.power_infusion.up||cooldown.void_eruption.remains>10",
					["spec"] = 258,
				},
				["Elemental"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220801,
					["spec"] = 262,
					["desc"] = "Elemental Shaman\nAugust 1, 2022\n\nChanges:\n- Incorporate settings.stack_buffer for Icefury, Stormkeeper.\n- Add Meteor and Eye of the Storm again.",
					["profile"] = "## Elemental Shaman\n## August 1, 2022\n\n## Changes:\n## - Incorporate settings.stack_buffer for Icefury, Stormkeeper.\n## - Add Meteor and Eye of the Storm again.\n\n# Executed every time the actor is available.\nactions.precombat=earth_elemental,if=!talent.primal_elementalist.enabled\n# Use Stormkeeper precombat unless some adds will spawn soon.\nactions.precombat+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent\nactions.precombat+=/stormkeeper,if=talent.stormkeeper.enabled&(raid_event.adds.count<3||raid_event.adds.in>50)\nactions.precombat+=/fire_elemental\nactions.precombat+=/elemental_blast,if=talent.elemental_blast.enabled&spell_targets.chain_lightning<3\n# Because LvB has a travel time, the addon places *this entry* on CD for 3 seconds to avoid double-LvB on pull.\nactions.precombat+=/lava_burst,line_cd=3,if=!talent.elemental_blast.enabled&spell_targets.chain_lightning<3||buff.stormkeeper.up\nactions.precombat+=/chain_lightning,if=!talent.elemental_blast.enabled&spell_targets.chain_lightning>=3&!buff.stormkeeper.up\nactions.precombat+=/potion\n\n# Interrupt of casts.\nactions+=/wind_shear\nactions+=/spiritwalkers_grace,moving=1\nactions+=/potion\nactions+=/use_items\nactions+=/flame_shock,if=(!talent.elemental_blast.enabled)&!ticking&!pet.storm_elemental.active&(spell_targets.chain_lightning<3||talent.master_of_the_elements.enabled||runeforge.skybreakers_fiery_demise.equipped)\nactions+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up&(!pet.storm_elemental.active||spell_targets.chain_lightning<3&buff.wind_gust.stack<20||soulbind.lead_by_example.enabled||runeforge.splintered_elements.equipped)&(spell_targets.chain_lightning<5||talent.master_of_the_elements.enabled||runeforge.skybreakers_fiery_demise.equipped||soulbind.lead_by_example.enabled||runeforge.splintered_elements.equipped)&!buff.splintered_elements.up\nactions+=/flame_shock,if=!ticking&(!pet.storm_elemental.active||spell_targets.chain_lightning<3&buff.wind_gust.stack<20)&(spell_targets.chain_lightning<3||talent.master_of_the_elements.enabled||runeforge.skybreakers_fiery_demise.equipped)\nactions+=/fire_elemental\nactions+=/meteor\nactions+=/blood_fury,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/berserking,if=!talent.ascendance.enabled||buff.ascendance.up\nactions+=/fireblood,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/ancestral_call,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/vesper_totem\nactions+=/fae_transfusion,if=covenant.night_fae&!runeforge.seeds_of_rampant_growth.equipped&(!talent.master_of_the_elements.enabled||buff.master_of_the_elements.up)&spell_targets.chain_lightning<3\nactions+=/fae_transfusion,if=covenant.night_fae&runeforge.seeds_of_rampant_growth.equipped&(!talent.master_of_the_elements.enabled||buff.master_of_the_elements.up||spell_targets.chain_lightning>=3)&(cooldown.fire_elemental.remains>20||cooldown.storm_elemental.remains>20)\nactions+=/run_action_list,name=aoe,strict=1,if=active_enemies>2&(spell_targets.chain_lightning>2||spell_targets.lava_beam>2)\nactions+=/run_action_list,name=single_target,strict=1,if=!talent.storm_elemental.enabled&active_enemies<=2\nactions+=/run_action_list,name=se_single_target,strict=1,if=talent.storm_elemental.enabled&active_enemies<=2\n\nactions.aoe=storm_elemental,if=!pet.storm_elemental.active\nactions.aoe+=/eye_of_the_storm,if=buff.call_lightning.remains>=10\nactions.aoe+=/earthquake,if=buff.echoing_shock.up\nactions.aoe+=/chain_harvest\nactions.aoe+=/stormkeeper,if=talent.stormkeeper.enabled\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable&((active_dot.flame_shock<2&active_enemies<=3&cooldown.primordial_wave.remains<16&covenant.necrolord&!pet.storm_elemental.active||active_dot.flame_shock<1&active_enemies>=4&!pet.storm_elemental.active&talent.master_of_the_elements.enabled)||(runeforge.skybreakers_fiery_demise.equipped&!pet.storm_elemental.active)||(runeforge.splintered_elements.equipped&(active_dot.flame_shock<3&!runeforge.echoes_of_great_sundering.equipped||active_dot.flame_shock<4)&(cooldown.primordial_wave.remains<16||buff.primordial_wave.up)))\nactions.aoe+=/flame_shock,if=!active_dot.flame_shock&!pet.storm_elemental.active&(talent.master_of_the_elements.enabled||runeforge.skybreakers_fiery_demise.equipped)||(runeforge.splintered_elements.equipped&!ticking&buff.primordial_wave.up)\nactions.aoe+=/echoing_shock,if=talent.echoing_shock.enabled&maelstrom>=60&(runeforge.echoes_of_great_sundering.equipped&buff.echoes_of_great_sundering.up||!runeforge.echoes_of_great_sundering.equipped)\nactions.aoe+=/ascendance,if=talent.ascendance.enabled&(!pet.storm_elemental.active)&(!talent.icefury.enabled||!buff.icefury.up&!cooldown.icefury.up)\nactions.aoe+=/liquid_magma_totem,if=talent.liquid_magma_totem.enabled\nactions.aoe+=/chain_lightning,if=spell_targets.chain_lightning<4&buff.master_of_the_elements.up&maelstrom<50\nactions.aoe+=/earth_shock,if=runeforge.echoes_of_great_sundering.equipped&!buff.echoes_of_great_sundering.up\nactions.aoe+=/lava_burst,if=dot.flame_shock.remains&spell_targets.chain_lightning<4&(!pet.storm_elemental.active)&(buff.lava_surge.up&!buff.master_of_the_elements.up&talent.master_of_the_elements.enabled)\nactions.aoe+=/earthquake,if=spell_targets.chain_lightning>=2&!runeforge.echoes_of_great_sundering.equipped&(talent.master_of_the_elements.enabled&maelstrom>=50&!buff.master_of_the_elements.up)\nactions.aoe+=/lava_burst,cycle_targets=1,if=covenant.necrolord&runeforge.echoes_of_great_sundering.equipped&set_bonus.tier28_4pc&buff.lava_surge.up&!buff.primordial_wave.up\nactions.aoe+=/lava_burst,cycle_targets=1,if=buff.lava_surge.up&buff.primordial_wave.up&(buff.primordial_wave.remains<3*gcd||active_dot.flame_shock=spell_targets.chain_lightning||active_dot.flame_shock=3&!runeforge.echoes_of_great_sundering.equipped||active_dot.flame_shock=4)\nactions.aoe+=/lava_burst,if=dot.flame_shock.remains&spell_targets.chain_lightning<4&runeforge.skybreakers_fiery_demise.equipped&buff.lava_surge.up&talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&maelstrom>=50\nactions.aoe+=/lava_burst,if=dot.flame_shock.remains&((spell_targets.chain_lightning<4&runeforge.skybreakers_fiery_demise.equipped&talent.master_of_the_elements.enabled)||(talent.master_of_the_elements.enabled&maelstrom>=50&!buff.master_of_the_elements.up&(!runeforge.echoes_of_great_sundering.equipped||buff.echoes_of_great_sundering.up)&!runeforge.skybreakers_fiery_demise.equipped))\nactions.aoe+=/lava_burst,if=dot.flame_shock.remains&spell_targets.chain_lightning=4&runeforge.skybreakers_fiery_demise.equipped&buff.lava_surge.up&talent.master_of_the_elements.enabled&!buff.master_of_the_elements.up&maelstrom>=50\nactions.aoe+=/earthquake,if=spell_targets.chain_lightning>=2\nactions.aoe+=/chain_lightning,if=buff.stormkeeper.remains<3*gcd*buff.stormkeeper.stack\nactions.aoe+=/lava_burst,cycle_targets=1,if=set_bonus.tier28_4pc&buff.lava_surge.up&!buff.primordial_wave.up\nactions.aoe+=/lava_burst,if=set_bonus.tier28_4pc&buff.lava_surge.up&!buff.primordial_wave.up\nactions.aoe+=/lava_burst,if=buff.lava_surge.up&spell_targets.chain_lightning<4&(!pet.storm_elemental.active)&dot.flame_shock.ticking\nactions.aoe+=/elemental_blast,if=talent.elemental_blast.enabled&spell_targets.chain_lightning<5&(!pet.storm_elemental.active)\nactions.aoe+=/lava_beam,if=talent.ascendance.enabled\nactions.aoe+=/chain_lightning\nactions.aoe+=/lava_burst,moving=1,if=buff.lava_surge.up&cooldown_react\nactions.aoe+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.aoe+=/frost_shock,moving=1\n\nactions.se_single_target=storm_elemental,if=!pet.storm_elemental.active\nactions.se_single_target+=/lightning_bolt,if=buff.surge_of_power.up\nactions.se_single_target+=/primordial_wave,cycle_targets=1,if=covenant.necrolord&!buff.primordial_wave.up&!buff.splintered_elements.up\nactions.se_single_target+=/eye_of_the_storm,if=buff.call_lightning.remains>=10\nactions.se_single_target+=/frost_shock,if=talent.icefury.enabled&buff.icefury.up&buff.icefury.remains<settings.stack_buffer*gcd*buff.icefury.stack&buff.wind_gust.stack<18\nactions.se_single_target+=/flame_shock,cycle_targets=1,if=refreshable\nactions.se_single_target+=/frost_shock,if=talent.icefury.enabled&buff.icefury.up&buff.icefury.remains<1.1*gcd*buff.icefury.stack\nactions.se_single_target+=/elemental_blast,if=talent.elemental_blast.enabled\nactions.se_single_target+=/stormkeeper,if=talent.stormkeeper.enabled\nactions.se_single_target+=/echoing_shock,if=talent.echoing_shock.enabled&cooldown.lava_burst.remains<=gcd&spell_targets.chain_lightning<2||maelstrom>=60&spell_targets.chain_lightning>=2&(!runeforge.echoes_of_great_sundering.equipped||buff.echoes_of_great_sundering.up)\nactions.se_single_target+=/lava_burst,if=(buff.wind_gust.stack<18&!buff.bloodlust.up)||buff.lava_surge.up\nactions.se_single_target+=/lava_burst,if=talent.echoing_shock.enabled&buff.echoing_shock.up&spell_targets.chain_lightning<2\nactions.se_single_target+=/earthquake,if=talent.echoing_shock.enabled&buff.echoing_shock.up&spell_targets.chain_lightning>=2\nactions.se_single_target+=/lightning_bolt,if=buff.stormkeeper.up\nactions.se_single_target+=/earthquake,if=buff.echoes_of_great_sundering.up\nactions.se_single_target+=/earth_shock,if=spell_targets.chain_lightning<2&maelstrom>=60&(buff.wind_gust.stack<20||maelstrom>90)||(runeforge.echoes_of_great_sundering.equipped&!buff.echoes_of_great_sundering.up)||runeforge.windspeakers_lava_resurgence.equipped\nactions.se_single_target+=/earthquake,if=(spell_targets.chain_lightning>1)&(!dot.flame_shock.refreshable)\nactions.se_single_target+=/lightning_bolt,if=pet.storm_elemental.active&buff.bloodlust.up\nactions.se_single_target+=/lava_burst,if=buff.ascendance.up\nactions.se_single_target+=/lava_burst,if=cooldown_react\nactions.se_single_target+=/lava_burst,if=cooldown_react&charges>talent.echo_of_the_elements.enabled\nactions.se_single_target+=/frost_shock,if=talent.icefury.enabled&buff.icefury.up\nactions.se_single_target+=/chain_harvest\nactions.se_single_target+=/fleshcraft,if=soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\nactions.se_single_target+=/static_discharge,if=talent.static_discharge.enabled\nactions.se_single_target+=/earth_elemental,if=!talent.primal_elementalist.enabled||talent.primal_elementalist.enabled&(!pet.storm_elemental.active)\nactions.se_single_target+=/chain_lightning,if=active_enemies>1&(spell_targets.chain_lightning>1||spell_targets.lava_beam>1)\nactions.se_single_target+=/lightning_bolt\nactions.se_single_target+=/bag_of_tricks\nactions.se_single_target+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.se_single_target+=/flame_shock,moving=1,if=movement.distance>6\nactions.se_single_target+=/frost_shock,moving=1\n\nactions.single_target=lightning_bolt,if=(buff.stormkeeper.remains<settings.stack_buffer*gcd*buff.stormkeeper.stack)\nactions.single_target+=/frost_shock,if=talent.icefury.enabled&buff.icefury.up&buff.icefury.remains<settings.stack_buffer*gcd*buff.icefury.stack\nactions.single_target+=/flame_shock,cycle_targets=1,if=(!ticking||dot.flame_shock.remains<=gcd||talent.ascendance.enabled&dot.flame_shock.remains<(cooldown.ascendance.remains+buff.ascendance.duration)&cooldown.ascendance.remains<4)&(buff.lava_surge.up||!buff.bloodlust.up)\nactions.single_target+=/flame_shock,cycle_targets=1,if=buff.primordial_wave.up&refreshable\nactions.single_target+=/ascendance,if=talent.ascendance.enabled&(time>=60||buff.bloodlust.up)&(cooldown.lava_burst.remains>0)&(!talent.icefury.enabled||!buff.icefury.up&!cooldown.icefury.up)\nactions.single_target+=/lava_burst,if=buff.lava_surge.up&(runeforge.windspeakers_lava_resurgence.equipped||!buff.master_of_the_elements.up&talent.master_of_the_elements.enabled)\nactions.single_target+=/elemental_blast,if=talent.elemental_blast.enabled&(maelstrom<70)&!buff.ascendance.up\nactions.single_target+=/stormkeeper,if=talent.stormkeeper.enabled&(raid_event.adds.count<3||raid_event.adds.in>50)&(maelstrom<44)\nactions.single_target+=/echoing_shock,if=talent.echoing_shock.enabled&cooldown.lava_burst.remains<=gcd\nactions.single_target+=/lava_burst,if=talent.echoing_shock.enabled&buff.echoing_shock.up\nactions.single_target+=/liquid_magma_totem,if=talent.liquid_magma_totem.enabled\nactions.single_target+=/earthquake,if=buff.echoes_of_great_sundering.up&talent.master_of_the_elements.enabled&buff.master_of_the_elements.up\nactions.single_target+=/lightning_bolt,if=buff.stormkeeper.up&buff.master_of_the_elements.up&maelstrom<60\nactions.single_target+=/earthquake,if=buff.echoes_of_great_sundering.up&(talent.master_of_the_elements.enabled&(buff.master_of_the_elements.up||cooldown.lava_burst.remains>0&maelstrom>=92||spell_targets.chain_lightning<2&buff.stormkeeper.up&cooldown.lava_burst.remains<=gcd)||!talent.master_of_the_elements.enabled||cooldown.elemental_blast.remains<=settings.stack_buffer*gcd*2)\nactions.single_target+=/earthquake,if=spell_targets.chain_lightning>1&!dot.flame_shock.refreshable&!runeforge.echoes_of_great_sundering.equipped&(!talent.master_of_the_elements.enabled||buff.master_of_the_elements.up||cooldown.lava_burst.remains>0&maelstrom>=92)\nactions.single_target+=/earth_shock,if=runeforge.windspeakers_lava_resurgence.equipped&buff.ascendance.up\nactions.single_target+=/lava_burst,if=cooldown_react&(!buff.master_of_the_elements.up&buff.icefury.up)\nactions.single_target+=/lava_burst,if=cooldown_react&charges>talent.echo_of_the_elements.enabled&!buff.icefury.up\nactions.single_target+=/lava_burst,if=talent.echo_of_the_elements.enabled&!buff.master_of_the_elements.up&maelstrom>=50&!buff.echoes_of_great_sundering.up\nactions.single_target+=/earth_shock,if=(runeforge.echoes_of_great_sundering.equipped||spell_targets.chain_lightning<2)&(talent.master_of_the_elements.enabled&!buff.echoes_of_great_sundering.up&(buff.master_of_the_elements.up||maelstrom>=92||spell_targets.chain_lightning<2&buff.stormkeeper.up&cooldown.lava_burst.remains<=gcd)||!talent.master_of_the_elements.enabled||cooldown.elemental_blast.remains<=settings.stack_buffer*gcd*2)\nactions.single_target+=/frost_shock,if=talent.icefury.enabled&talent.master_of_the_elements.enabled&buff.icefury.up&buff.master_of_the_elements.up\nactions.single_target+=/lava_burst,if=buff.ascendance.up\nactions.single_target+=/lava_burst,if=cooldown_react&!talent.master_of_the_elements.enabled\nactions.single_target+=/icefury,if=talent.icefury.enabled&!(maelstrom>35&cooldown.lava_burst.remains<=0)\nactions.single_target+=/frost_shock,if=talent.icefury.enabled&buff.icefury.up&(buff.icefury.remains<gcd*4*buff.icefury.stack||buff.stormkeeper.up||!talent.master_of_the_elements.enabled)\nactions.single_target+=/lava_burst\nactions.single_target+=/bag_of_tricks\nactions.single_target+=/flame_shock,cycle_targets=1,if=refreshable\nactions.single_target+=/frost_shock,if=runeforge.elemental_equilibrium.equipped&!buff.elemental_equilibrium_debuff.up&!talent.elemental_blast.enabled&!talent.echoing_shock.enabled\nactions.single_target+=/fleshcraft,if=soulbind.volatile_solvent&!buff.volatile_solvent_humanoid.up,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\nactions.single_target+=/chain_harvest\nactions.single_target+=/frost_shock,if=talent.icefury.enabled&buff.icefury.up\nactions.single_target+=/static_discharge,if=talent.static_discharge.enabled\nactions.single_target+=/earth_elemental,if=!talent.primal_elementalist.enabled||!pet.fire_elemental.active\nactions.single_target+=/chain_lightning,if=spell_targets.chain_lightning>1\nactions.single_target+=/lightning_bolt\nactions.single_target+=/flame_shock,moving=1,cycle_targets=1,if=refreshable\nactions.single_target+=/flame_shock,moving=1,if=movement.distance>6\nactions.single_target+=/frost_shock,moving=1\nactions.single_target+=/frost_shock,if=talent.icefury.enabled&buff.icefury.up&buff.icefury.remains<settings.stack_buffer*gcd*buff.icefury.stack",
					["version"] = 20220801,
					["warnings"] = "WARNING:  The import for 'single_target' required some automated changes.\nLine 30: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'se_single_target' required some automated changes.\nLine 24: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\n\nImported 5 action lists.\n",
					["lists"] = {
						["single_target"] = {
							{
								["enabled"] = true,
								["criteria"] = "( buff.stormkeeper.remains < settings.stack_buffer * gcd * buff.stormkeeper.stack )",
								["action"] = "lightning_bolt",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & buff.icefury.up & buff.icefury.remains < settings.stack_buffer * gcd * buff.icefury.stack",
								["action"] = "frost_shock",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( ! ticking || dot.flame_shock.remains <= gcd || talent.ascendance.enabled & dot.flame_shock.remains < ( cooldown.ascendance.remains + buff.ascendance.duration ) & cooldown.ascendance.remains < 4 ) & ( buff.lava_surge.up || ! buff.bloodlust.up )",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.primordial_wave.up & refreshable",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.ascendance.enabled & ( time >= 60 || buff.bloodlust.up ) & ( cooldown.lava_burst.remains > 0 ) & ( ! talent.icefury.enabled || ! buff.icefury.up & ! cooldown.icefury.up )",
								["action"] = "ascendance",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.lava_surge.up & ( runeforge.windspeakers_lava_resurgence.equipped || ! buff.master_of_the_elements.up & talent.master_of_the_elements.enabled )",
								["action"] = "lava_burst",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.elemental_blast.enabled & ( maelstrom < 70 ) & ! buff.ascendance.up",
								["action"] = "elemental_blast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.stormkeeper.enabled & ( raid_event.adds.count < 3 || raid_event.adds.in > 50 ) & ( maelstrom < 44 )",
								["action"] = "stormkeeper",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.echoing_shock.enabled & cooldown.lava_burst.remains <= gcd",
								["action"] = "echoing_shock",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.echoing_shock.enabled & buff.echoing_shock.up",
								["action"] = "lava_burst",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.liquid_magma_totem.enabled",
								["action"] = "liquid_magma_totem",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.echoes_of_great_sundering.up & talent.master_of_the_elements.enabled & buff.master_of_the_elements.up",
								["action"] = "earthquake",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.stormkeeper.up & buff.master_of_the_elements.up & maelstrom < 60",
								["action"] = "lightning_bolt",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.echoes_of_great_sundering.up & ( talent.master_of_the_elements.enabled & ( buff.master_of_the_elements.up || cooldown.lava_burst.remains > 0 & maelstrom >= 92 || spell_targets.chain_lightning < 2 & buff.stormkeeper.up & cooldown.lava_burst.remains <= gcd ) || ! talent.master_of_the_elements.enabled || cooldown.elemental_blast.remains <= settings.stack_buffer * gcd * 2 )",
								["action"] = "earthquake",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.chain_lightning > 1 & ! dot.flame_shock.refreshable & ! runeforge.echoes_of_great_sundering.equipped & ( ! talent.master_of_the_elements.enabled || buff.master_of_the_elements.up || cooldown.lava_burst.remains > 0 & maelstrom >= 92 )",
								["action"] = "earthquake",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.windspeakers_lava_resurgence.equipped & buff.ascendance.up",
								["action"] = "earth_shock",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "cooldown_react & ( ! buff.master_of_the_elements.up & buff.icefury.up )",
								["action"] = "lava_burst",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "cooldown_react & charges > talent.echo_of_the_elements.enabled & ! buff.icefury.up",
								["action"] = "lava_burst",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "talent.echo_of_the_elements.enabled & ! buff.master_of_the_elements.up & maelstrom >= 50 & ! buff.echoes_of_great_sundering.up",
								["action"] = "lava_burst",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "( runeforge.echoes_of_great_sundering.equipped || spell_targets.chain_lightning < 2 ) & ( talent.master_of_the_elements.enabled & ! buff.echoes_of_great_sundering.up & ( buff.master_of_the_elements.up || maelstrom >= 92 || spell_targets.chain_lightning < 2 & buff.stormkeeper.up & cooldown.lava_burst.remains <= gcd ) || ! talent.master_of_the_elements.enabled || cooldown.elemental_blast.remains <= settings.stack_buffer * gcd * 2 )",
								["action"] = "earth_shock",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & talent.master_of_the_elements.enabled & buff.icefury.up & buff.master_of_the_elements.up",
								["action"] = "frost_shock",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.ascendance.up",
								["action"] = "lava_burst",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "cooldown_react & ! talent.master_of_the_elements.enabled",
								["action"] = "lava_burst",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & ! ( maelstrom > 35 & cooldown.lava_burst.remains <= 0 )",
								["action"] = "icefury",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & buff.icefury.up & ( buff.icefury.remains < gcd * 4 * buff.icefury.stack || buff.stormkeeper.up || ! talent.master_of_the_elements.enabled )",
								["action"] = "frost_shock",
							}, -- [25]
							{
								["action"] = "lava_burst",
								["enabled"] = true,
							}, -- [26]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.elemental_equilibrium.equipped & ! buff.elemental_equilibrium_debuff.up & ! talent.elemental_blast.enabled & ! talent.echoing_shock.enabled",
								["action"] = "frost_shock",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [30]
							{
								["action"] = "chain_harvest",
								["enabled"] = true,
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & buff.icefury.up",
								["action"] = "frost_shock",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "talent.static_discharge.enabled",
								["action"] = "static_discharge",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "! talent.primal_elementalist.enabled || ! pet.fire_elemental.active",
								["action"] = "earth_elemental",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.chain_lightning > 1",
								["action"] = "chain_lightning",
							}, -- [35]
							{
								["action"] = "lightning_bolt",
								["enabled"] = true,
							}, -- [36]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["enabled"] = true,
								["criteria"] = "refreshable",
							}, -- [37]
							{
								["enabled"] = true,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["moving"] = 1,
								["criteria"] = "movement.distance > 6",
							}, -- [38]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & buff.icefury.up & buff.icefury.remains < settings.stack_buffer * gcd * buff.icefury.stack",
								["action"] = "frost_shock",
							}, -- [40]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Interrupt of casts.",
								["action"] = "wind_shear",
							}, -- [1]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "spiritwalkers_grace",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.elemental_blast.enabled ) & ! ticking & ! pet.storm_elemental.active & ( spell_targets.chain_lightning < 3 || talent.master_of_the_elements.enabled || runeforge.skybreakers_fiery_demise.equipped )",
								["action"] = "flame_shock",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! buff.primordial_wave.up & ( ! pet.storm_elemental.active || spell_targets.chain_lightning < 3 & buff.wind_gust.stack < 20 || soulbind.lead_by_example.enabled || runeforge.splintered_elements.equipped ) & ( spell_targets.chain_lightning < 5 || talent.master_of_the_elements.enabled || runeforge.skybreakers_fiery_demise.equipped || soulbind.lead_by_example.enabled || runeforge.splintered_elements.equipped ) & ! buff.splintered_elements.up",
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! ticking & ( ! pet.storm_elemental.active || spell_targets.chain_lightning < 3 & buff.wind_gust.stack < 20 ) & ( spell_targets.chain_lightning < 3 || talent.master_of_the_elements.enabled || runeforge.skybreakers_fiery_demise.equipped )",
								["action"] = "flame_shock",
							}, -- [7]
							{
								["action"] = "fire_elemental",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "meteor",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "blood_fury",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up",
								["action"] = "berserking",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "fireblood",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "ancestral_call",
							}, -- [13]
							{
								["action"] = "vesper_totem",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & ! runeforge.seeds_of_rampant_growth.equipped & ( ! talent.master_of_the_elements.enabled || buff.master_of_the_elements.up ) & spell_targets.chain_lightning < 3",
								["action"] = "fae_transfusion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & runeforge.seeds_of_rampant_growth.equipped & ( ! talent.master_of_the_elements.enabled || buff.master_of_the_elements.up || spell_targets.chain_lightning >= 3 ) & ( cooldown.fire_elemental.remains > 20 || cooldown.storm_elemental.remains > 20 )",
								["action"] = "fae_transfusion",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 2 & ( spell_targets.chain_lightning > 2 || spell_targets.lava_beam > 2 )",
								["list_name"] = "aoe",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "! talent.storm_elemental.enabled & active_enemies <= 2",
								["list_name"] = "single_target",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "talent.storm_elemental.enabled & active_enemies <= 2",
								["list_name"] = "se_single_target",
							}, -- [19]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["criteria"] = "! talent.primal_elementalist.enabled",
								["action"] = "earth_elemental",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "Use Stormkeeper precombat unless some adds will spawn soon.",
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.stormkeeper.enabled & ( raid_event.adds.count < 3 || raid_event.adds.in > 50 )",
								["action"] = "stormkeeper",
							}, -- [3]
							{
								["action"] = "fire_elemental",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.elemental_blast.enabled & spell_targets.chain_lightning < 3",
								["action"] = "elemental_blast",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "lava_burst",
								["line_cd"] = "3",
								["description"] = "Because LvB has a travel time, the addon places *this entry* on CD for 3 seconds to avoid double-LvB on pull.",
								["criteria"] = "! talent.elemental_blast.enabled & spell_targets.chain_lightning < 3 || buff.stormkeeper.up",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! talent.elemental_blast.enabled & spell_targets.chain_lightning >= 3 & ! buff.stormkeeper.up",
								["action"] = "chain_lightning",
							}, -- [7]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [8]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "! pet.storm_elemental.active",
								["action"] = "storm_elemental",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.call_lightning.remains >= 10",
								["action"] = "eye_of_the_storm",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.echoing_shock.up",
								["action"] = "earthquake",
							}, -- [3]
							{
								["action"] = "chain_harvest",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.stormkeeper.enabled",
								["action"] = "stormkeeper",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & ( ( active_dot.flame_shock < 2 & active_enemies <= 3 & cooldown.primordial_wave.remains < 16 & covenant.necrolord & ! pet.storm_elemental.active || active_dot.flame_shock < 1 & active_enemies >= 4 & ! pet.storm_elemental.active & talent.master_of_the_elements.enabled ) || ( runeforge.skybreakers_fiery_demise.equipped & ! pet.storm_elemental.active ) || ( runeforge.splintered_elements.equipped & ( active_dot.flame_shock < 3 & ! runeforge.echoes_of_great_sundering.equipped || active_dot.flame_shock < 4 ) & ( cooldown.primordial_wave.remains < 16 || buff.primordial_wave.up ) ) )",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! active_dot.flame_shock & ! pet.storm_elemental.active & ( talent.master_of_the_elements.enabled || runeforge.skybreakers_fiery_demise.equipped ) || ( runeforge.splintered_elements.equipped & ! ticking & buff.primordial_wave.up )",
								["action"] = "flame_shock",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.echoing_shock.enabled & maelstrom >= 60 & ( runeforge.echoes_of_great_sundering.equipped & buff.echoes_of_great_sundering.up || ! runeforge.echoes_of_great_sundering.equipped )",
								["action"] = "echoing_shock",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.ascendance.enabled & ( ! pet.storm_elemental.active ) & ( ! talent.icefury.enabled || ! buff.icefury.up & ! cooldown.icefury.up )",
								["action"] = "ascendance",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.liquid_magma_totem.enabled",
								["action"] = "liquid_magma_totem",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.chain_lightning < 4 & buff.master_of_the_elements.up & maelstrom < 50",
								["action"] = "chain_lightning",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.echoes_of_great_sundering.equipped & ! buff.echoes_of_great_sundering.up",
								["action"] = "earth_shock",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "dot.flame_shock.remains & spell_targets.chain_lightning < 4 & ( ! pet.storm_elemental.active ) & ( buff.lava_surge.up & ! buff.master_of_the_elements.up & talent.master_of_the_elements.enabled )",
								["action"] = "lava_burst",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.chain_lightning >= 2 & ! runeforge.echoes_of_great_sundering.equipped & ( talent.master_of_the_elements.enabled & maelstrom >= 50 & ! buff.master_of_the_elements.up )",
								["action"] = "earthquake",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "covenant.necrolord & runeforge.echoes_of_great_sundering.equipped & set_bonus.tier28_4pc & buff.lava_surge.up & ! buff.primordial_wave.up",
								["action"] = "lava_burst",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.lava_surge.up & buff.primordial_wave.up & ( buff.primordial_wave.remains < 3 * gcd || active_dot.flame_shock = spell_targets.chain_lightning || active_dot.flame_shock = 3 & ! runeforge.echoes_of_great_sundering.equipped || active_dot.flame_shock = 4 )",
								["action"] = "lava_burst",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "dot.flame_shock.remains & spell_targets.chain_lightning < 4 & runeforge.skybreakers_fiery_demise.equipped & buff.lava_surge.up & talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & maelstrom >= 50",
								["action"] = "lava_burst",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "dot.flame_shock.remains & ( ( spell_targets.chain_lightning < 4 & runeforge.skybreakers_fiery_demise.equipped & talent.master_of_the_elements.enabled ) || ( talent.master_of_the_elements.enabled & maelstrom >= 50 & ! buff.master_of_the_elements.up & ( ! runeforge.echoes_of_great_sundering.equipped || buff.echoes_of_great_sundering.up ) & ! runeforge.skybreakers_fiery_demise.equipped ) )",
								["action"] = "lava_burst",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "dot.flame_shock.remains & spell_targets.chain_lightning = 4 & runeforge.skybreakers_fiery_demise.equipped & buff.lava_surge.up & talent.master_of_the_elements.enabled & ! buff.master_of_the_elements.up & maelstrom >= 50",
								["action"] = "lava_burst",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.chain_lightning >= 2",
								["action"] = "earthquake",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.stormkeeper.remains < 3 * gcd * buff.stormkeeper.stack",
								["action"] = "chain_lightning",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc & buff.lava_surge.up & ! buff.primordial_wave.up",
								["action"] = "lava_burst",
								["cycle_targets"] = 1,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc & buff.lava_surge.up & ! buff.primordial_wave.up",
								["action"] = "lava_burst",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.lava_surge.up & spell_targets.chain_lightning < 4 & ( ! pet.storm_elemental.active ) & dot.flame_shock.ticking",
								["action"] = "lava_burst",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "talent.elemental_blast.enabled & spell_targets.chain_lightning < 5 & ( ! pet.storm_elemental.active )",
								["action"] = "elemental_blast",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "talent.ascendance.enabled",
								["action"] = "lava_beam",
							}, -- [26]
							{
								["action"] = "chain_lightning",
								["enabled"] = true,
							}, -- [27]
							{
								["enabled"] = true,
								["enable_moving"] = true,
								["action"] = "lava_burst",
								["moving"] = 1,
								["criteria"] = "buff.lava_surge.up & cooldown_react",
							}, -- [28]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["enabled"] = true,
								["criteria"] = "refreshable",
							}, -- [29]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [30]
						},
						["se_single_target"] = {
							{
								["enabled"] = true,
								["criteria"] = "! pet.storm_elemental.active",
								["action"] = "storm_elemental",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.surge_of_power.up",
								["action"] = "lightning_bolt",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "covenant.necrolord & ! buff.primordial_wave.up & ! buff.splintered_elements.up",
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.call_lightning.remains >= 10",
								["action"] = "eye_of_the_storm",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & buff.icefury.up & buff.icefury.remains < settings.stack_buffer * gcd * buff.icefury.stack & buff.wind_gust.stack < 18",
								["action"] = "frost_shock",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & buff.icefury.up & buff.icefury.remains < 1.1 * gcd * buff.icefury.stack",
								["action"] = "frost_shock",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "talent.elemental_blast.enabled",
								["action"] = "elemental_blast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.stormkeeper.enabled",
								["action"] = "stormkeeper",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "talent.echoing_shock.enabled & cooldown.lava_burst.remains <= gcd & spell_targets.chain_lightning < 2 || maelstrom >= 60 & spell_targets.chain_lightning >= 2 & ( ! runeforge.echoes_of_great_sundering.equipped || buff.echoes_of_great_sundering.up )",
								["action"] = "echoing_shock",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "( buff.wind_gust.stack < 18 & ! buff.bloodlust.up ) || buff.lava_surge.up",
								["action"] = "lava_burst",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.echoing_shock.enabled & buff.echoing_shock.up & spell_targets.chain_lightning < 2",
								["action"] = "lava_burst",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.echoing_shock.enabled & buff.echoing_shock.up & spell_targets.chain_lightning >= 2",
								["action"] = "earthquake",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.stormkeeper.up",
								["action"] = "lightning_bolt",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.echoes_of_great_sundering.up",
								["action"] = "earthquake",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.chain_lightning < 2 & maelstrom >= 60 & ( buff.wind_gust.stack < 20 || maelstrom > 90 ) || ( runeforge.echoes_of_great_sundering.equipped & ! buff.echoes_of_great_sundering.up ) || runeforge.windspeakers_lava_resurgence.equipped",
								["action"] = "earth_shock",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "( spell_targets.chain_lightning > 1 ) & ( ! dot.flame_shock.refreshable )",
								["action"] = "earthquake",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "pet.storm_elemental.active & buff.bloodlust.up",
								["action"] = "lightning_bolt",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "buff.ascendance.up",
								["action"] = "lava_burst",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "cooldown_react",
								["action"] = "lava_burst",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "cooldown_react & charges > talent.echo_of_the_elements.enabled",
								["action"] = "lava_burst",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "talent.icefury.enabled & buff.icefury.up",
								["action"] = "frost_shock",
							}, -- [22]
							{
								["action"] = "chain_harvest",
								["enabled"] = true,
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled & ! buff.volatile_solvent_humanoid.up",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "talent.static_discharge.enabled",
								["action"] = "static_discharge",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "! talent.primal_elementalist.enabled || talent.primal_elementalist.enabled & ( ! pet.storm_elemental.active )",
								["action"] = "earth_elemental",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & ( spell_targets.chain_lightning > 1 || spell_targets.lava_beam > 1 )",
								["action"] = "chain_lightning",
							}, -- [27]
							{
								["action"] = "lightning_bolt",
								["enabled"] = true,
							}, -- [28]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [29]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
								["enabled"] = true,
								["criteria"] = "refreshable",
							}, -- [30]
							{
								["enabled"] = true,
								["enable_moving"] = true,
								["action"] = "flame_shock",
								["moving"] = 1,
								["criteria"] = "movement.distance > 6",
							}, -- [31]
							{
								["moving"] = 1,
								["enable_moving"] = true,
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [32]
						},
					},
					["author"] = "SimulationCraft",
				},
				["Feral"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220821,
					["author"] = "SimC",
					["desc"] = "Feral Druid\nAugust 21, 2022\n\nChanges:\n- druid.owlweave_cat=1 checks to druid.owlweave_cat.\n- Convert BT pool_resource to wait expression (x2).\n- Add interruptible Fleshcraft if you have nothing else to do.\n- Revise holding Convoke, Berserk, Inc for Rip if you won't rip.\n- Support filler Regrowth while pooling for Bloodtalons.\n- Work on Adaptive Swarm support.",
					["lists"] = {
						["filler"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.filler = 1 & refreshable & dot.rake.pmultiplier <= 1.2 * persistent_multiplier",
								["action"] = "rake",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.filler = 2",
								["action"] = "rake",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.filler = 3",
								["action"] = "lunar_inspiration",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.filler = 4",
								["action"] = "swipe_cat",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.swipe_cat = 1 & ! buff.clearcasting.up",
								["action"] = "swipe_cat",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.sudden_ambush.down",
								["action"] = "shred",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "settings.filler_regrowth & selection_time > 1.5 * gcd.max",
								["action"] = "regrowth",
							}, -- [7]
						},
						["finisher"] = {
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.savage_roar.remains < 3",
								["action"] = "savage_roar",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( druid.primal_wrath.ticks_gained_on_refresh > 3 * ( spell_targets.primal_wrath + 1 ) & spell_targets.primal_wrath > 1 ) || spell_targets.primal_wrath > ( 3 + 1 * talent.sabertooth.enabled )",
								["action"] = "primal_wrath",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & druid.rip.ticks_gained_on_refresh > variable.rip_ticks & ( ( buff.tigers_fury.up || ! ticking ) & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled ) || ! talent.sabertooth.enabled ) & ( spell_targets.primal_wrath = 1 || ! talent.primal_wrath.enabled ) & ( active_dot.rip = 0 || ticking & active_dot.rip = 1 || ! runeforge.draught_of_deep_focus.enabled || ! talent.sabertooth.enabled )",
								["action"] = "rip",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.savage_roar.remains < ( combo_points + 1 ) * 6 * 0.3",
								["action"] = "savage_roar",
							}, -- [5]
							{
								["max_energy"] = 1,
								["enabled"] = true,
								["action"] = "ferocious_bite",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.bs_inc.up & talent.soul_of_the_forest.enabled || cooldown.convoke_the_spirits.remains < 1 & covenant.night_fae",
								["action"] = "ferocious_bite",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "settings.filler_regrowth & selection_time > 1.5 * gcd.max",
								["action"] = "regrowth",
							}, -- [8]
						},
						["balance"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.eclipse_solar.down & buff.eclipse_lunar.down & ( refreshable || ( active_enemies > 1 & active_dot.sunfire < active_enemies ) )",
								["action"] = "sunfire",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.eclipse_solar.remains > 10 + cast_time || buff.eclipse_lunar.remains > 10 + cast_time",
								["action"] = "starsurge",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.eclipse_lunar.remains > cast_time || buff.eclipse_solar.down & solar_eclipse > 0 || buff.eclipse_solar.down & lunar_eclipse - action.wrath.in_flight < 1",
								["action"] = "starfire",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.eclipse_solar.remains > cast_time || buff.eclipse_lunar.down & lunar_eclipse - action.wrath.in_flight > 0",
								["action"] = "wrath",
							}, -- [4]
						},
						["setup"] = {
							{
								["enabled"] = true,
								["criteria"] = "covenant.necrolord & spell_targets.thrash_cat < 4 & combo_points < 5 & ! ticking & ! buff.bs_inc.up",
								["action"] = "lunar_inspiration",
							}, -- [1]
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.feral_frenzy.enabled & cooldown.feral_frenzy.up & ! buff.savage_roar.up & combo_points > 1 & dot.rake.ticking & ( dot.lunar_inspiration.ticking || ! talent.lunar_inspiration.enabled )",
								["action"] = "savage_roar",
							}, -- [3]
							{
								["enabled"] = true,
								["sec"] = "( ( 115 - 23 * buff.incarnation_king_of_the_jungle.up ) - ( energy.current + 3.5 * energy.regen + ( 40 * buff.clearcasting.up ) ) ) / energy.regen",
								["action"] = "wait",
								["criteria"] = "talent.bloodtalons.enabled & buff.bloodtalons.down & active_bt_triggers = 0",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "talent.bloodtalons.enabled & buff.bloodtalons.down & ( combo_points < 5 || spell_targets.thrash_cat = 1 )",
								["list_name"] = "bloodtalons",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldown",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "combo_points > 3 & ( buff.bloodtalons.up || ! talent.bloodtalons.enabled )",
								["list_name"] = "finisher",
							}, -- [7]
						},
						["default"] = {
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "buff.moonkin_form.up & ! druid.owlweave_cat",
								["list_name"] = "balance",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "druid.owlweave_cat",
								["list_name"] = "owlweave",
							}, -- [2]
							{
								["enabled"] = true,
								["description"] = "Prowl whenever possible",
								["action"] = "prowl",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.cat_form.down",
								["action"] = "tigers_fury",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.cat_form.down",
								["action"] = "cat_form",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "One shot stealth",
								["strict"] = 1,
								["criteria"] = "buff.shadowmeld.up || buff.prowl.up",
								["list_name"] = "stealth",
							}, -- [6]
							{
								["action"] = "skull_bash",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_dot.rip = 0 & fight_remains >= 12",
								["list_name"] = "setup",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cooldown",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "Necrolord: Cast 3 or 4 combo point rips on single target outside of berserk or during berserk if feral frenzy is up OR apply a 5cp Rip when TF is up and will soon fall off.",
								["criteria"] = "covenant.necrolord & ( ! talent.bloodtalons.enabled || buff.bloodtalons.up ) & spell_targets.thrash_cat = 1 & ( combo_points > 2 & refreshable & druid.rip.ticks_gained_on_refresh > variable.rip_ticks & ( ! buff.bs_inc.up || cooldown.bs_inc.up || ( buff.bs_inc.up & cooldown.feral_frenzy.up ) ) || combo_points = 5 & buff.tigers_fury.up & buff.tigers_fury.remains < 4 & druid.rip.ticks_gained_on_refresh > 5 )",
								["action"] = "rip",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "combo_points >= ( 5 - variable.fourcp_bite )",
								["list_name"] = "finisher",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "primal_wrath",
								["criteria"] = "druid.primal_wrath.ticks_gained_on_refresh >= 20 & combo_points >= 2",
								["line_cd"] = "5",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Multi-gcd stealth",
								["strict"] = 1,
								["criteria"] = "buff.bs_inc.up",
								["list_name"] = "stealth",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "settings.filler_regrowth & talent.bloodtalons.enabled & buff.bloodtalons.down & active_bt_triggers = 0 & 1.5 * gcd.max < ( ( ( 115 - 23 * buff.incarnation_king_of_the_jungle.up ) - ( energy.current + 3.5 * energy.regen + ( 40 * buff.clearcasting.up ) ) ) / energy.regen )",
								["action"] = "regrowth",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "wait",
								["sec"] = "( ( 115 - 23 * buff.incarnation_king_of_the_jungle.up ) - ( energy.current + 3.5 * energy.regen + ( 40 * buff.clearcasting.up ) ) ) / energy.regen",
								["criteria"] = "talent.bloodtalons.enabled & buff.bloodtalons.down & active_bt_triggers = 0",
								["description"] = "The most expensive BT cycle (Thresh Shred Swipe cost 115 energy, make sure we can make that in 4 globals)",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["criteria"] = "talent.bloodtalons.enabled & buff.bloodtalons.down",
								["list_name"] = "bloodtalons",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.apex_predators_craving.up",
								["action"] = "ferocious_bite",
								["cycle_targets"] = 1,
							}, -- [17]
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "( refreshable || persistent_multiplier > dot.rake.pmultiplier ) & druid.rake.ticks_gained_on_refresh > spell_targets.swipe_cat * 2 - 2",
								["action"] = "rake",
								["cycle_targets"] = 1,
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "( refreshable || persistent_multiplier > dot.lunar_inspiration.pmultiplier ) & druid.lunar_inspiration.ticks_gained_on_refresh > spell_targets.swipe_cat * 2 - 2",
								["action"] = "lunar_inspiration",
								["cycle_targets"] = 1,
							}, -- [20]
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & druid.thrash_cat.ticks_gained_on_refresh > ( 4 + spell_targets.thrash_cat * 4 ) / ( 1 + mastery_value ) - conduit.taste_for_blood.enabled - covenant.necrolord & ( ! buff.bs_inc.up || spell_targets.thrash_cat > 1 )",
								["action"] = "thrash_cat",
								["cycle_targets"] = 1,
							}, -- [22]
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "( raid_event.adds.in > ( 1 + max_charges - charges_fractional ) * recharge_time ) & ( spell_targets.brutal_slash * action.brutal_slash.damage / action.brutal_slash.cost ) > ( action.shred.damage / action.shred.cost )",
								["action"] = "brutal_slash",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.swipe_cat > 1 + buff.bs_inc.up * 2",
								["action"] = "swipe_cat",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.thrash_cat > 3",
								["action"] = "thrash_cat",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.up & ( buff.sudden_ambush.down & buff.shadowmeld.down || buff.bs_inc.up )",
								["action"] = "shred",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "filler",
							}, -- [28]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "fourcp_bite",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "1",
								["var_name"] = "filler",
								["description"] = "Defines what ability to use as a filler. Shred = 0, Non-snapshot Rake = 1, Snapshot Rake = 2, LI = 3, Swipe = 4",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "7",
								["var_name"] = "rip_ticks",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.rip > 0 || druid.rip.ticks_gained_on_refresh <= variable.rip_ticks",
								["var_name"] = "ripped",
								["description"] = "If I'm not going to use Rip, pretend Rip is up for CDs and such.",
							}, -- [4]
							{
								["action"] = "kindred_spirits",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "bottled_flayedwing_toxin",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.moonkin_form.down",
								["action"] = "prowl",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.moonkin_form.down",
								["action"] = "cat_form",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "on_use_trinket",
								["description"] = "Cache of acquired treasures does not seem to work yet and has to be seen",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "add",
								["action"] = "variable",
								["value"] = "1",
								["var_name"] = "on_use_trinket",
								["criteria"] = "( trinket.t1.has_use_buff & trinket.t1.cooldown.duration ) || trinket.t1.is.inscrutable_quantum_device",
							}, -- [11]
							{
								["enabled"] = true,
								["op"] = "add",
								["action"] = "variable",
								["value"] = "2",
								["var_name"] = "on_use_trinket",
								["criteria"] = "( trinket.t2.has_use_buff & trinket.t2.cooldown.duration ) || trinket.t2.is.inscrutable_quantum_device",
							}, -- [12]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "61",
								["var_name"] = "max_trinket_hold",
							}, -- [13]
						},
						["bloodtalons"] = {
							{
								["enabled"] = true,
								["criteria"] = "( ! ticking || ( 1.2 * persistent_multiplier >= dot.rake.pmultiplier ) || ( active_bt_triggers = 2 & refreshable ) ) & buff.bt_rake.down",
								["action"] = "rake",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & buff.bt_moonfire.down",
								["action"] = "lunar_inspiration",
								["cycle_targets"] = 1,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & buff.bt_thrash.down & druid.thrash_cat.ticks_gained_on_refresh > ( 4 + spell_targets.thrash_cat * 4 ) / ( 1 + mastery_value ) - conduit.taste_for_blood.enabled",
								["action"] = "thrash_cat",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_brutal_slash.down",
								["action"] = "brutal_slash",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_swipe.down & spell_targets.swipe_cat > 1",
								["action"] = "swipe_cat",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_shred.down",
								["action"] = "shred",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_swipe.down",
								["action"] = "swipe_cat",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.bt_thrash.down",
								["action"] = "thrash_cat",
							}, -- [8]
						},
						["stealth"] = {
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.bs_inc.up & spell_targets.swipe_cat > 3 & runeforge.frenzyband.enabled",
								["action"] = "swipe_cat",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "rake",
								["cycle_targets"] = 1,
								["description"] = "Rake needs roughly 50% of its length at a minimum to surpass shreds dpe",
								["criteria"] = "( dot.rake.pmultiplier < 1.5 || refreshable ) & druid.rake.ticks_gained_on_refresh > 2 || ( persistent_multiplier > dot.rake.pmultiplier & buff.bs_inc.up & spell_targets.thrash_cat < 3 & covenant.necrolord ) || buff.bs_inc.remains < 1",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "spell_targets.thrash_cat < 3 & refreshable & druid.lunar_inspiration.ticks_gained_on_refresh > 5 & ( combo_points = 4 || dot.lunar_inspiration.remains < 5 || ! dot.lunar_inspiration.ticking )",
								["action"] = "lunar_inspiration",
							}, -- [4]
							{
								["enabled"] = true,
								["description"] = "Brutal Slash is better than stealth Shred at 3 targets",
								["criteria"] = "spell_targets.brutal_slash > 2",
								["action"] = "brutal_slash",
							}, -- [5]
							{
								["enabled"] = true,
								["for_next"] = 1,
								["action"] = "pool_resource",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "combo_points < 4 & spell_targets.thrash_cat < 5",
								["action"] = "shred",
							}, -- [7]
						},
						["cooldown"] = {
							{
								["enabled"] = true,
								["criteria"] = "( ( ! dot.adaptive_swarm_damage.ticking || dot.adaptive_swarm_damage.remains < 2 ) & ( dot.adaptive_swarm_damage.stack < 3 || ! dot.adaptive_swarm_heal.stack > 1 ) & ! buff.adaptive_swarm_heal_in_flight.up & ! buff.adaptive_swarm_damage_in_flight.up ) & target.time_to_die > 5 || active_enemies > 2 & ! dot.adaptive_swarm_damage.ticking & energy < 35 & target.time_to_die > 5",
								["action"] = "adaptive_swarm",
								["cycle_targets"] = 1,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled )",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( ( cooldown.convoke_the_spirits.remains < 2 & ( buff.bs_inc.up || cooldown.bs_inc.remains > 10 ) ) || boss & fight_remains < 20 ) || ( cooldown.convoke_the_spirits.remains - 2 > variable.max_trinket_hold ) || variable.on_use_trinket = 0 || ( variable.on_use_trinket = 2 & ( cooldown.convoke_the_spirits.remains > 22 || boss & fight_remains < 20 || trinket.t2.cooldown.remains > 20 ) )",
								["action"] = "trinket1",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( ( cooldown.convoke_the_spirits.remains < 2 & ( buff.bs_inc.up || cooldown.bs_inc.remains > 10 ) & ( trinket.t1.cooldown.remains >= 2 || variable.on_use_trinket = 2 ) ) || boss & fight_remains < 20 ) || ( ( cooldown.convoke_the_spirits.remains - 2 + 60 * ( ( trinket.t1.cooldown.remains < cooldown.convoke_the_spirits.remains - 2 ) & ( variable.on_use_trinket = 1 || variable.on_use_trinket >= 3 ) ) ) > variable.max_trinket_hold ) || variable.on_use_trinket = 0 || ( variable.on_use_trinket = 1 & ( cooldown.convoke_the_spirits.remains > 22 || boss & fight_remains < 20 || trinket.t1.cooldown.remains > 20 ) )",
								["action"] = "trinket2",
							}, -- [4]
							{
								["enabled"] = true,
								["description"] = "This should use any other equippable stuff, since both trinket slots are already accounted for.",
								["action"] = "use_items",
							}, -- [5]
							{
								["enabled"] = true,
								["sync"] = "feral_frenzy",
								["action"] = "tigers_fury",
								["criteria"] = "cooldown.bs_inc.up",
								["description"] = "Cast Tiger's Fury before (or immediatly after) casting Feral Frenzy if Berserk is NOT on cooldown.",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "combo_points < 3 & target.time_to_die > 7 & ( buff.savage_roar.up || ! talent.savage_roar.enabled ) & ( ! cooldown.tigers_fury.up || cooldown.bs_inc.up ) || boss & fight_remains < 8 & fight_remains > 2",
								["action"] = "feral_frenzy",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["description"] = "TODO: Need to sync with with ravenous frenzy when we run frenzyband, or atleast check if its worth it",
								["criteria"] = "variable.ripped & ( cooldown.convoke_the_spirits.up || cooldown.convoke_the_spirits.remains > 32 || boss & fight_remains < 20 )",
								["action"] = "berserk",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.ripped & ( cooldown.convoke_the_spirits.up || boss & fight_remains < 30 )",
								["action"] = "incarnation",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "Try and not waste TF energy, but also just use it for zerk and incarns",
								["criteria"] = "energy.deficit > 40 || buff.bs_inc.up || ( talent.predator.enabled & shortest_ttd < 3 ) || ( active_dot.rip = 0 & buff.bloodtalons.up )",
								["action"] = "tigers_fury",
							}, -- [10]
							{
								["enabled"] = true,
								["description"] = "Might be wrong to use Smeld on Rake in very very niche situations, but very rarely",
								["criteria"] = "buff.tigers_fury.up & buff.bs_inc.down & combo_points < 4 & buff.sudden_ambush.down & dot.rake.pmultiplier < 1.6 & energy > 40 & druid.rake.ticks_gained_on_refresh > spell_targets.swipe_cat * 2 - 2 & target.time_to_die > 5",
								["action"] = "shadowmeld",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.tigers_fury.up || buff.bs_inc.up",
								["action"] = "berserking",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.bs_inc.up || boss & fight_remains < cooldown.bs_inc.remains || boss & fight_remains < 25",
								["action"] = "potion",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.bs_inc.up || fight_remains < 21",
								["action"] = "ravenous_frenzy",
							}, -- [14]
							{
								["enabled"] = true,
								["description"] = "TODO: Check moonkin hotw and stuff like this, and maybe better combat remain resync",
								["criteria"] = "( dot.rip.remains > 4 & combo_points < 5 & ( dot.rake.ticking || spell_targets.thrash_cat > 1 ) & energy.deficit >= 20 & cooldown.bs_inc.remains > 10 ) || boss & fight_remains < 5 || ( buff.bs_inc.up & buff.bs_inc.remains > 12 )",
								["action"] = "convoke_the_spirits",
							}, -- [15]
							{
								["enabled"] = true,
								["description"] = "Maybe there should be more conditions on the conduit",
								["criteria"] = "buff.tigers_fury.up || ( conduit.deep_allegiance.enabled )",
								["action"] = "empower_bond",
							}, -- [16]
							{
								["enabled"] = true,
								["description"] = "Give priority to on-use weapon",
								["name"] = "jotungeirr_destinys_call",
								["action"] = "jotungeirr_destinys_call",
							}, -- [17]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [18]
						},
						["owlweave"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.heart_of_the_wild.up",
								["action"] = "starsurge",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["line_cd"] = "4*gcd",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.moonkin_form.up & spell_targets.thrash_cat < 2 & ! talent.lunar_inspiration.enabled & energy < 60 & ! buff.clearcasting.up",
								["action"] = "moonfire",
								["line_cd"] = "4*gcd",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "energy < 30 & dot.rip.remains > 4.5 & ( cooldown.tigers_fury.remains >= 6.5 || runeforge.cateye_curio.enabled ) & buff.clearcasting.stack < 1 & ! buff.apex_predators_craving.up & ! buff.bloodlust.up & ! buff.bs_inc.up & ( cooldown.convoke_the_spirits.remains > 6.5 || ! covenant.night_fae ) & ( ! covenant.necrolord || cooldown.adaptive_swarm.remains >= 5 || dot.adaptive_swarm_damage.remains > 7 )",
								["action"] = "heart_of_the_wild",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "energy < 30 & dot.rip.remains > 4.5 & ( cooldown.tigers_fury.remains >= 4.5 || runeforge.cateye_curio.enabled ) & buff.clearcasting.stack < 1 & ! buff.apex_predators_craving.up & ! buff.bloodlust.up & ( ! buff.bs_inc.up || covenant.necrolord & talent.savage_roar.enabled & buff.bs_inc.remains > 6 ) & ( cooldown.convoke_the_spirits.remains > 6.5 || ! covenant.night_fae ) & ( ! covenant.necrolord || cooldown.adaptive_swarm.remains >= 5 || dot.adaptive_swarm_damage.remains > 7 ) & fight_remains > 7",
								["action"] = "moonkin_form",
							}, -- [5]
						},
					},
					["version"] = 20220821,
					["warnings"] = "WARNING:  The import for 'finisher' required some automated changes.\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 22: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 24: Converted SimC syntax % to Lua division operator (/) (2x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 11: Converted 'trinket.1.X' to 'trinket.t1.X' (3x).\nLine 12: Converted 'trinket.2.X' to 'trinket.t2.X' (3x).\n\nWARNING:  The import for 'bloodtalons' required some automated changes.\nLine 3: Converted SimC syntax % to Lua division operator (/) (1x).\n\nWARNING:  The import for 'stealth' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'cooldown' required some automated changes.\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 3: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\nLine 4: Converted 'trinket.1.X' to 'trinket.t1.X' (3x).\n\nWARNING:  The import for 'owlweave' required some automated changes.\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nImported 10 action lists.\n",
					["spec"] = 103,
					["profile"] = "## Feral Druid\n## August 21, 2022\n\n## Changes:\n## - druid.owlweave_cat=1 checks to druid.owlweave_cat.\n## - Convert BT pool_resource to wait expression (x2).\n## - Add interruptible Fleshcraft if you have nothing else to do.\n## - Revise holding Convoke, Berserk, Inc for Rip if you won't rip.\n## - Support filler Regrowth while pooling for Bloodtalons.\n## - Work on Adaptive Swarm support.\n\nactions.precombat+=/variable,name=fourcp_bite,value=0\n# Defines what ability to use as a filler. Shred = 0, Non-snapshot Rake = 1, Snapshot Rake = 2, LI = 3, Swipe = 4\nactions.precombat+=/variable,name=filler,value=1\nactions.precombat+=/variable,name=rip_ticks,value=7\n# If I'm not going to use Rip, pretend Rip is up for CDs and such.\nactions.precombat+=/variable,name=ripped,value=active_dot.rip>0||druid.rip.ticks_gained_on_refresh<=variable.rip_ticks\nactions.precombat+=/kindred_spirits\nactions.precombat+=/bottled_flayedwing_toxin\nactions.precombat+=/fleshcraft,if=soulbind.pustule_eruption.enabled||soulbind.volatile_solvent.enabled\nactions.precombat+=/prowl,if=buff.moonkin_form.down\nactions.precombat+=/cat_form,if=buff.moonkin_form.down\n# Cache of acquired treasures does not seem to work yet and has to be seen\nactions.precombat+=/variable,name=on_use_trinket,value=0\nactions.precombat+=/variable,name=on_use_trinket,op=add,if=(trinket.1.has_use_buff&trinket.1.cooldown.duration)||trinket.1.is.inscrutable_quantum_device,value=1\nactions.precombat+=/variable,name=on_use_trinket,op=add,if=(trinket.2.has_use_buff&trinket.2.cooldown.duration)||trinket.2.is.inscrutable_quantum_device,value=2\nactions.precombat+=/variable,name=max_trinket_hold,value=61\n\nactions=run_action_list,name=balance,strict=1,if=buff.moonkin_form.up&!druid.owlweave_cat\nactions+=/call_action_list,name=owlweave,strict=1,if=druid.owlweave_cat\n# Prowl whenever possible\nactions+=/prowl\nactions+=/tigers_fury,if=buff.cat_form.down\nactions+=/cat_form,if=buff.cat_form.down\n## actions+=/variable,name=shortest_ttd,value=target.time_to_die\n## actions+=/cycling_variable,name=shortest_ttd,op=min,value=target.time_to_die\n# One shot stealth\nactions+=/run_action_list,name=stealth,strict=1,if=buff.shadowmeld.up||buff.prowl.up\nactions+=/skull_bash\nactions+=/call_action_list,name=setup,strict=1,if=active_dot.rip=0&fight_remains>=12\nactions+=/call_action_list,name=cooldown\n# Necrolord: Cast 3 or 4 combo point rips on single target outside of berserk or during berserk if feral frenzy is up OR apply a 5cp Rip when TF is up and will soon fall off.\nactions+=/rip,if=covenant.necrolord&(!talent.bloodtalons.enabled||buff.bloodtalons.up)&spell_targets.thrash_cat=1&(combo_points>2&refreshable&druid.rip.ticks_gained_on_refresh>variable.rip_ticks&(!buff.bs_inc.up||cooldown.bs_inc.up||(buff.bs_inc.up&cooldown.feral_frenzy.up))||combo_points=5&buff.tigers_fury.up&buff.tigers_fury.remains<4&druid.rip.ticks_gained_on_refresh>5)\nactions+=/run_action_list,name=finisher,strict=1,if=combo_points>=(5-variable.fourcp_bite)\nactions+=/primal_wrath,if=druid.primal_wrath.ticks_gained_on_refresh>=20&combo_points>=2,line_cd=5\n# Multi-gcd stealth\nactions+=/call_action_list,name=stealth,strict=1,if=buff.bs_inc.up\nactions+=/regrowth,if=settings.filler_regrowth&talent.bloodtalons.enabled&buff.bloodtalons.down&active_bt_triggers=0&1.5*gcd.max<(((115-23*buff.incarnation_king_of_the_jungle.up)-(energy.current+3.5*energy.regen+(40*buff.clearcasting.up)))/energy.regen)\n# The most expensive BT cycle (Thresh Shred Swipe cost 115 energy, make sure we can make that in 4 globals)\nactions+=/wait,sec=((115-23*buff.incarnation_king_of_the_jungle.up)-(energy.current+3.5*energy.regen+(40*buff.clearcasting.up)))/energy.regen,if=talent.bloodtalons.enabled&buff.bloodtalons.down&active_bt_triggers=0\n## actions+=/pool_resource,if=talent.bloodtalons.enabled&buff.bloodtalons.down&(energy+3.5*energy.regen+(40*buff.clearcasting.up))<(115-23*buff.incarnation_king_of_the_jungle.up)&active_bt_triggers=0\nactions+=/run_action_list,name=bloodtalons,if=talent.bloodtalons.enabled&buff.bloodtalons.down\nactions+=/ferocious_bite,cycle_targets=1,if=buff.apex_predators_craving.up\nactions+=/pool_resource,for_next=1\nactions+=/rake,cycle_targets=1,if=(refreshable||persistent_multiplier>dot.rake.pmultiplier)&druid.rake.ticks_gained_on_refresh>spell_targets.swipe_cat*2-2\nactions+=/lunar_inspiration,cycle_targets=1,if=(refreshable||persistent_multiplier>dot.lunar_inspiration.pmultiplier)&druid.lunar_inspiration.ticks_gained_on_refresh>spell_targets.swipe_cat*2-2\nactions+=/pool_resource,for_next=1\nactions+=/thrash_cat,cycle_targets=1,if=refreshable&druid.thrash_cat.ticks_gained_on_refresh>(4+spell_targets.thrash_cat*4)%(1+mastery_value)-conduit.taste_for_blood.enabled-covenant.necrolord&(!buff.bs_inc.up||spell_targets.thrash_cat>1)\nactions+=/pool_resource,for_next=1\nactions+=/brutal_slash,if=(raid_event.adds.in>(1+max_charges-charges_fractional)*recharge_time)&(spell_targets.brutal_slash*action.brutal_slash.damage%action.brutal_slash.cost)>(action.shred.damage%action.shred.cost)\nactions+=/swipe_cat,if=spell_targets.swipe_cat>1+buff.bs_inc.up*2\nactions+=/thrash_cat,if=spell_targets.thrash_cat>3\nactions+=/shred,if=buff.clearcasting.up&(buff.sudden_ambush.down&buff.shadowmeld.down||buff.bs_inc.up)\nactions+=/call_action_list,name=filler\n\nactions.bloodtalons=rake,cycle_targets=1,if=(!ticking||(1.2*persistent_multiplier>=dot.rake.pmultiplier)||(active_bt_triggers=2&refreshable))&buff.bt_rake.down\nactions.bloodtalons+=/lunar_inspiration,cycle_targets=1,if=refreshable&buff.bt_moonfire.down\nactions.bloodtalons+=/thrash_cat,cycle_targets=1,if=refreshable&buff.bt_thrash.down&druid.thrash_cat.ticks_gained_on_refresh>(4+spell_targets.thrash_cat*4)%(1+mastery_value)-conduit.taste_for_blood.enabled\nactions.bloodtalons+=/brutal_slash,if=buff.bt_brutal_slash.down\nactions.bloodtalons+=/swipe_cat,if=buff.bt_swipe.down&spell_targets.swipe_cat>1\nactions.bloodtalons+=/shred,if=buff.bt_shred.down\nactions.bloodtalons+=/swipe_cat,if=buff.bt_swipe.down\nactions.bloodtalons+=/thrash_cat,if=buff.bt_thrash.down\n\nactions.cooldown=adaptive_swarm,cycle_targets=1,if=((!dot.adaptive_swarm_damage.ticking||dot.adaptive_swarm_damage.remains<2)&(dot.adaptive_swarm_damage.stack<3||!dot.adaptive_swarm_heal.stack>1)&!buff.adaptive_swarm_heal_in_flight.up&!buff.adaptive_swarm_damage_in_flight.up)&target.time_to_die>5||active_enemies>2&!dot.adaptive_swarm_damage.ticking&energy<35&target.time_to_die>5\nactions.cooldown+=/fleshcraft,if=(soulbind.pustule_eruption||soulbind.volatile_solvent),interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\nactions.cooldown+=/trinket1,if=((cooldown.convoke_the_spirits.remains<2&(buff.bs_inc.up||cooldown.bs_inc.remains>10))||boss&fight_remains<20)||(cooldown.convoke_the_spirits.remains-2>variable.max_trinket_hold)||variable.on_use_trinket=0||(variable.on_use_trinket=2&(cooldown.convoke_the_spirits.remains>22||boss&fight_remains<20||trinket.2.cooldown.remains>20))\nactions.cooldown+=/trinket2,if=((cooldown.convoke_the_spirits.remains<2&(buff.bs_inc.up||cooldown.bs_inc.remains>10)&(trinket.1.cooldown.remains>=2||variable.on_use_trinket=2))||boss&fight_remains<20)||((cooldown.convoke_the_spirits.remains-2+60*((trinket.1.cooldown.remains<cooldown.convoke_the_spirits.remains-2)&(variable.on_use_trinket=1||variable.on_use_trinket>=3)))>variable.max_trinket_hold)||variable.on_use_trinket=0||(variable.on_use_trinket=1&(cooldown.convoke_the_spirits.remains>22||boss&fight_remains<20||trinket.1.cooldown.remains>20))\n# This should use any other equippable stuff, since both trinket slots are already accounted for.\nactions.cooldown+=/use_items\n# Cast Tiger's Fury before (or immediatly after) casting Feral Frenzy if Berserk is NOT on cooldown.\nactions.cooldown+=/tigers_fury,sync=feral_frenzy,if=cooldown.bs_inc.up\nactions.cooldown+=/feral_frenzy,cycle_targets=1,if=combo_points<3&target.time_to_die>7&(buff.savage_roar.up||!talent.savage_roar.enabled)&(!cooldown.tigers_fury.up||cooldown.bs_inc.up)||boss&fight_remains<8&fight_remains>2\n# TODO: Need to sync with with ravenous frenzy when we run frenzyband, or atleast check if its worth it\nactions.cooldown+=/berserk,if=variable.ripped&(cooldown.convoke_the_spirits.up||cooldown.convoke_the_spirits.remains>32||boss&fight_remains<20)\nactions.cooldown+=/incarnation,if=variable.ripped&(cooldown.convoke_the_spirits.up||boss&fight_remains<30)\n# Try and not waste TF energy, but also just use it for zerk and incarns\nactions.cooldown+=/tigers_fury,if=energy.deficit>40||buff.bs_inc.up||(talent.predator.enabled&shortest_ttd<3)||(active_dot.rip=0&buff.bloodtalons.up)\n# Might be wrong to use Smeld on Rake in very very niche situations, but very rarely\nactions.cooldown+=/shadowmeld,if=buff.tigers_fury.up&buff.bs_inc.down&combo_points<4&buff.sudden_ambush.down&dot.rake.pmultiplier<1.6&energy>40&druid.rake.ticks_gained_on_refresh>spell_targets.swipe_cat*2-2&target.time_to_die>5\nactions.cooldown+=/berserking,if=buff.tigers_fury.up||buff.bs_inc.up\nactions.cooldown+=/potion,if=buff.bs_inc.up||boss&fight_remains<cooldown.bs_inc.remains||boss&fight_remains<25\nactions.cooldown+=/ravenous_frenzy,if=buff.bs_inc.up||fight_remains<21\n# TODO: Check moonkin hotw and stuff like this, and maybe better combat remain resync\nactions.cooldown+=/convoke_the_spirits,if=(dot.rip.remains>4&combo_points<5&(dot.rake.ticking||spell_targets.thrash_cat>1)&energy.deficit>=20&cooldown.bs_inc.remains>10)||boss&fight_remains<5||(buff.bs_inc.up&buff.bs_inc.remains>12)\n# Maybe there should be more conditions on the conduit\nactions.cooldown+=/empower_bond,if=buff.tigers_fury.up||(conduit.deep_allegiance.enabled)\n# Give priority to on-use weapon\nactions.cooldown+=/use_item,name=jotungeirr_destinys_call\nactions.cooldown+=/use_items\n\nactions.filler=rake,cycle_targets=1,if=variable.filler=1&refreshable&dot.rake.pmultiplier<=1.2*persistent_multiplier\nactions.filler+=/rake,if=variable.filler=2\nactions.filler+=/lunar_inspiration,if=variable.filler=3\nactions.filler+=/swipe,if=variable.filler=4\nactions.filler+=/swipe_cat,if=spell_targets.swipe_cat=1&!buff.clearcasting.up\nactions.filler+=/shred,if=buff.sudden_ambush.down\nactions.filler+=/regrowth,if=settings.filler_regrowth&selection_time>1.5*gcd.max\n## actions.filler+=/fleshcraft,if=soulbind.pustule_eruption.enabled||soulbind.volatile_solvent.enabled,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\n\nactions.finisher=pool_resource,for_next=1\nactions.finisher+=/savage_roar,if=buff.savage_roar.remains<3\nactions.finisher+=/primal_wrath,if=(druid.primal_wrath.ticks_gained_on_refresh>3*(spell_targets.primal_wrath+1)&spell_targets.primal_wrath>1)||spell_targets.primal_wrath>(3+1*talent.sabertooth.enabled)\nactions.finisher+=/rip,cycle_targets=1,if=refreshable&druid.rip.ticks_gained_on_refresh>variable.rip_ticks&((buff.tigers_fury.up||!ticking)&(buff.bloodtalons.up||!talent.bloodtalons.enabled)||!talent.sabertooth.enabled)&(spell_targets.primal_wrath=1||!talent.primal_wrath.enabled)&(active_dot.rip=0||ticking&active_dot.rip=1||!runeforge.draught_of_deep_focus||!talent.sabertooth.enabled)\nactions.finisher+=/savage_roar,if=buff.savage_roar.remains<(combo_points+1)*6*0.3\nactions.finisher+=/ferocious_bite,max_energy=1,cycle_targets=1\nactions.finisher+=/ferocious_bite,cycle_targets=1,if=buff.bs_inc.up&talent.soul_of_the_forest.enabled||cooldown.convoke_the_spirits.remains<1&covenant.night_fae\nactions.finisher+=/regrowth,if=settings.filler_regrowth&selection_time>1.5*gcd.max\n\nactions.owlweave=starsurge,if=buff.heart_of_the_wild.up\nactions.owlweave+=/sunfire,line_cd=4*gcd\nactions.owlweave+=/moonfire,line_cd=4*gcd,if=buff.moonkin_form.up&spell_targets.thrash_cat<2&!talent.lunar_inspiration.enabled&energy<60&!buff.clearcasting.up\nactions.owlweave+=/heart_of_the_wild,if=energy<30&dot.rip.remains>4.5&(cooldown.tigers_fury.remains>=6.5||runeforge.cateye_curio)&buff.clearcasting.stack<1&!buff.apex_predators_craving.up&!buff.bloodlust.up&!buff.bs_inc.up&(cooldown.convoke_the_spirits.remains>6.5||!covenant.night_fae)&(!covenant.necrolord||cooldown.adaptive_swarm.remains>=5||dot.adaptive_swarm_damage.remains>7)\nactions.owlweave+=/moonkin_form,if=energy<30&dot.rip.remains>4.5&(cooldown.tigers_fury.remains>=4.5||runeforge.cateye_curio)&buff.clearcasting.stack<1&!buff.apex_predators_craving.up&!buff.bloodlust.up&(!buff.bs_inc.up||covenant.necrolord&talent.savage_roar.enabled&buff.bs_inc.remains>6)&(cooldown.convoke_the_spirits.remains>6.5||!covenant.night_fae)&(!covenant.necrolord||cooldown.adaptive_swarm.remains>=5||dot.adaptive_swarm_damage.remains>7)&fight_remains>7\n\nactions.setup=lunar_inspiration,if=covenant.necrolord&spell_targets.thrash_cat<4&combo_points<5&!ticking&!buff.bs_inc.up\nactions.setup+=/pool_resource,for_next=1\nactions.setup+=/savage_roar,if=talent.feral_frenzy.enabled&cooldown.feral_frenzy.up&!buff.savage_roar.up&combo_points>1&dot.rake.ticking&(dot.lunar_inspiration.ticking||!talent.lunar_inspiration.enabled)\n## actions.setup+=/pool_resource,if=talent.bloodtalons.enabled&buff.bloodtalons.down&(energy+3.5*energy.regen+(40*buff.clearcasting.up))<(115-23*buff.incarnation_king_of_the_jungle.up)&active_bt_triggers=0\nactions.setup+=/wait,sec=((115-23*buff.incarnation_king_of_the_jungle.up)-(energy.current+3.5*energy.regen+(40*buff.clearcasting.up)))/energy.regen,if=talent.bloodtalons.enabled&buff.bloodtalons.down&active_bt_triggers=0\nactions.setup+=/call_action_list,name=bloodtalons,if=talent.bloodtalons.enabled&buff.bloodtalons.down&(combo_points<5||spell_targets.thrash_cat=1)\nactions.setup+=/call_action_list,name=cooldown\nactions.setup+=/call_action_list,name=finisher,strict=1,if=combo_points>3&(buff.bloodtalons.up||!talent.bloodtalons.enabled)\n\nactions.stealth=pool_resource,for_next=1\nactions.stealth+=/swipe_cat,if=buff.bs_inc.up&spell_targets.swipe_cat>3&runeforge.frenzyband\n# Rake needs roughly 50% of its length at a minimum to surpass shreds dpe\nactions.stealth+=/rake,cycle_targets=1,if=(dot.rake.pmultiplier<1.5||refreshable)&druid.rake.ticks_gained_on_refresh>2||(persistent_multiplier>dot.rake.pmultiplier&buff.bs_inc.up&spell_targets.thrash_cat<3&covenant.necrolord)||buff.bs_inc.remains<1\nactions.stealth+=/lunar_inspiration,if=spell_targets.thrash_cat<3&refreshable&druid.lunar_inspiration.ticks_gained_on_refresh>5&(combo_points=4||dot.lunar_inspiration.remains<5||!dot.lunar_inspiration.ticking)\n# Brutal Slash is better than stealth Shred at 3 targets\nactions.stealth+=/brutal_slash,if=spell_targets.brutal_slash>2\nactions.stealth+=/pool_resource,for_next=1\nactions.stealth+=/shred,if=combo_points<4&spell_targets.thrash_cat<5\n\nactions.balance=sunfire,if=buff.eclipse_solar.down&buff.eclipse_lunar.down&(refreshable||(active_enemies>1&active_dot.sunfire<active_enemies))\nactions.balance+=/starsurge,if=buff.eclipse_solar.remains>10+cast_time||buff.eclipse_lunar.remains>10+cast_time\nactions.balance+=/starfire,if=buff.eclipse_lunar.remains>cast_time||buff.eclipse_solar.down&solar_eclipse>0||buff.eclipse_solar.down&lunar_eclipse-action.wrath.in_flight<1\nactions.balance+=/wrath,if=buff.eclipse_solar.remains>cast_time||buff.eclipse_lunar.down&lunar_eclipse-action.wrath.in_flight>0",
				},
				["Affliction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220821,
					["spec"] = 265,
					["desc"] = "Affliction Warlock\nAugust 21, 2022\n\nChanges:\n- Added Spell Lock.\n- Added Devour Magic.\n- Added breakchannel logic for Drain Soul.\n- Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n- Enable Rampant Afflictions PvP talent.\n- Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n- Condense some Darkglare Prep calls to reduce computation time.\n- Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n- Only Seed once pre-pull.\n- Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Integrate Necro MW priority list.\n- Don't break Drain Soul with Decimating Bolt buff.",
					["profile"] = "## Affliction Warlock\n## August 21, 2022\n\n## Changes:\n## - Added Spell Lock.\n## - Added Devour Magic.\n## - Added breakchannel logic for Drain Soul.\n## - Tweak Malefic Rapture logic to work if you're missing a talent in that row.\n## - Enable Rampant Afflictions PvP talent.\n## - Tweaks to avoid blowing Darkglare in multi-target w/o DOTs up.\n## - Condense some Darkglare Prep calls to reduce computation time.\n## - Set some call_action_list entries to strict to avoid checking lists that won't be reached (again!).\n## - Only Seed once pre-pull.\n## - Adjust \"burn CDs before end of fight\" logic to apply only to boss fights (not trash packs).\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Integrate Necro MW priority list.\n## - Don't break Drain Soul with Decimating Bolt buff.\n\nactions.precombat=fel_domination,if=time>0&!pet.alive&!buff.grimoire_of_sacrifice.up\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/fleshcraft\nactions.precombat+=/variable,name=dots_ready,value=active_dot.corruption>0&active_dot.agony>0&active_dot.unstable_affliction>0&(!talent.siphon_life.enabled||active_dot.siphon_life>0)&(dot.phantom_singularity.ticking||!talent.phantom_singularity.enabled)\nactions.precombat+=/seed_of_corruption,line_cd=10,if=spell_targets.seed_of_corruption_aoe>=3\nactions.precombat+=/haunt\nactions.precombat+=/unstable_affliction\n\n## Executed every time the actor is available.\nactions=spell_lock\nactions+=/devour_magic\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>3\nactions+=/malefic_rapture,if=buff.calamitous_crescendo.up\n# Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.\nactions+=/run_action_list,name=necro_mw,strict=1,if=covenant.necrolord&runeforge.malefic_wrath&active_enemies=1&talent.phantom_singularity\n# Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.\nactions+=/call_action_list,name=trinket_split_check\nactions+=/call_action_list,name=delayed_trinkets\nactions+=/call_action_list,name=stat_trinkets,strict=1,if=(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking||dot.phantom_singularity.ticking)&soul_shard>3||dot.vile_taint.ticking||talent.sow_the_seeds\nactions+=/call_action_list,name=damage_trinkets,if=covenant.night_fae&(!variable.trinket_split||cooldown.soul_rot.remains>20||(variable.trinket_one&cooldown.soul_rot.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.soul_rot.remains<trinket.2.cooldown.remains))||covenant.venthyr&(!variable.trinket_split||cooldown.impending_catastrophe.remains>20||(variable.trinket_one&cooldown.impending_catastrophe.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.impending_catastrophe.remains<trinket.2.cooldown.remains))||(covenant.necrolord||covenant.kyrian||covenant.none)&(!variable.trinket_split||cooldown.phantom_singularity.remains>20||(variable.trinket_one&cooldown.phantom_singularity.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.phantom_singularity.remains<trinket.2.cooldown.remains))||!talent.phantom_singularity.enabled&(!variable.trinket_split||cooldown.summon_darkglare.remains>20||(variable.trinket_one&cooldown.summon_darkglare.remains<trinket.1.cooldown.remains)||(variable.trinket_two&cooldown.summon_darkglare.remains<trinket.2.cooldown.remains))\n# Burn soul shards if fight is almost over\nactions+=/malefic_rapture,if=boss&fight_remains<execute_time*soul_shard&dot.unstable_affliction.ticking\n# If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||((covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2)\n# Refresh dots early if going into a shard spending phase\nactions+=/call_action_list,name=dot_prep,if=(covenant.night_fae&!dot.soul_rot.ticking&cooldown.soul_rot.remains<4)||(covenant.venthyr&!dot.impending_catastrophe_dot.ticking&cooldown.impending_catastrophe.remains<4)||((covenant.necrolord||covenant.kyrian||covenant.none)&talent.phantom_singularity&!dot.phantom_singularity.ticking&cooldown.phantom_singularity.remains<4)\n# If Phantom Singularity is ticking, it is safe to use Dark Soul\nactions+=/dark_soul,if=dot.phantom_singularity.ticking\nactions+=/dark_soul,if=!talent.phantom_singularity&(dot.soul_rot.ticking||dot.impending_catastrophe_dot.ticking)\n# Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)\nactions+=/phantom_singularity,if=covenant.night_fae&time>5&cooldown.soul_rot.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=covenant.venthyr&time>5&cooldown.impending_catastrophe.remains<1&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt\nactions+=/phantom_singularity,if=covenant.necrolord&runeforge.malefic_wrath&time>5&cooldown.decimating_bolt.remains<3&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\n# Other covenants (including non-MW Necro) cast PS on cooldown\nactions+=/phantom_singularity,if=(covenant.kyrian||covenant.none||(covenant.necrolord&!runeforge.malefic_wrath))&(trinket.empyreal_ordnance.cooldown.remains<162||!equipped.empyreal_ordnance)\nactions+=/phantom_singularity,if=boss&fight_remains<16\n# If Phantom Singularity is ticking, it's time to use other major dots\nactions+=/call_action_list,name=covenant,strict=1,if=dot.phantom_singularity.ticking&(covenant.night_fae||covenant.venthyr)\nactions+=/agony,cycle_targets=1,if=dot.agony.remains<4\nactions+=/haunt\n# Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.\nactions+=/seed_of_corruption,if=active_enemies>2&talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight\nactions+=/seed_of_corruption,if=active_enemies>2&talent.siphon_life&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.remains<4\nactions+=/vile_taint,if=(soul_shard>1||active_enemies>2)&cooldown.summon_darkglare.remains>12\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&dot.unstable_affliction.remains<4\nactions+=/siphon_life,cycle_targets=1,if=dot.siphon_life.remains<4\nactions+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\n# Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption\nactions+=/corruption,cycle_targets=1,if=active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)&dot.corruption.remains<2\n# After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping\nactions+=/malefic_rapture,if=soul_shard>4&time>21\n# When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied\nactions+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&!talent.phantom_singularity&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready)||(covenant.night_fae&!talent.phantom_singularity&dot.soul_rot.ticking&cooldown.summon_darkglare.ready)||((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.ready)\n# Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses\nactions+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions+=/dark_soul,if=boss&!talent.phantom_singularity&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\n# Catch-all item usage for anything not specified elsewhere\nactions+=/call_action_list,name=item\n## Refresh Shadow Embrace before spending shards on Malefic Rapture\nactions+=/call_action_list,name=se,if=talent.shadow_embrace.enabled&(debuff.shadow_embrace.stack<(2-action.shadow_bolt.in_flight)||debuff.shadow_embrace.remains<3)\n# Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff\nactions+=/malefic_rapture,if=(dot.vile_taint.ticking||dot.impending_catastrophe_dot.ticking||dot.soul_rot.ticking)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\n# Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&cooldown.soul_rot.remains>20&buff.malefic_wrath.remains<4\n# Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant\nactions+=/malefic_rapture,if=runeforge.malefic_wrath&(covenant.necrolord||covenant.kyrian)&buff.malefic_wrath.remains<4\n# Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it\nactions+=/malefic_rapture,if=talent.phantom_singularity&(dot.phantom_singularity.ticking||cooldown.phantom_singularity.remains>25||boss&time_to_die<cooldown.phantom_singularity.remains)&(!runeforge.malefic_wrath||buff.malefic_wrath.stack<3||soul_shard>1)\nactions+=/malefic_rapture,if=talent.sow_the_seeds\n# Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks\nactions+=/drain_life,if=buff.inevitable_demise.stack>40||buff.inevitable_demise.up&boss&fight_remains<4\nactions+=/call_action_list,name=covenant\nactions+=/agony,cycle_targets=1,if=refreshable\nactions+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions+=/siphon_life,cycle_targets=1,if=refreshable\nactions+=/corruption,cycle_targets=1,if=refreshable&active_enemies<4-(talent.sow_the_seeds||talent.siphon_life)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions+=/shadow_bolt\n\nactions.aoe=phantom_singularity\nactions.aoe+=/haunt\nactions.aoe+=/call_action_list,name=darkglare_prep,if=covenant.venthyr&dot.impending_catastrophe_dot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||covenant.night_fae&dot.soul_rot.ticking&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity)||(covenant.necrolord||covenant.kyrian||covenant.none)&dot.phantom_singularity.ticking&dot.phantom_singularity.remains<2\nactions.aoe+=/seed_of_corruption,if=talent.sow_the_seeds&can_seed\nactions.aoe+=/seed_of_corruption,if=!talent.sow_the_seeds&!dot.seed_of_corruption.ticking&!in_flight&dot.corruption.refreshable\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony<4&!dot.agony.ticking\nactions.aoe+=/agony,cycle_targets=1,if=active_dot.agony>=4&refreshable&dot.agony.ticking\nactions.aoe+=/unstable_affliction,if=active_dot.unstable_affliction=0||ticking&refreshable\nactions.aoe+=/unstable_affliction,cycle_targets=1,if=!ticking&pvptalent.rampant_afflictions.enabled&active_dot.unstable_affliction<3\nactions.aoe+=/vile_taint,if=soul_shard>1\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.aoe+=/call_action_list,name=darkglare_prep,if=(covenant.venthyr&(cooldown.impending_catastrophe.ready||dot.impending_catastrophe_dot.ticking)&cooldown.summon_darkglare.ready&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))&((covenant.necrolord||covenant.kyrian||covenant.none)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))||(covenant.night_fae&(cooldown.soul_rot.ready||dot.soul_rot.ticking)&cooldown.summon_darkglare.remains<2&(dot.phantom_singularity.remains>2||!talent.phantom_singularity))\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains>fight_remains&(!talent.phantom_singularity||cooldown.phantom_singularity.remains>fight_remains)\nactions.aoe+=/dark_soul,if=boss&cooldown.summon_darkglare.remains+cooldown.summon_darkglare.duration<fight_remains\nactions.aoe+=/call_action_list,name=item\nactions.aoe+=/call_action_list,name=delayed_trinkets\nactions.aoe+=/call_action_list,name=damage_trinkets\nactions.aoe+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking||!talent.phantom_singularity\nactions.aoe+=/malefic_rapture,if=dot.vile_taint.ticking\nactions.aoe+=/malefic_rapture,if=dot.soul_rot.ticking&!talent.sow_the_seeds\nactions.aoe+=/malefic_rapture,if=!talent.vile_taint\nactions.aoe+=/malefic_rapture,if=soul_shard>4\nactions.aoe+=/siphon_life,cycle_targets=1,if=active_dot.siphon_life<=3&refreshable&!dot.siphon_life.ticking\nactions.aoe+=/call_action_list,name=covenant,strict=1,if=covenant.necrolord\nactions.aoe+=/drain_life,if=buff.inevitable_demise.stack>=50||boss&buff.inevitable_demise.up&fight_remains<5||buff.inevitable_demise.stack>=35&dot.soul_rot.ticking\nactions.aoe+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions.aoe+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.aoe+=/shadow_bolt\n\nactions.covenant=impending_catastrophe,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<10||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/impending_catastrophe,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/decimating_bolt,if=cooldown.summon_darkglare.remains>5&(debuff.haunt.remains>4||!talent.haunt)\nactions.covenant+=/soul_rot,if=!talent.phantom_singularity&(cooldown.summon_darkglare.remains<5||cooldown.summon_darkglare.remains>50||cooldown.summon_darkglare.remains>25&conduit.corrupting_leer)\nactions.covenant+=/soul_rot,if=talent.phantom_singularity&dot.phantom_singularity.ticking\nactions.covenant+=/scouring_tithe\n\nactions.damage_trinkets=use_item,name=soul_igniter\nactions.damage_trinkets+=/use_item,name=dreadfire_vessel\nactions.damage_trinkets+=/use_item,name=glyph_of_assimilation\nactions.damage_trinkets+=/use_item,name=unchained_gladiators_shackles\nactions.damage_trinkets+=/use_item,name=ebonsoul_vice\nactions.damage_trinkets+=/use_item,name=resonant_reservoir\nactions.damage_trinkets+=/use_item,name=architects_ingenuity_core\nactions.damage_trinkets+=/use_item,name=grim_eclipse\nactions.damage_trinkets+=/use_item,name=toe_knees_promise\nactions.damage_trinkets+=/use_item,name=mrrgrias_favor\nactions.damage_trinkets+=/use_item,name=cosmic_gladiators_resonator\n\nactions.darkglare_prep=vile_taint\nactions.darkglare_prep+=/dark_soul\nactions.darkglare_prep+=/potion\nactions.darkglare_prep+=/fireblood\nactions.darkglare_prep+=/blood_fury\nactions.darkglare_prep+=/berserking\nactions.darkglare_prep+=/call_action_list,name=covenant,strict=1,if=!covenant.necrolord\nactions.darkglare_prep+=/summon_darkglare\n\nactions.delayed_trinkets=use_item,name=grim_eclipse,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=empyreal_ordnance,if=(covenant.night_fae&cooldown.soul_rot.remains<20)||(covenant.venthyr&cooldown.impending_catastrophe.remains<20)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=sunblood_amethyst,if=(covenant.night_fae&cooldown.soul_rot.remains<6)||(covenant.venthyr&cooldown.impending_catastrophe.remains<6)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=soulletting_ruby,if=(covenant.night_fae&cooldown.soul_rot.remains<8)||(covenant.venthyr&cooldown.impending_catastrophe.remains<8)||(covenant.necrolord||covenant.kyrian||covenant.none)\nactions.delayed_trinkets+=/use_item,name=shadowed_orb_of_torment,if=(covenant.night_fae&cooldown.soul_rot.remains<4)||(covenant.venthyr&cooldown.impending_catastrophe.remains<4)||(covenant.necrolord||covenant.kyrian||covenant.none)\n\nactions.dot_prep=agony,if=dot.agony.remains<8&cooldown.summon_darkglare.remains>dot.agony.remains\nactions.dot_prep+=/siphon_life,if=dot.siphon_life.remains<8&cooldown.summon_darkglare.remains>dot.siphon_life.remains\nactions.dot_prep+=/unstable_affliction,if=dot.unstable_affliction.remains<8&cooldown.summon_darkglare.remains>dot.unstable_affliction.remains\nactions.dot_prep+=/corruption,if=dot.corruption.remains<8&cooldown.summon_darkglare.remains>dot.corruption.remains\n\nactions.item=use_items\n\nactions.necro_mw=variable,name=dots_ticking,value=dot.corruption.remains>2&dot.agony.remains>2&dot.unstable_affliction.remains>2&(!talent.siphon_life||dot.siphon_life.remains>2)\n# Trinkets align with PS for Shadow Embrace, DB for Haunt.\nactions.necro_mw+=/variable,name=trinket_delay,value=cooldown.phantom_singularity.remains,value_else=cooldown.decimating_bolt.remains,op=setif,condition=talent.shadow_embrace,if=covenant.necrolord\n# Burn soul shards if the fight will be ending soon.\nactions.necro_mw+=/malefic_rapture,if=time_to_die<execute_time*soul_shard&dot.unstable_affliction.ticking\n# Cast haunt to refresh before falloff.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<2+execute_time\n# High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<gcd.max+execute_time\n# Fire delayed trinkets in anticipation of Decimating Bolt.\nactions.necro_mw+=/use_item,name=empyreal_ordnance,if=variable.trinket_delay<20\nactions.necro_mw+=/use_item,name=sunblood_amethyst,if=variable.trinket_delay<6\nactions.necro_mw+=/use_item,name=soulletting_ruby,if=variable.trinket_delay<8\nactions.necro_mw+=/use_item,name=shadowed_orb_of_torment,if=variable.trinket_delay<4\n# If the player is using Haunt, fire PS on cooldown then follow with DB\nactions.necro_mw+=/phantom_singularity,if=talent.haunt&variable.dots_ticking\nactions.necro_mw+=/decimating_bolt,if=talent.haunt&cooldown.phantom_singularity.remains>0\n# If the player is using SE, fire DB on cooldown then following with PS\nactions.necro_mw+=/decimating_bolt,if=talent.shadow_embrace&variable.dots_ticking\nactions.necro_mw+=/phantom_singularity,if=talent.shadow_embrace&cooldown.decimating_bolt.remains>0\nactions.necro_mw+=/unstable_affliction,if=dot.unstable_affliction.remains<6\nactions.necro_mw+=/agony,if=dot.agony.remains<4\nactions.necro_mw+=/siphon_life,if=dot.siphon_life.remains<4\nactions.necro_mw+=/corruption,if=dot.corruption.remains<4\n# Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh\nactions.necro_mw+=/malefic_rapture,if=time>7&buff.malefic_wrath.remains<2*gcd.max+execute_time\n# Call darkglare_prep if Phantom Singularity is currently ticking\nactions.necro_mw+=/call_action_list,name=darkglare_prep,strict=1,if=dot.phantom_singularity.ticking\n# Utilize any other stat trinkets if Phantom Singularity is ticking\nactions.necro_mw+=/call_action_list,name=stat_trinkets,strict=1,if=dot.phantom_singularity.ticking\n# Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)\nactions.necro_mw+=/malefic_rapture,if=time>7&(buff.malefic_wrath.stack<3||buff.malefic_wrath.remains<4.5)\n# Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.\nactions.necro_mw+=/malefic_rapture,if=(dot.phantom_singularity.ticking||time_to_die<cooldown.phantom_singularity.remains)&(buff.malefic_wrath.stack<3||soul_shard>1)\n# Additional Drain Soul cast when PS is ticking\nactions.necro_mw+=/drain_soul,if=dot.phantom_singularity.ticking\n# Low - priority dot refresh when refreshable.\nactions.necro_mw+=/agony,if=refreshable\nactions.necro_mw+=/unstable_affliction,if=refreshable\nactions.necro_mw+=/corruption,if=refreshable\nactions.necro_mw+=/siphon_life,if=talent.siphon_life&refreshable\n# Fleshcraft to maintain Volatile Solvent.\nactions.necro_mw+=/fleshcraft,if=soulbind.volatile_solvent,cancel_if=buff.volatile_solvent_humanoid.up\n# Low-priority haunt refresh.\nactions.necro_mw+=/haunt,if=dot.haunt.remains<3\n# Uninterruptible DS channel if we have the DB buff.\nactions.necro_mw+=/drain_soul,if=buff.decimating_bolt.up\nactions.necro_mw+=/drain_soul,if=talent.shadow_embrace&debuff.shadow_embrace.remains<3||debuff.shadow_embrace.stack<3,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.necro_mw+=/shadow_bolt\n\nactions.se=haunt\nactions.se+=/drain_soul,interrupt_if=buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)\nactions.se+=/shadow_bolt\n\nactions.stat_trinkets=use_item,name=the_first_sigil\nactions.stat_trinkets+=/use_item,name=scars_of_fraternal_strife\nactions.stat_trinkets+=/use_item,name=inscrutable_quantum_device\nactions.stat_trinkets+=/use_item,name=instructors_divine_bell\nactions.stat_trinkets+=/use_item,name=overflowing_anima_cage\nactions.stat_trinkets+=/use_item,name=darkmoon_deck_putrescence\nactions.stat_trinkets+=/use_item,name=macabre_sheet_music\nactions.stat_trinkets+=/use_item,name=flame_of_battle\nactions.stat_trinkets+=/use_item,name=wakeners_frond\nactions.stat_trinkets+=/use_item,name=tablet_of_despair\nactions.stat_trinkets+=/use_item,name=gladiators_badge\nactions.stat_trinkets+=/use_item,name=obelisk_of_the_void\nactions.stat_trinkets+=/use_item,name=horn_of_valor\nactions.stat_trinkets+=/use_item,name=moonlit_prism\nactions.stat_trinkets+=/use_item,name=figurehead_of_the_naglfar\nactions.stat_trinkets+=/blood_fury\nactions.stat_trinkets+=/fireblood\nactions.stat_trinkets+=/berserking\n\n# We don't support ^ as XOR in Lua, so I've converted this to arithmetic.\nactions.trinket_split_check=variable,name=special_equipped,value=((1*equipped.empyreal_ordnance)+(1*equipped.inscrutable_quantum_device)+(1*equipped.soulletting_ruby)+(1*equipped.sunblood_amethyst))=1\nactions.trinket_split_check+=/variable,name=trinket_one,value=(trinket.1.has_proc&trinket.1.has_cooldown)\nactions.trinket_split_check+=/variable,name=trinket_two,value=(trinket.2.has_proc&trinket.2.has_cooldown)\nactions.trinket_split_check+=/variable,name=damage_trinket,value=(!(trinket.1.has_proc&trinket.1.has_cooldown))||(!(trinket.2.has_proc&trinket.2.has_cooldown))||equipped.glyph_of_assimilation\nactions.trinket_split_check+=/variable,name=trinket_split,value=(variable.trinket_one&variable.damage_trinket)||(variable.trinket_two&variable.damage_trinket)||(1*variable.trinket_one)+(1*variable.special_equipped)=1||(1*variable.trinket_two)+(1*variable.special_equipped)=1",
					["version"] = 20220821,
					["warnings"] = "WARNING:  The import for 'trinket_split_check' required some automated changes.\nLine 2: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 3: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 4: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 4: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\n\nWARNING:  The import for 'damage_trinkets' required some automated changes.\nLine 9: Unsupported use_item action [ toe_knees_promise]; entry disabled.\nLine 10: Unsupported use_item action [ mrrgrias_favor]; entry disabled.\n\nWARNING:  The import for 'stat_trinkets' required some automated changes.\nLine 12: Unsupported use_item action [ obelisk_of_the_void]; entry disabled.\nLine 15: Unsupported use_item action [ figurehead_of_the_naglfar]; entry disabled.\n\nWARNING:  The import for 'covenant' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 1: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 8: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 9: Converted 'trinket.1.X' to 'trinket.t1.X' (4x).\nLine 9: Converted 'trinket.2.X' to 'trinket.t2.X' (4x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 16: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 18: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 24: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 29: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 32: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 33: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 36: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 37: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 38: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 39: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 39: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 40: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 46: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 47: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (3x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 18: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 20: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 26: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'necro_mw' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 27: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 28: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 31: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 13 action lists.\n",
					["lists"] = {
						["darkglare_prep"] = {
							{
								["action"] = "vile_taint",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "dark_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [7]
							{
								["action"] = "summon_darkglare",
								["enabled"] = true,
							}, -- [8]
						},
						["trinket_split_check"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ( 1 * equipped.empyreal_ordnance ) + ( 1 * equipped.inscrutable_quantum_device ) + ( 1 * equipped.soulletting_ruby ) + ( 1 * equipped.sunblood_amethyst ) ) = 1",
								["description"] = "We don't support ",
								["var_name"] = "special_equipped",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t1.has_proc & trinket.t1.has_cooldown )",
								["var_name"] = "trinket_one",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( trinket.t2.has_proc & trinket.t2.has_cooldown )",
								["var_name"] = "trinket_two",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! ( trinket.t1.has_proc & trinket.t1.has_cooldown ) ) || ( ! ( trinket.t2.has_proc & trinket.t2.has_cooldown ) ) || equipped.glyph_of_assimilation",
								["var_name"] = "damage_trinket",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( variable.trinket_one & variable.damage_trinket ) || ( variable.trinket_two & variable.damage_trinket ) || ( 1 * variable.trinket_one ) + ( 1 * variable.special_equipped ) = 1 || ( 1 * variable.trinket_two ) + ( 1 * variable.special_equipped ) = 1",
								["var_name"] = "trinket_split",
							}, -- [5]
						},
						["damage_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vice",
								["action"] = "ebonsoul_vice",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "toe_knees_promise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "mrrgrias_favor",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [11]
						},
						["delayed_trinkets"] = {
							{
								["enabled"] = true,
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 20 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 20 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 6 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 6 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 8 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 8 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.night_fae & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & cooldown.impending_catastrophe.remains < 4 ) || ( covenant.necrolord || covenant.kyrian || covenant.none )",
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [5]
						},
						["stat_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "the_first_sigil",
								["action"] = "the_first_sigil",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "tablet_of_despair",
								["action"] = "tablet_of_despair",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "gladiators_badge",
								["action"] = "gladiators_badge",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "obelisk_of_the_void",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "horn_of_valor",
								["action"] = "horn_of_valor",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "figurehead_of_the_naglfar",
							}, -- [15]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [18]
						},
						["covenant"] = {
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 10 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "impending_catastrophe",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "impending_catastrophe",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.summon_darkglare.remains > 5 & ( debuff.haunt.remains > 4 || ! talent.haunt.enabled )",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( cooldown.summon_darkglare.remains < 5 || cooldown.summon_darkglare.remains > 50 || cooldown.summon_darkglare.remains > 25 & conduit.corrupting_leer.enabled )",
								["action"] = "soul_rot",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.phantom_singularity.enabled & dot.phantom_singularity.ticking",
								["action"] = "soul_rot",
							}, -- [5]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [6]
						},
						["dot_prep"] = {
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 8 & cooldown.summon_darkglare.remains > dot.agony.remains",
								["action"] = "agony",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 8 & cooldown.summon_darkglare.remains > dot.siphon_life.remains",
								["action"] = "siphon_life",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 8 & cooldown.summon_darkglare.remains > dot.unstable_affliction.remains",
								["action"] = "unstable_affliction",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 8 & cooldown.summon_darkglare.remains > dot.corruption.remains",
								["action"] = "corruption",
							}, -- [4]
						},
						["default"] = {
							{
								["action"] = "spell_lock",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies > 3",
								["list_name"] = "aoe",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.calamitous_crescendo.up",
								["action"] = "malefic_rapture",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Call separate action list for Necrolord MW in ST. Currently only optimized for use with PS.",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & active_enemies = 1 & talent.phantom_singularity.enabled",
								["list_name"] = "necro_mw",
							}, -- [5]
							{
								["enabled"] = true,
								["description"] = "Action lists for trinket behavior. Stats are saved for before Soul Rot/Impending Catastrophe/Phantom Singularity, otherwise on cooldown.",
								["action"] = "call_action_list",
								["list_name"] = "trinket_split_check",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking || dot.phantom_singularity.ticking ) & soul_shard > 3 || dot.vile_taint.ticking || talent.sow_the_seeds.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & ( ! variable.trinket_split || cooldown.soul_rot.remains > 20 || ( variable.trinket_one & cooldown.soul_rot.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.soul_rot.remains < trinket.t2.cooldown.remains ) ) || covenant.venthyr & ( ! variable.trinket_split || cooldown.impending_catastrophe.remains > 20 || ( variable.trinket_one & cooldown.impending_catastrophe.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.impending_catastrophe.remains < trinket.t2.cooldown.remains ) ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & ( ! variable.trinket_split || cooldown.phantom_singularity.remains > 20 || ( variable.trinket_one & cooldown.phantom_singularity.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.phantom_singularity.remains < trinket.t2.cooldown.remains ) ) || ! talent.phantom_singularity.enabled & ( ! variable.trinket_split || cooldown.summon_darkglare.remains > 20 || ( variable.trinket_one & cooldown.summon_darkglare.remains < trinket.t1.cooldown.remains ) || ( variable.trinket_two & cooldown.summon_darkglare.remains < trinket.t2.cooldown.remains ) )",
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "Burn soul shards if fight is almost over",
								["criteria"] = "boss & fight_remains < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If covenant dot/Phantom Singularity is running, use Darkglare to extend the current set",
								["criteria"] = "( covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2 )",
								["list_name"] = "darkglare_prep",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Refresh dots early if going into a shard spending phase",
								["criteria"] = "( covenant.night_fae & ! dot.soul_rot.ticking & cooldown.soul_rot.remains < 4 ) || ( covenant.venthyr & ! dot.impending_catastrophe_dot.ticking & cooldown.impending_catastrophe.remains < 4 ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & talent.phantom_singularity.enabled & ! dot.phantom_singularity.ticking & cooldown.phantom_singularity.remains < 4 )",
								["list_name"] = "dot_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["description"] = "If Phantom Singularity is ticking, it is safe to use Dark Soul",
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "dark_soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.phantom_singularity.enabled & ( dot.soul_rot.ticking || dot.impending_catastrophe_dot.ticking )",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["description"] = "Sync Phantom Singularity with Venthyr/Night Fae covenant dot, otherwise use on cooldown. If Empyreal Ordnance buff is incoming, hold until it's ready (18 seconds after use)",
								["criteria"] = "covenant.night_fae & time > 5 & cooldown.soul_rot.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & time > 5 & cooldown.impending_catastrophe.remains < 1 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [16]
							{
								["enabled"] = true,
								["description"] = "Necrolord with Malefic Wrath casts phantom singularity in line with Decimating Bolt",
								["criteria"] = "covenant.necrolord & runeforge.malefic_wrath.enabled & time > 5 & cooldown.decimating_bolt.remains < 3 & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [17]
							{
								["enabled"] = true,
								["description"] = "Other covenants (including non-MW Necro) cast PS on cooldown",
								["criteria"] = "( covenant.kyrian || covenant.none || ( covenant.necrolord & ! runeforge.malefic_wrath.enabled ) ) & ( cooldown.empyreal_ordnance.remains < 162 || ! equipped.empyreal_ordnance )",
								["action"] = "phantom_singularity",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 16",
								["action"] = "phantom_singularity",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If Phantom Singularity is ticking, it's time to use other major dots",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking & ( covenant.night_fae || covenant.venthyr )",
								["list_name"] = "covenant",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "dot.agony.remains < 4",
								["cycle_targets"] = 1,
							}, -- [21]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["description"] = "Sow the Seeds on 3 targets if it isn't currently in flight or on the target. With Siphon Life it's also better to use Seed over manually applying 3 Corruptions.",
								["criteria"] = "active_enemies > 2 & talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight",
								["action"] = "seed_of_corruption",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & talent.siphon_life.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.remains < 4",
								["action"] = "seed_of_corruption",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "( soul_shard > 1 || active_enemies > 2 ) & cooldown.summon_darkglare.remains > 12",
								["action"] = "vile_taint",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & dot.unstable_affliction.remains < 4",
								["action"] = "unstable_affliction",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "dot.siphon_life.remains < 4",
								["cycle_targets"] = 1,
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["cycle_targets"] = 1,
								["criteria"] = "active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled ) & dot.corruption.remains < 2",
								["description"] = "Apply Corruption manually on 1-2 targets, or on 3 with Absolute Corruption",
							}, -- [29]
							{
								["enabled"] = true,
								["description"] = "After the opener, spend a shard when at 5 on Malefic Rapture to avoid overcapping",
								["criteria"] = "soul_shard > 4 & time > 21",
								["action"] = "malefic_rapture",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "When not syncing Phantom Singularity to Venthyr/Night Fae, Summon Darkglare if all dots are applied",
								["criteria"] = "( covenant.venthyr & ! talent.phantom_singularity.enabled & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready ) || ( covenant.night_fae & ! talent.phantom_singularity.enabled & dot.soul_rot.ticking & cooldown.summon_darkglare.ready ) || ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.ready )",
								["list_name"] = "darkglare_prep",
							}, -- [31]
							{
								["enabled"] = true,
								["description"] = "Use Dark Soul if Darkglare won't be ready again, or if there will be at least 2 more Darkglare uses",
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "boss & ! talent.phantom_singularity.enabled & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [33]
							{
								["enabled"] = true,
								["description"] = "Catch-all item usage for anything not specified elsewhere",
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & ( debuff.shadow_embrace.stack < ( 2 - action.shadow_bolt.in_flight ) || debuff.shadow_embrace.remains < 3 )",
								["action"] = "call_action_list",
								["list_name"] = "se",
							}, -- [35]
							{
								["enabled"] = true,
								["description"] = "Use Malefic Rapture when major dots are up, or if there will be significant time until the next Phantom Singularity. If utilizing Malefic Wrath, hold a shard to refresh the buff",
								["criteria"] = "( dot.vile_taint.ticking || dot.impending_catastrophe_dot.ticking || dot.soul_rot.ticking ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
							}, -- [36]
							{
								["enabled"] = true,
								["description"] = "Use Malefic Rapture to maintain the malefic wrath buff until shards need to be generated for the next burst window (20 seconds is more than sufficient to generate 3 shards)",
								["criteria"] = "runeforge.malefic_wrath.enabled & cooldown.soul_rot.remains > 20 & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
							}, -- [37]
							{
								["enabled"] = true,
								["description"] = "Maintain Malefic Wrath at all times for the Necrolord or Kyrian covenant",
								["criteria"] = "runeforge.malefic_wrath.enabled & ( covenant.necrolord || covenant.kyrian ) & buff.malefic_wrath.remains < 4",
								["action"] = "malefic_rapture",
							}, -- [38]
							{
								["enabled"] = true,
								["description"] = "Use Malefic Rapture on Phantom Singularity casts, making sure to save a shard to stack Malefic Wrath if using it",
								["criteria"] = "talent.phantom_singularity.enabled & ( dot.phantom_singularity.ticking || cooldown.phantom_singularity.remains > 25 || boss & time_to_die < cooldown.phantom_singularity.remains ) & ( ! runeforge.malefic_wrath.enabled || buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [40]
							{
								["enabled"] = true,
								["description"] = "Drain Life is only a DPS gain with Inevitable Demise near max stacks. If fight is about to end do not miss spending the stacks",
								["criteria"] = "buff.inevitable_demise.stack > 40 || buff.inevitable_demise.up & boss & fight_remains < 4",
								["action"] = "drain_life",
							}, -- [41]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant",
							}, -- [42]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [44]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "refreshable",
								["cycle_targets"] = 1,
							}, -- [45]
							{
								["enabled"] = true,
								["action"] = "corruption",
								["criteria"] = "refreshable & active_enemies < 4 - ( talent.sow_the_seeds.enabled || talent.siphon_life.enabled )",
								["cycle_targets"] = 1,
							}, -- [46]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [47]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [48]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [49]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "time > 0 & ! pet.alive & ! buff.grimoire_of_sacrifice.up",
								["action"] = "fel_domination",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [5]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_dot.corruption > 0 & active_dot.agony > 0 & active_dot.unstable_affliction > 0 & ( ! talent.siphon_life.enabled || active_dot.siphon_life > 0 ) & ( dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled )",
								["var_name"] = "dots_ready",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "seed_of_corruption",
								["criteria"] = "spell_targets.seed_of_corruption_aoe >= 3",
								["line_cd"] = "10",
							}, -- [8]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "unstable_affliction",
								["enabled"] = true,
							}, -- [10]
						},
						["aoe"] = {
							{
								["action"] = "phantom_singularity",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & dot.impending_catastrophe_dot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || covenant.night_fae & dot.soul_rot.ticking & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) || ( covenant.necrolord || covenant.kyrian || covenant.none ) & dot.phantom_singularity.ticking & dot.phantom_singularity.remains < 2",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.sow_the_seeds.enabled & can_seed",
								["action"] = "seed_of_corruption",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! talent.sow_the_seeds.enabled & ! dot.seed_of_corruption.ticking & ! in_flight & dot.corruption.refreshable",
								["action"] = "seed_of_corruption",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony < 4 & ! dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "agony",
								["criteria"] = "active_dot.agony >= 4 & refreshable & dot.agony.ticking",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.unstable_affliction = 0 || ticking & refreshable",
								["action"] = "unstable_affliction",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "unstable_affliction",
								["criteria"] = "! ticking & pvptalent.rampant_afflictions.enabled & active_dot.unstable_affliction < 3",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 1",
								["action"] = "vile_taint",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "( covenant.venthyr & ( cooldown.impending_catastrophe.ready || dot.impending_catastrophe_dot.ticking ) & cooldown.summon_darkglare.ready & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) & ( ( covenant.necrolord || covenant.kyrian || covenant.none ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) ) || ( covenant.night_fae & ( cooldown.soul_rot.ready || dot.soul_rot.ticking ) & cooldown.summon_darkglare.remains < 2 & ( dot.phantom_singularity.remains > 2 || ! talent.phantom_singularity.enabled ) )",
								["action"] = "call_action_list",
								["list_name"] = "darkglare_prep",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains > fight_remains & ( ! talent.phantom_singularity.enabled || cooldown.phantom_singularity.remains > fight_remains )",
								["action"] = "dark_soul",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & cooldown.summon_darkglare.remains + cooldown.summon_darkglare.duration < fight_remains",
								["action"] = "dark_soul",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "item",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "delayed_trinkets",
							}, -- [16]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "damage_trinkets",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking || ! talent.phantom_singularity.enabled",
								["list_name"] = "stat_trinkets",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "dot.vile_taint.ticking",
								["action"] = "malefic_rapture",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "dot.soul_rot.ticking & ! talent.sow_the_seeds.enabled",
								["action"] = "malefic_rapture",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! talent.vile_taint.enabled",
								["action"] = "malefic_rapture",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 4",
								["action"] = "malefic_rapture",
							}, -- [22]
							{
								["enabled"] = true,
								["action"] = "siphon_life",
								["criteria"] = "active_dot.siphon_life <= 3 & refreshable & ! dot.siphon_life.ticking",
								["cycle_targets"] = 1,
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.necrolord",
								["list_name"] = "covenant",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.inevitable_demise.stack >= 50 || boss & buff.inevitable_demise.up & fight_remains < 5 || buff.inevitable_demise.stack >= 35 & dot.soul_rot.ticking",
								["action"] = "drain_life",
							}, -- [25]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [26]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [27]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [28]
						},
						["item"] = {
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [1]
						},
						["se"] = {
							{
								["action"] = "haunt",
								["enabled"] = true,
							}, -- [1]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [3]
						},
						["necro_mw"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "dot.corruption.remains > 2 & dot.agony.remains > 2 & dot.unstable_affliction.remains > 2 & ( ! talent.siphon_life.enabled || dot.siphon_life.remains > 2 )",
								["var_name"] = "dots_ticking",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "setif",
								["description"] = "Trinkets align with PS for Shadow Embrace, DB for Haunt.",
								["criteria"] = "covenant.necrolord",
								["var_name"] = "trinket_delay",
								["action"] = "variable",
								["value_else"] = "cooldown.decimating_bolt.remains",
								["value"] = "cooldown.phantom_singularity.remains",
							}, -- [2]
							{
								["enabled"] = true,
								["description"] = "Burn soul shards if the fight will be ending soon.",
								["criteria"] = "time_to_die < execute_time * soul_shard & dot.unstable_affliction.ticking",
								["action"] = "malefic_rapture",
							}, -- [3]
							{
								["enabled"] = true,
								["description"] = "Cast haunt to refresh before falloff.",
								["criteria"] = "dot.haunt.remains < 2 + execute_time",
								["action"] = "haunt",
							}, -- [4]
							{
								["enabled"] = true,
								["description"] = "High - priority MW refresh if spending one global would cause us to miss the opportunity to refresh MW.",
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < gcd.max + execute_time",
								["action"] = "malefic_rapture",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["description"] = "Fire delayed trinkets in anticipation of Decimating Bolt.",
								["criteria"] = "variable.trinket_delay < 20",
								["action"] = "empyreal_ordnance",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_delay < 6",
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_delay < 8",
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.trinket_delay < 4",
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "If the player is using Haunt, fire PS on cooldown then follow with DB",
								["criteria"] = "talent.haunt.enabled & variable.dots_ticking",
								["action"] = "phantom_singularity",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "talent.haunt.enabled & cooldown.phantom_singularity.remains > 0",
								["action"] = "decimating_bolt",
							}, -- [11]
							{
								["enabled"] = true,
								["description"] = "If the player is using SE, fire DB on cooldown then following with PS",
								["criteria"] = "talent.shadow_embrace.enabled & variable.dots_ticking",
								["action"] = "decimating_bolt",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "talent.shadow_embrace.enabled & cooldown.decimating_bolt.remains > 0",
								["action"] = "phantom_singularity",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "dot.unstable_affliction.remains < 6",
								["action"] = "unstable_affliction",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "dot.agony.remains < 4",
								["action"] = "agony",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "dot.siphon_life.remains < 4",
								["action"] = "siphon_life",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "dot.corruption.remains < 4",
								["action"] = "corruption",
							}, -- [17]
							{
								["enabled"] = true,
								["description"] = "Refresh MW after the opener if darkglare_prep would cause us to miss a MW refresh",
								["criteria"] = "time > 7 & buff.malefic_wrath.remains < 2 * gcd.max + execute_time",
								["action"] = "malefic_rapture",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Call darkglare_prep if Phantom Singularity is currently ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "darkglare_prep",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Utilize any other stat trinkets if Phantom Singularity is ticking",
								["strict"] = 1,
								["criteria"] = "dot.phantom_singularity.ticking",
								["list_name"] = "stat_trinkets",
							}, -- [20]
							{
								["enabled"] = true,
								["description"] = "Stack Malefic Wrath to 3, or refresh when getting low (ideally looking for a calculated number, but 4.5s remaining is the result of testing with T27)",
								["criteria"] = "time > 7 & ( buff.malefic_wrath.stack < 3 || buff.malefic_wrath.remains < 4.5 )",
								["action"] = "malefic_rapture",
							}, -- [21]
							{
								["enabled"] = true,
								["description"] = "Additional MR spends when extra shards are available and either Phantom Singularity is ticking, or the fight is ending.",
								["criteria"] = "( dot.phantom_singularity.ticking || time_to_die < cooldown.phantom_singularity.remains ) & ( buff.malefic_wrath.stack < 3 || soul_shard > 1 )",
								["action"] = "malefic_rapture",
							}, -- [22]
							{
								["enabled"] = true,
								["description"] = "Additional Drain Soul cast when PS is ticking",
								["criteria"] = "dot.phantom_singularity.ticking",
								["action"] = "drain_soul",
							}, -- [23]
							{
								["enabled"] = true,
								["description"] = "Low - priority dot refresh when refreshable.",
								["criteria"] = "refreshable",
								["action"] = "agony",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "unstable_affliction",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "corruption",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "talent.siphon_life.enabled & refreshable",
								["action"] = "siphon_life",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["interrupt_if"] = "buff.volatile_solvent_humanoid.up",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["description"] = "Fleshcraft to maintain Volatile Solvent.",
							}, -- [28]
							{
								["enabled"] = true,
								["description"] = "Low-priority haunt refresh.",
								["criteria"] = "dot.haunt.remains < 3",
								["action"] = "haunt",
							}, -- [29]
							{
								["enabled"] = true,
								["description"] = "Uninterruptible DS channel if we have the DB buff.",
								["criteria"] = "buff.decimating_bolt.up",
								["action"] = "drain_soul",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "drain_soul",
								["criteria"] = "talent.shadow_embrace.enabled & debuff.shadow_embrace.remains < 3 || debuff.shadow_embrace.stack < 3",
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
							}, -- [31]
							{
								["interrupt_if"] = "buff.decimating_bolt.down&(!talent.shadow_embrace.enabled||debuff.shadow_embrace.stack>=3&debuff.shadow_embrace.remains>3)",
								["action"] = "drain_soul",
								["enabled"] = true,
							}, -- [32]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [33]
						},
					},
					["author"] = "SimC",
				},
				["Mikko's Demo"] = {
					["source"] = "SimC",
					["date"] = 20220831.203932,
					["spec"] = 266,
					["desc"] = "Demonology Warlock\nhttps://github.com/simulationcraft/simc/\nAugust 31, 2022\n\nChanges:\n- Started Sim process",
					["profile"] = "# Priorities (actions.precombat):\n    flask/food/augmentation/summon_pet/use_item,name=tome_of_monstrous_constructions/use_item,name=soleahs_secret_technique/snapshot_stats/fleshcraft\n    variable,name=first_tyrant_time,op=set,value=12\n    variable,name=first_tyrant_time,op=add,value=action.grimoire_felguard.execute_time,if=talent.grimoire_felguard.enabled\n    variable,name=first_tyrant_time,op=add,value=action.summon_vilefiend.execute_time,if=talent.summon_vilefiend.enabled\n    variable,name=first_tyrant_time,op=add,value=gcd.max,if=talent.grimoire_felguard.enabled||talent.summon_vilefiend.enabled\n    variable,name=first_tyrant_time,op=sub,value=action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time\n    variable,name=first_tyrant_time,op=min,value=10/variable,name=in_opener,op=set,value=1\n    variable,name=use_bolt_timings,op=set,value=runeforge.shard_of_annihilation&(runeforge.balespiders_burning_core+talent.sacrificed_souls.enabled+talent.power_siphon.enabled>1)\n    use_item,name=shadowed_orb_of_torment/demonbolt\n  Priorities (actions.default):\n    variable,name=next_tyrant_cd,op=set,value=cooldown.summon_demonic_tyrant.remains_expected,if=!soulbind.field_of_blossoms||cooldown.summon_demonic_tyrant.remains_expected>cooldown.soul_rot.remains_expected\n    variable,name=next_tyrant_cd,op=set,value=cooldown.soul_rot.remains_expected,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&cooldown.summon_demonic_tyrant.remains_expected<cooldown.soul_rot.remains_expected\n    variable,name=in_opener,op=set,value=0,if=pet.demonic_tyrant.active\n    variable,name=buff_sync_cd,op=set,value=variable.next_tyrant_cd,if=!variable.use_bolt_timings&!variable.in_opener\n    variable,name=buff_sync_cd,op=set,value=12,if=!variable.use_bolt_timings&variable.in_opener&!pet.dreadstalker.active\n    variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&variable.in_opener&pet.dreadstalker.active&buff.wild_imps.stack>0&!talent.vilefiend.enabled\n    variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&variable.in_opener&pet.dreadstalker.active&prev_gcd.1.hand_of_guldan&talent.vilefiend.enabled\n    variable,name=buff_sync_cd,op=set,value=cooldown.decimating_bolt.remains_expected,if=variable.use_bolt_timings/call_action_list,name=trinkets\n    call_action_list,name=ogcd,if=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up&(!talent.power_siphon.enabled||buff.power_siphon.up))\n    implosion,if=time_to_die<2*gcd/call_action_list,name=opener,if=time<variable.first_tyrant_time/interrupt,if=target.debuff.casting.react\n    call_action_list,name=covenant_ability,if=soulbind.grove_invigoration||soulbind.field_of_blossoms||soulbind.combat_meditation||covenant.necrolord\n    potion,if=(!variable.use_bolt_timings&variable.next_tyrant_cd<gcd.max&time>variable.first_tyrant_time||soulbind.refined_palate&variable.next_tyrant_cd<38)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\n    call_action_list,name=tyrant_setup\n    demonic_strength,if=(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>9)||(pet.demonic_tyrant.active&pet.demonic_tyrant.remains<6*gcd.max)\n    call_dreadstalkers,if=variable.use_bolt_timings&cooldown.summon_demonic_tyrant.remains_expected>22\n    call_dreadstalkers,if=!variable.use_bolt_timings&(variable.next_tyrant_cd>20-5*!runeforge.wilfreds_sigil_of_superior_summoning)\n    bilescourge_bombers,if=buff.tyrant.down&variable.next_tyrant_cd>5\n    implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5\n    implosion,if=active_enemies>2&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\n    implosion,if=active_enemies>2&buff.wild_imps.stack>=6&buff.implosive_potential.remains<2&runeforge.implosive_potential\n    implosion,if=buff.wild_imps.stack>=12&talent.soul_conduit.enabled&talent.from_the_shadows.enabled&runeforge.implosive_potential&buff.tyrant.down&variable.next_tyrant_cd>5\n    grimoire_felguard,if=time_to_die<30/summon_vilefiend,if=time_to_die<28/summon_demonic_tyrant,if=time_to_die<15/hand_of_guldan,if=soul_shard=5\n    shadow_bolt,if=soul_shard<5&runeforge.balespiders_burning_core&buff.balespiders_burning_core.remains<5/doom,if=refreshable\n    hand_of_guldan,if=soul_shard>=3&(pet.dreadstalker.active||pet.demonic_tyrant.active)\n    hand_of_guldan,if=soul_shard>=1&buff.nether_portal.up&cooldown.call_dreadstalkers.remains>2*gcd.max\n    hand_of_guldan,if=soul_shard>=1&variable.next_tyrant_cd<gcd.max&time>variable.first_tyrant_time-gcd.max\n    call_action_list,name=covenant_ability,if=!covenant.venthyr/soul_strike,if=!talent.sacrificed_souls.enabled\n    power_siphon,if=!variable.use_bolt_timings&buff.wild_imps.stack>1&buff.demonic_core.stack<3\n    power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up&buff.shard_of_annihilation.stack<3\n    demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd>20\n    demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd<12\n    demonbolt,if=buff.demonic_core.react&soul_shard<4&(buff.demonic_core.stack>2||talent.sacrificed_souls.enabled)\n    power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up\n    demonbolt,if=set_bonus.tier28_2pc&soul_shard<4&((6-soul_shard)*action.shadow_bolt.execute_time>pet.dreadstalker.remains-action.hand_of_guldan.execute_time-action.demonbolt.execute_time)&buff.demonic_core.stack>=1\n    demonbolt,if=buff.demonic_core.react&soul_shard<4&active_enemies>1/soul_strike/call_action_list,name=covenant_ability\n    hand_of_guldan,if=soul_shard>=3&variable.next_tyrant_cd>25&(talent.demonic_calling.enabled||cooldown.call_dreadstalkers.remains>((5-soul_shard)*action.shadow_bolt.execute_time)+action.hand_of_guldan.execute_time)\n    doom,cycle_targets=1,if=refreshable&time>variable.first_tyrant_time/shadow_bolt\n\n#   Priorities (actions.covenant_ability):\n    soul_rot,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&pet.demonic_tyrant.active\n    soul_rot,if=soulbind.grove_invigoration&!runeforge.decaying_soul_satchel&(variable.next_tyrant_cd<20||variable.next_tyrant_cd>30)\n    soul_rot,if=soulbind.wild_hunt_tactics&!runeforge.decaying_soul_satchel&!pet.demonic_tyrant.active&variable.next_tyrant_cd>18\n    decimating_bolt,target_if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.lead_by_example&(pet.demonic_tyrant.active&soul_shard<2||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\n    decimating_bolt,target_if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.kevins_oozeling&(pet.demonic_tyrant.active||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\n    decimating_bolt,target_if=min:target.health.pct,if=!variable.use_bolt_timings&(soulbind.forgeborne_reveries||(soulbind.volatile_solvent&!soulbind.kevins_oozeling))&!pet.demonic_tyrant.active\n    decimating_bolt,target_if=min:target.health.pct,if=variable.use_bolt_timings&(!talent.power_siphon||cooldown.power_siphon.remains<action.decimating_bolt.execute_time)&!cooldown.summon_demonic_tyrant.up&(pet.demonic_tyrant.remains<8||cooldown.summon_demonic_tyrant.remains_expected<30)\n    fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent_humanoid.down,cancel_if=buff.volatile_solvent_humanoid.up\n    scouring_tithe,if=soulbind.combat_meditation&pet.demonic_tyrant.active/scouring_tithe,if=!soulbind.combat_meditation\n    impending_catastrophe,if=pet.demonic_tyrant.active&soul_shard=0\n\n#   Priorities (actions.opener):\n    soul_rot,if=soulbind.grove_invigoration,if=!runeforge.decaying_soul_satchel/nether_portal/grimoire_felguard/summon_vilefiend\n    shadow_bolt,if=soul_shard<5&cooldown.call_dreadstalkers.up\n    shadow_bolt,if=variable.use_bolt_timings&soul_shard<5&buff.balespiders_burning_core.stack<4/call_dreadstalkers\n\n#   Priorities (actions.trinkets):\n    variable,name=use_buff_trinkets,value=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\n    use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\n    use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.demonic_tyrant.active\n    use_item,name=shadowed_orb_of_torment,if=variable.buff_sync_cd<22\n    use_item,name=moonlit_prism,if=variable.use_bolt_timings&pet.demonic_tyrant.active/use_item,name=grim_eclipse,if=variable.buff_sync_cd<7\n    call_action_list,name=hp_trinks,if=talent.demonic_consumption.enabled&variable.next_tyrant_cd<20/call_action_list,name=slow_trinkets\n    use_item,name=overflowing_anima_cage,if=variable.use_buff_trinkets\n    use_item,slot=trinket1,if=trinket.1.has_use_buff&variable.use_buff_trinkets\n    use_item,slot=trinket2,if=trinket.2.has_use_buff&variable.use_buff_trinkets\n    call_action_list,name=pure_damage_trinks,if=time>variable.first_tyrant_time&variable.buff_sync_cd>20\n\n #  Priorities (actions.tyrant_setup):\n    nether_portal,if=variable.next_tyrant_cd<15\n    grimoire_felguard,if=variable.next_tyrant_cd<17-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)&(cooldown.call_dreadstalkers.remains<17-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time+action.shadow_bolt.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time)\n    summon_vilefiend,if=(variable.next_tyrant_cd<15-(action.summon_demonic_tyrant.execute_time)&(cooldown.call_dreadstalkers.remains<15-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time))||(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>40)\n    call_dreadstalkers,if=variable.next_tyrant_cd<12-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)\n    summon_demonic_tyrant,if=time>variable.first_tyrant_time&(pet.dreadstalker.active&pet.dreadstalker.remains>action.summon_demonic_tyrant.execute_time)&(!talent.summon_vilefiend.enabled||pet.vilefiend.active)&(soul_shard=0||(pet.dreadstalker.active&pet.dreadstalker.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(pet.vilefiend.active&pet.vilefiend.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(buff.grimoire_felguard.up&buff.grimoire_felguard.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time))",
					["version"] = 20220821,
					["warnings"] = "This profile is missing support for generic trinkets.  It is recommended that every priority includes either:\n - [Use Items], which includes any trinkets not explicitly included in the priority; or\n - [Trinket 1] and [Trinket 2], which will recommend the trinket for the numbered slot.\nNo action lists were imported from this profile.\n",
					["basedOn"] = "Demonology",
					["author"] = "",
				},
				["Enhancement"] = {
					["source"] = "SimC",
					["builtIn"] = true,
					["date"] = 20220820,
					["spec"] = 263,
					["desc"] = "Enhancement Shaman\nAugust 20, 2022",
					["lists"] = {
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "chain_harvest",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.doom_winds.equipped & buff.doom_winds.up",
								["action"] = "crash_lightning",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.doom_winds.equipped & buff.doom_winds.up",
								["action"] = "sundering",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.raging_vesper_vortex.equipped & talent.earth_shield.enabled & vesper_totem_heal_charges > 0",
								["action"] = "healing_stream_totem",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.raging_vesper_vortex.equipped & talent.earth_shield.enabled & vesper_totem_heal_charges > 0",
								["action"] = "earth_shield",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock >= 6 || ( active_dot.flame_shock >= 4 & active_dot.flame_shock >= cycle_enemies )",
								["action"] = "fire_nova",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! buff.primordial_wave.up",
								["action"] = "primordial_wave",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.deeply_rooted_elements.equipped & buff.crash_lightning.up",
								["action"] = "windstrike",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.deeply_rooted_elements.equipped & buff.crash_lightning.up",
								["action"] = "stormstrike",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "dot.flame_shock.ticking & ( active_dot.flame_shock < cycle_enemies & active_dot.flame_shock < 6 )",
								["action"] = "lava_lash",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! ticking",
								["action"] = "flame_shock",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! talent.hailstorm.enabled & active_dot.flame_shock < cycle_enemies & active_dot.flame_shock < 6",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( active_dot.flame_shock >= cycle_enemies || active_dot.flame_shock >= 4 ) & buff.primordial_wave.up & buff.maelstrom_weapon.stack >= 5 & ( ! buff.splintered_elements.up || fight_remains <= 12 || raid_event.adds.remains <= gcd )",
								["action"] = "lightning_bolt",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.hailstorm.up",
								["action"] = "frost_shock",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || runeforge.seeds_of_rampant_growth.equipped",
								["action"] = "fae_transfusion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.down & buff.primordial_wave.up & buff.maelstrom_weapon.stack < 5",
								["action"] = "crash_lightning",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.primordial_wave.up & buff.maelstrom_weapon.stack < 5",
								["action"] = "sundering",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.primordial_wave.up & buff.maelstrom_weapon.stack < 5",
								["action"] = "stormstrike",
							}, -- [18]
							{
								["action"] = "sundering",
								["enabled"] = true,
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock >= 4",
								["action"] = "fire_nova",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "talent.crashing_storm.enabled || buff.crash_lightning.down",
								["action"] = "crash_lightning",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "talent.lashing_flames.enabled",
								["action"] = "lava_lash",
								["cycle_targets"] = 1,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock >= 3",
								["action"] = "fire_nova",
							}, -- [23]
							{
								["action"] = "vesper_totem",
								["enabled"] = true,
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.stormkeeper.up",
								["action"] = "chain_lightning",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up",
								["action"] = "lava_lash",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "elemental_blast",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "stormkeeper",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack = 10",
								["action"] = "chain_lightning",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.crash_lightning.up",
								["action"] = "stormstrike",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock >= 2",
								["action"] = "fire_nova",
							}, -- [31]
							{
								["action"] = "crash_lightning",
								["enabled"] = true,
							}, -- [32]
							{
								["action"] = "windstrike",
								["enabled"] = true,
							}, -- [33]
							{
								["action"] = "stormstrike",
								["enabled"] = true,
							}, -- [34]
							{
								["enabled"] = true,
								["interrupt"] = "1",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "flame_shock",
								["cycle_targets"] = 1,
							}, -- [36]
							{
								["action"] = "fae_transfusion",
								["enabled"] = true,
							}, -- [37]
							{
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "chain_lightning",
							}, -- [39]
							{
								["action"] = "earthen_spike",
								["enabled"] = true,
							}, -- [40]
							{
								["action"] = "earth_elemental",
								["enabled"] = true,
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "buff.windfury_totem.remains < 30",
								["action"] = "windfury_totem",
							}, -- [42]
						},
						["single"] = {
							{
								["action"] = "windstrike",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_hand.up || ( runeforge.primal_lava_actuators.equipped & buff.primal_lava_actuators.stack > 6 )",
								["action"] = "lava_lash",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! buff.windfury_totem.up",
								["action"] = "windfury_totem",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.doom_winds.equipped & buff.doom_winds.up",
								["action"] = "stormstrike",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.doom_winds.equipped & buff.doom_winds.up",
								["action"] = "crash_lightning",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.doom_winds.equipped & buff.doom_winds.up",
								["action"] = "ice_strike",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.doom_winds.equipped & buff.doom_winds.up",
								["action"] = "sundering",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.primordial_wave.down & ( raid_event.adds.in > 42 || raid_event.adds.in < 6 )",
								["action"] = "primordial_wave",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! ticking",
								["action"] = "flame_shock",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.up & raid_event.adds.in > buff.primordial_wave.remains & ( ! buff.splintered_elements.up || fight_remains <= 12 )",
								["action"] = "lightning_bolt",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in > 40",
								["action"] = "vesper_totem",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.hailstorm.up",
								["action"] = "frost_shock",
							}, -- [12]
							{
								["action"] = "earthen_spike",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "dot.flame_shock.refreshable",
								["action"] = "lava_lash",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.seeds_of_rampant_growth.equipped || cooldown.feral_spirit.remains > 30",
								["action"] = "fae_transfusion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "talent.stormflurry.enabled & buff.stormbringer.up",
								["action"] = "stormstrike",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.stormkeeper.up",
								["action"] = "chain_lightning",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "elemental_blast",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.raging_vesper_vortex.equipped & talent.earth_shield.enabled & ( vesper_totem_heal_charges > 1 || ( vesper_totem_heal_charges > 0 & raid_event.adds.in > ( buff.vesper_totem.remains - 3 ) ) )",
								["action"] = "healing_stream_totem",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.raging_vesper_vortex.equipped & talent.earth_shield.enabled & ( vesper_totem_heal_charges > 1 || ( vesper_totem_heal_charges > 0 & raid_event.adds.in > ( buff.vesper_totem.remains - 3 ) ) )",
								["action"] = "earth_shield",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5 & raid_event.adds.in >= 90",
								["action"] = "chain_harvest",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack = 10 & buff.primordial_wave.down",
								["action"] = "lightning_bolt",
							}, -- [22]
							{
								["action"] = "stormstrike",
								["enabled"] = true,
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5",
								["action"] = "stormkeeper",
							}, -- [24]
							{
								["enabled"] = true,
								["interrupt"] = "1",
								["criteria"] = "soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.windfury_totem.remains < 10",
								["action"] = "windfury_totem",
							}, -- [26]
							{
								["action"] = "lava_lash",
								["enabled"] = true,
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.maelstrom_weapon.stack >= 5 & buff.primordial_wave.down",
								["action"] = "lightning_bolt",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in >= 40",
								["action"] = "sundering",
							}, -- [29]
							{
								["action"] = "frost_shock",
								["enabled"] = true,
							}, -- [30]
							{
								["action"] = "crash_lightning",
								["enabled"] = true,
							}, -- [31]
							{
								["action"] = "ice_strike",
								["enabled"] = true,
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "active_dot.flame_shock",
								["action"] = "fire_nova",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled",
								["action"] = "fleshcraft",
							}, -- [34]
							{
								["action"] = "earth_elemental",
								["enabled"] = true,
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "settings.filler_shock",
								["action"] = "flame_shock",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "buff.windfury_totem.remains < 30",
								["action"] = "windfury_totem",
							}, -- [37]
						},
						["default"] = {
							{
								["action"] = "bloodlust",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "In-combat potion is before combat ends.",
								["action"] = "potion",
								["criteria"] = "( talent.ascendance.enabled & raid_event.adds.in >= 90 & cooldown.ascendance.remains < 10 ) || ( talent.hot_hand.enabled & buff.molten_weapon.up ) || buff.icy_edge.up || ( talent.stormflurry.enabled & buff.crackling_surge.up ) || debuff.earthen_spike.up || active_enemies > 1 || boss & fight_remains < 30",
							}, -- [2]
							{
								["enabled"] = true,
								["description"] = "Interrupt",
								["action"] = "wind_shear",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( talent.ascendance.enabled & raid_event.adds.in >= 90 & cooldown.ascendance.remains < 10 ) || ( talent.hot_hand.enabled & buff.molten_weapon.up ) || buff.icy_edge.up || ( talent.stormflurry.enabled & buff.crackling_surge.up ) || debuff.earthen_spike.up || active_enemies > 1 || fight_remains < 30",
								["name"] = "the_first_sigil",
								["action"] = "the_first_sigil",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.acquired_sword.up || fight_remains < 25",
								["name"] = "cache_of_acquired_treasures",
								["action"] = "cache_of_acquired_treasures",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up || fight_remains < 31 || raid_event.adds.in < 16 || active_enemies > 1",
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! variable.trinket1_is_weird",
								["action"] = "trinket1",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! variable.trinket2_is_weird",
								["action"] = "trinket2",
							}, -- [8]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "blood_fury",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up",
								["action"] = "berserking",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "fireblood",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || buff.ascendance.up || cooldown.ascendance.remains > 50",
								["action"] = "ancestral_call",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.ascendance.enabled || ! buff.ascendance.up",
								["action"] = "bag_of_tricks",
							}, -- [14]
							{
								["action"] = "feral_spirit",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "( talent.ascendance.enabled || runeforge.doom_winds.equipped ) & ( soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || active_enemies = 1 )",
								["action"] = "fae_transfusion",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "raid_event.adds.in >= 90 || active_enemies > 1",
								["action"] = "ascendance",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.doom_winds.equipped & buff.doom_winds_debuff.down & ( raid_event.adds.in >= 60 || active_enemies > 1 ) || buff.windfury_totem.down & ( ! runeforge.doom_winds.equipped || buff.doom_winds_debuff.up )",
								["action"] = "windfury_totem",
								["line_cd"] = "15",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "If only one enemy, priority follows the 'single' action list.",
								["strict"] = 1,
								["criteria"] = "active_enemies = 1",
								["list_name"] = "single",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "On multiple enemies, the priority follows the 'aoe' action list.",
								["strict"] = 1,
								["criteria"] = "active_enemies > 1",
								["list_name"] = "aoe",
							}, -- [20]
							{
								["action"] = "counterstrike_totem",
								["enabled"] = true,
							}, -- [21]
							{
								["action"] = "skyfury_totem",
								["enabled"] = true,
							}, -- [22]
							{
								["action"] = "primal_strike",
								["enabled"] = true,
							}, -- [23]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.windfury_weapon.remains < 300",
								["action"] = "windfury_weapon",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.flametongue_weapon.remains < 300",
								["action"] = "flametongue_weapon",
							}, -- [2]
							{
								["action"] = "bottled_flayedwing_toxin",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.lightning_shield.remains < 300",
								["action"] = "lightning_shield",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.stormkeeper.enabled",
								["action"] = "stormkeeper",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.doom_winds.equipped & buff.windfury_totem.down",
								["action"] = "windfury_totem",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["action"] = "fleshcraft",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t1.is.the_first_sigil || trinket.t1.is.scars_of_fraternal_strife || trinket.t1.is.cache_of_acquired_treasures",
								["var_name"] = "trinket1_is_weird",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "trinket.t2.is.the_first_sigil || trinket.t2.is.scars_of_fraternal_strife || trinket.t2.is.cache_of_acquired_treasures",
								["var_name"] = "trinket2_is_weird",
							}, -- [9]
						},
					},
					["version"] = 20220820,
					["warnings"] = "WARNING:  The import for 'aoe' required some automated changes.\nLine 15: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 35: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'single' required some automated changes.\nLine 25: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 34: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 16: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 7: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 7: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 8: Converted 'trinket.1.X' to 'trinket.t1.X' (3x).\nLine 9: Converted 'trinket.2.X' to 'trinket.t2.X' (3x).\n\nImported 4 action lists.\n",
					["author"] = "SimC",
					["profile"] = "## Enhancement Shaman\n## August 20, 2022\n\nactions.precombat=windfury_weapon,if=buff.windfury_weapon.remains<300\nactions.precombat+=/flametongue_weapon,if=buff.flametongue_weapon.remains<300\nactions.precombat+=/bottled_flayedwing_toxin\nactions.precombat+=/lightning_shield,if=buff.lightning_shield.remains<300\nactions.precombat+=/stormkeeper,if=talent.stormkeeper.enabled\nactions.precombat+=/windfury_totem,if=!runeforge.doom_winds.equipped&buff.windfury_totem.down\nactions.precombat+=/fleshcraft,if=soulbind.pustule_eruption||soulbind.volatile_solvent\nactions.precombat+=/variable,name=trinket1_is_weird,value=trinket.1.is.the_first_sigil||trinket.1.is.scars_of_fraternal_strife||trinket.1.is.cache_of_acquired_treasures\nactions.precombat+=/variable,name=trinket2_is_weird,value=trinket.2.is.the_first_sigil||trinket.2.is.scars_of_fraternal_strife||trinket.2.is.cache_of_acquired_treasures\n\n## Executed every time the actor is available.\nactions=bloodlust\n# In-combat potion is before combat ends.\nactions+=/potion,if=(talent.ascendance.enabled&raid_event.adds.in>=90&cooldown.ascendance.remains<10)||(talent.hot_hand.enabled&buff.molten_weapon.up)||buff.icy_edge.up||(talent.stormflurry.enabled&buff.crackling_surge.up)||debuff.earthen_spike.up||active_enemies>1||boss&fight_remains<30\n# Interrupt\nactions+=/wind_shear\nactions+=/use_item,name=the_first_sigil,if=(talent.ascendance.enabled&raid_event.adds.in>=90&cooldown.ascendance.remains<10)||(talent.hot_hand.enabled&buff.molten_weapon.up)||buff.icy_edge.up||(talent.stormflurry.enabled&buff.crackling_surge.up)||debuff.earthen_spike.up||active_enemies>1||fight_remains<30\nactions+=/use_item,name=cache_of_acquired_treasures,if=buff.acquired_sword.up||fight_remains<25\nactions+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up||fight_remains<31||raid_event.adds.in<16||active_enemies>1\nactions+=/trinket1,if=!variable.trinket1_is_weird\nactions+=/trinket2,if=!variable.trinket2_is_weird\nactions+=/use_items\nactions+=/blood_fury,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/berserking,if=!talent.ascendance.enabled||buff.ascendance.up\nactions+=/fireblood,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/ancestral_call,if=!talent.ascendance.enabled||buff.ascendance.up||cooldown.ascendance.remains>50\nactions+=/bag_of_tricks,if=!talent.ascendance.enabled||!buff.ascendance.up\nactions+=/feral_spirit\nactions+=/fae_transfusion,if=(talent.ascendance.enabled||runeforge.doom_winds.equipped)&(soulbind.grove_invigoration||soulbind.field_of_blossoms||active_enemies=1)\nactions+=/ascendance,if=raid_event.adds.in>=90||active_enemies>1\nactions+=/windfury_totem,line_cd=15,if=runeforge.doom_winds.equipped&buff.doom_winds_debuff.down&(raid_event.adds.in>=60||active_enemies>1)||buff.windfury_totem.down&(!runeforge.doom_winds.equipped||buff.doom_winds_debuff.up)\n# If only one enemy, priority follows the 'single' action list.\nactions+=/call_action_list,name=single,strict=1,if=active_enemies=1\n# On multiple enemies, the priority follows the 'aoe' action list.\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>1\nactions+=/counterstrike_totem\nactions+=/skyfury_totem\nactions+=/primal_strike\n\n## Multi target action priority list\nactions.aoe=chain_harvest,if=buff.maelstrom_weapon.stack>=5\nactions.aoe+=/crash_lightning,if=runeforge.doom_winds.equipped&buff.doom_winds.up\nactions.aoe+=/sundering,if=runeforge.doom_winds.equipped&buff.doom_winds.up\nactions.aoe+=/healing_stream_totem,if=runeforge.raging_vesper_vortex.equipped&talent.earth_shield.enabled&vesper_totem_heal_charges>0\nactions.aoe+=/earth_shield,if=runeforge.raging_vesper_vortex.equipped&talent.earth_shield.enabled&vesper_totem_heal_charges>0\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=6||(active_dot.flame_shock>=4&active_dot.flame_shock>=cycle_enemies)\nactions.aoe+=/primordial_wave,cycle_targets=1,if=!buff.primordial_wave.up\nactions.aoe+=/windstrike,if=runeforge.deeply_rooted_elements.equipped&buff.crash_lightning.up\nactions.aoe+=/stormstrike,if=runeforge.deeply_rooted_elements.equipped&buff.crash_lightning.up\nactions.aoe+=/lava_lash,cycle_targets=1,if=dot.flame_shock.ticking&(active_dot.flame_shock<cycle_enemies&active_dot.flame_shock<6)\nactions.aoe+=/flame_shock,if=!ticking\nactions.aoe+=/flame_shock,cycle_targets=1,if=!talent.hailstorm.enabled&active_dot.flame_shock<cycle_enemies&active_dot.flame_shock<6\nactions.aoe+=/lightning_bolt,if=(active_dot.flame_shock>=cycle_enemies||active_dot.flame_shock>=4)&buff.primordial_wave.up&buff.maelstrom_weapon.stack>=5&(!buff.splintered_elements.up||fight_remains<=12||raid_event.adds.remains<=gcd)\nactions.aoe+=/frost_shock,if=buff.hailstorm.up\nactions.aoe+=/fae_transfusion,if=soulbind.grove_invigoration||soulbind.field_of_blossoms||runeforge.seeds_of_rampant_growth.equipped\nactions.aoe+=/crash_lightning,if=buff.crash_lightning.down&buff.primordial_wave.up&buff.maelstrom_weapon.stack<5\nactions.aoe+=/sundering,if=buff.primordial_wave.up&buff.maelstrom_weapon.stack<5\nactions.aoe+=/stormstrike,if=buff.primordial_wave.up&buff.maelstrom_weapon.stack<5\nactions.aoe+=/sundering\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=4\nactions.aoe+=/crash_lightning,if=talent.crashing_storm.enabled||buff.crash_lightning.down\nactions.aoe+=/lava_lash,cycle_targets=1,if=talent.lashing_flames.enabled\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=3\nactions.aoe+=/vesper_totem\nactions.aoe+=/chain_lightning,if=buff.stormkeeper.up\nactions.aoe+=/lava_lash,if=buff.crash_lightning.up\nactions.aoe+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5\nactions.aoe+=/stormkeeper,if=buff.maelstrom_weapon.stack>=5\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack=10\nactions.aoe+=/stormstrike,if=buff.crash_lightning.up\nactions.aoe+=/fire_nova,if=active_dot.flame_shock>=2\nactions.aoe+=/crash_lightning\nactions.aoe+=/windstrike\nactions.aoe+=/stormstrike\nactions.aoe+=/fleshcraft,interrupt=1,if=soulbind.volatile_solvent\nactions.aoe+=/flame_shock,cycle_targets=1,if=refreshable\nactions.aoe+=/fae_transfusion\nactions.aoe+=/frost_shock\nactions.aoe+=/chain_lightning,if=buff.maelstrom_weapon.stack>=5\nactions.aoe+=/earthen_spike\nactions.aoe+=/earth_elemental\nactions.aoe+=/windfury_totem,if=buff.windfury_totem.remains<30\n\n## Single target action priority list\nactions.single=windstrike\nactions.single+=/lava_lash,if=buff.hot_hand.up||(runeforge.primal_lava_actuators.equipped&buff.primal_lava_actuators.stack>6)\nactions.single+=/windfury_totem,if=!buff.windfury_totem.up\nactions.single+=/stormstrike,if=runeforge.doom_winds.equipped&buff.doom_winds.up\nactions.single+=/crash_lightning,if=runeforge.doom_winds.equipped&buff.doom_winds.up\nactions.single+=/ice_strike,if=runeforge.doom_winds.equipped&buff.doom_winds.up\nactions.single+=/sundering,if=runeforge.doom_winds.equipped&buff.doom_winds.up\nactions.single+=/primordial_wave,if=buff.primordial_wave.down&(raid_event.adds.in>42||raid_event.adds.in<6)\nactions.single+=/flame_shock,if=!ticking\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.primordial_wave.up&raid_event.adds.in>buff.primordial_wave.remains&(!buff.splintered_elements.up||fight_remains<=12)\nactions.single+=/vesper_totem,if=raid_event.adds.in>40\nactions.single+=/frost_shock,if=buff.hailstorm.up\nactions.single+=/earthen_spike\nactions.single+=/lava_lash,if=dot.flame_shock.refreshable\nactions.single+=/fae_transfusion,if=!runeforge.seeds_of_rampant_growth.equipped||cooldown.feral_spirit.remains>30\nactions.single+=/stormstrike,if=talent.stormflurry.enabled&buff.stormbringer.up\nactions.single+=/chain_lightning,if=buff.stormkeeper.up\nactions.single+=/elemental_blast,if=buff.maelstrom_weapon.stack>=5\nactions.single+=/healing_stream_totem,if=runeforge.raging_vesper_vortex.equipped&talent.earth_shield.enabled&(vesper_totem_heal_charges>1||(vesper_totem_heal_charges>0&raid_event.adds.in>(buff.vesper_totem.remains-3)))\nactions.single+=/earth_shield,if=runeforge.raging_vesper_vortex.equipped&talent.earth_shield.enabled&(vesper_totem_heal_charges>1||(vesper_totem_heal_charges>0&raid_event.adds.in>(buff.vesper_totem.remains-3)))\nactions.single+=/chain_harvest,if=buff.maelstrom_weapon.stack>=5&raid_event.adds.in>=90\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack=10&buff.primordial_wave.down\nactions.single+=/stormstrike\nactions.single+=/stormkeeper,if=buff.maelstrom_weapon.stack>=5\nactions.single+=/fleshcraft,interrupt=1,if=soulbind.volatile_solvent\nactions.single+=/windfury_totem,if=buff.windfury_totem.remains<10\nactions.single+=/lava_lash\nactions.single+=/lightning_bolt,if=buff.maelstrom_weapon.stack>=5&buff.primordial_wave.down\nactions.single+=/sundering,if=raid_event.adds.in>=40\nactions.single+=/frost_shock\nactions.single+=/crash_lightning\nactions.single+=/ice_strike\nactions.single+=/fire_nova,if=active_dot.flame_shock\nactions.single+=/fleshcraft,if=soulbind.pustule_eruption\nactions.single+=/earth_elemental\nactions.single+=/flame_shock,if=settings.filler_shock\nactions.single+=/windfury_totem,if=buff.windfury_totem.remains<30",
				},
				["Balance"] = {
					["source"] = "https://balance-simc.github.io/Balance-SimC/md.html?file=balance.txt",
					["builtIn"] = true,
					["date"] = 20220820,
					["author"] = "SimC",
					["desc"] = "Balance Druid\nAugust 20, 2022\n\nChanges:\n- Added Solar Beam.\n- Changed target_if cases to cycle_targets.\n- Removed unnecessary variables (i.e., prev_starsurge -> prev.starsurge).\n- Avoid precasting Wrath if it's the wrong Eclipse.\n- Make Convoke the Spirits a little more flexible (if you hadn't hit it simultaneously with BOAT + Celestial Alignment, it'd skip).\n- Make most 'fight_remains' scenarios apply to boss fights only.\n- Treat Tome of Blah Blah Blah as a special trinket.\n- Opener (i.e., Wrath, Wrath, Starfire) made more resilient to earlier combat-start.\n- Fix Kindred Empowerment check for CD usage.\n- Remove druid.no_cds checks.\n\nAnnotated Balance APL can be found at https://balance-simc.github.io/Balance-SimC/md.html?file=balance.txt",
					["lists"] = {
						["opener"] = {
							{
								["enabled"] = true,
								["description"] = "Precast 2 Wrath and a Starsurge on ST with Night Fae and BoAT or Starfire otherwise",
								["criteria"] = "( eclipse.lunar_next || eclipse.in_solar || eclipse.in_both || eclipse.any_next ) & prev.1.wrath & ! prev.2.wrath",
								["action"] = "wrath",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( ( ! runeforge.balance_of_all_things.enabled || ! covenant.night_fae || ! spell_targets.starfall = 1 || ! talent.natures_balance.enabled ) || ( eclipse.solar_next || eclipse.in_lunar || eclipse.in_both || eclipse.any_next ) ) & ! set_bonus.tier28_2pc",
								["action"] = "starfire",
								["line_cd"] = "5",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( runeforge.balance_of_all_things.enabled & covenant.night_fae & spell_targets.starfall = 1 ) & ! set_bonus.tier28_2pc",
								["action"] = "starsurge",
								["line_cd"] = "5",
							}, -- [3]
						},
						["default"] = {
							{
								["action"] = "solar_beam",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "time < ( 2 * action.wrath.cast_time + action.starfire.cast_time )",
								["list_name"] = "opener",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.starfall > 1 & ( ! talent.starlord.enabled || talent.stellar_drift.enabled ) || spell_targets.starfall > 2",
								["var_name"] = "is_aoe",
								["description"] = "Sets AoE on 3+ without drift and with Starlord and 2+ otherwise",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.starfire > 1",
								["var_name"] = "is_cleave",
								["description"] = "Sets cleave when Starfire can hit 2+ targets which is relevant for the Eclipse to be preferred and which filler to cast",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "prev_gcd.1.moonfire || prev_gcd.1.sunfire || prev_gcd.1.starsurge || prev_gcd.1.starfall || prev_gcd.1.fury_of_elune || prev.ravenous_frenzy || buff.ca_inc.remains = buff.ca_inc.duration || variable.is_aoe",
								["var_name"] = "in_gcd",
								["description"] = "Variable that checks if you are in a gcd to avoid the situation where a trinket etc is used in between casts",
							}, -- [5]
							{
								["enabled"] = true,
								["description"] = "Use Berserking at the end of Frenzy when haste is above 60%, after Convoke with BoaT and otherwise with CA/Inc",
								["criteria"] = "( ( ! covenant.night_fae || ! cooldown.convoke_the_spirits.up || ! runeforge.balance_of_all_things.enabled ) & buff.ca_inc.remains > 15 & ! covenant.venthyr || covenant.venthyr & buff.ca_inc.up & buff.ravenous_frenzy.up & ( buff.ravenous_frenzy.remains <= 12 - 4 * runeforge.sinful_hysteria.enabled || buff.ca_inc.remains < 11 || 1 / spell_haste < ( 1.9 - talent.stellar_flare.enabled * 0.1 - druid.delay_berserking * 0.3 ) ) ) & variable.in_gcd",
								["action"] = "berserking",
							}, -- [6]
							{
								["enabled"] = true,
								["description"] = "Pot with a CA/Inc that isn't a Pulsar proc or when the fight is about to end",
								["action"] = "potion",
								["criteria"] = "( buff.ca_inc.remains > 15 & ( ! runeforge.sinful_hysteria.enabled || buff.ravenous_frenzy.remains < 19 & buff.ravenous_frenzy.up ) || boss & fight_remains < 25 ) & variable.in_gcd",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "ceil ( ( fight_remains - 15 - cooldown.ca_inc.remains ) / 180 ) > ceil ( ( fight_remains - 15 - cooldown.convoke_the_spirits.remains ) / 180 ) & ! raid_event.adds.exists & ( ! cooldown.ca_inc.ready || ! cooldown.convoke_the_spirits.ready ) || cooldown.ca_inc.remains > interpolated_fight_remains || runeforge.celestial_spirits.enabled & cooldown.ca_inc.remains > 30 || cooldown.convoke_the_spirits.remains > interpolated_fight_remains - 10 || ! covenant.night_fae",
								["var_name"] = "convoke_desync",
								["description"] = "Calculates whether using Convoke now will allow you to still cast the same amount of Convoke+CA/Inc casts",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( target.time_to_die > 15 || raid_event.adds.in > 50 ) & ( ! covenant.venthyr || cooldown.berserking.ready || ! race.troll ) & ( ! talent.fury_of_elune.enabled || covenant.venthyr & cooldown.fury_of_elune.remains < 11 + 5 * runeforge.sinful_hysteria.enabled || ! covenant.venthyr & cooldown.fury_of_elune.remains < buff.ca_inc.duration + 12 * runeforge.primordial_arcanic_pulsar.enabled - 12 ) & ( ( equipped.empyreal_ordnance & ( ! covenant.venthyr || cooldown.empyreal_ordnance.remains < 167 + ( 5 * runeforge.sinful_hysteria.enabled ) ) & ! cooldown.empyreal_ordnance.ready ) || equipped.soulletting_ruby & ( ! covenant.night_fae || cooldown.soulletting_ruby_345801.remains < 114 ) || equipped.inscrutable_quantum_device & cooldown.inscrutable_quantum_device.ready || cooldown.tormented_insight_355321.remains > 40 || ( equipped.the_first_sigil & ( cooldown.the_first_sigil_367241.remains < 20 || fight_remains > cooldown.ca_inc.duration + 20 ) ) || ( ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & ( trinket.t1.ready_cooldown || trinket.t1.cooldown.remains > interpolated_fight_remains - 10 ) || variable.on_use_trinket = 2 & ( trinket.t2.ready_cooldown || trinket.t2.cooldown.remains > interpolated_fight_remains - 10 ) || variable.on_use_trinket = 0 ) )",
								["var_name"] = "cd_condition",
								["description"] = "Used to delay the usage of CA/Inc when using double on use and prevent usage when an add event is about to die",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! soulbind.thrill_seeker.enabled || fight_remains > 200 || boss & fight_remains < 25 + ( 40 - buff.thrill_seeker.stack * 2 ) || buff.thrill_seeker.stack > 38 - ( runeforge.sinful_hysteria.enabled * 2 )",
								["var_name"] = "thrill_seeker_wait",
								["description"] = "Variable used to delay any trinkets and cds when waiting for an Euphoria proc",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "cooldown.ca_inc.remains < 20 & cooldown.convoke_the_spirits.remains < 20 & ( variable.thrill_seeker_wait || buff.thrill_seeker.stack > 30 + ( runeforge.sinful_hysteria.enabled * 3 ) ) & variable.in_gcd || boss & fight_remains < 37",
								["description"] = "Use Empyreal Ordnance 20secs before a CA/Inc use or so that it will line up with the end of Frenzy",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( cooldown.ca_inc.remains < 6 & ! covenant.venthyr & ! covenant.night_fae || covenant.night_fae & cooldown.convoke_the_spirits.remains < 6 & ( variable.convoke_desync || cooldown.ca_inc.remains < 6 ) || covenant.venthyr & ( ! runeforge.sinful_hysteria.enabled & cooldown.ca_inc.remains < 6 || buff.ravenous_frenzy.remains < 10 + ( 5 * equipped.instructors_divine_bell ) & buff.ravenous_frenzy.up ) || boss & fight_remains < 25 || equipped.empyreal_ordnance & cooldown.empyreal_ordnance.remains > 20 ) & variable.in_gcd & ! equipped.inscrutable_quantum_device || cooldown.inscrutable_quantum_device.remains > 20 || boss & fight_remains < 20",
								["description"] = "Use Soulleting Ruby 6secs before a CA/Inc use or so that it will line up with the end of Frenzy",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( ! buff.scars_of_fraternal_strife_4.up || buff.scars_of_fraternal_strife_4.up & buff.ca_inc.remains > 20 ) & ( cooldown.inscrutable_quantum_device.remains > 20 || ! equipped.inscrutable_quantum_device ) || boss & fight_remains < 33",
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [13]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "buff.ca_inc.remains > 15 & ( ! runeforge.sinful_hysteria.enabled || buff.ravenous_frenzy.remains <= 15.5 + ( 3.5 * buff.bloodlust.up ) + ( 4.5 - 3.5 * buff.bloodlust.up ) * equipped.instructors_divine_bell + 4.5 * ( equipped.the_first_sigil & cooldown.the_first_sigil_367241.remains <= 20 || equipped.scars_of_fraternal_strife & buff.scars_of_fraternal_strife_4.up ) & buff.ravenous_frenzy.up ) || boss & fight_remains < 25 || equipped.empyreal_ordnance & cooldown.empyreal_ordnance.remains",
								["var_name"] = "iqd_condition",
								["description"] = "Always use IQD with CA/Inc or at the end of Frenzy",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.iqd_condition & variable.in_gcd",
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "( ! covenant.venthyr || ( cooldown.ca_inc.ready & ( cooldown.berserking.remains < 2 || ! race.troll ) ) & variable.thrill_seeker_wait ) & ( ! covenant.night_fae || cooldown.convoke_the_spirits.remains < 20 ) & dot.sunfire.ticking & ( dot.stellar_flare.ticking || ! talent.stellar_flare.enabled || spell_targets.starfire > 3 ) & dot.moonfire.ticking & ! equipped.inscrutable_quantum_device || equipped.inscrutable_quantum_device & cooldown.inscrutable_quantum_device.remains > 30 & ! buff.ca_inc.up || boss & fight_remains < 40",
								["description"] = "Use Shadowed Orb before CA/Inc",
							}, -- [16]
							{
								["enabled"] = true,
								["description"] = "This is a rather elaborate way to make all on use stat trinkets to be lined up with CA/Inc and Convoke and use the 2nd slot on cd if both trinkets are on use stat trinkets",
								["criteria"] = "variable.on_use_trinket != 1 & ! trinket.t2.ready_cooldown || ( variable.on_use_trinket = 1 || variable.on_use_trinket = 3 ) & ( covenant.venthyr & buff.ca_inc.up & ( buff.ravenous_frenzy.remains + ( 4.5 * runeforge.sinful_hysteria.enabled ) <= trinket.t1.buff_duration & buff.ravenous_frenzy.up || buff.ravenous_frenzy_sinful_hysteria.up ) || cooldown.ca_inc.remains + 15 > trinket.t1.cooldown.duration & ( ! runeforge.primordial_arcanic_pulsar.enabled || buff.ca_inc.remains > 6 || cooldown.ca_inc.remains - trinket.t1.cooldown.duration < 15 ) & ( ! covenant.venthyr || ! buff.ravenous_frenzy.up & cooldown.ravenous_frenzy.remains ) & ( ! covenant.night_fae || trinket.t1.cooldown.duration > cooldown.convoke_the_spirits.remains || variable.convoke_desync & trinket.t1.cooldown.duration > cooldown.ca_inc.remains ) & ! covenant.kyrian || covenant.night_fae & variable.convoke_desync & cooldown.convoke_the_spirits.up & ! cooldown.ca_inc.up & ( ( buff.eclipse_lunar.remains > 5 || buff.eclipse_solar.remains > 5 ) ) || buff.kindred_empowerment_energize.up ) || boss & fight_remains < 20 || variable.on_use_trinket = 0",
								["action"] = "trinket1",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "variable.on_use_trinket != 2 & ! trinket.t1.ready_cooldown || variable.on_use_trinket = 2 & ( buff.ca_inc.up & covenant.venthyr & ( buff.ravenous_frenzy.remains + ( 4.5 * runeforge.sinful_hysteria.enabled ) <= trinket.t2.buff_duration & buff.ravenous_frenzy.up || buff.ravenous_frenzy_sinful_hysteria.up ) || cooldown.ca_inc.remains + 15 > trinket.t2.cooldown.duration & ( ! runeforge.primordial_arcanic_pulsar.enabled || buff.ca_inc.remains > 6 || cooldown.ca_inc.remains - trinket.t2.cooldown.duration < 15 ) & ( ! covenant.venthyr || ! buff.ravenous_frenzy.up & cooldown.ravenous_frenzy.remains ) & ( ! covenant.night_fae || trinket.t2.cooldown.duration > cooldown.convoke_the_spirits.remains || variable.convoke_desync & trinket.t2.cooldown.duration > cooldown.ca_inc.remains ) & ! covenant.kyrian & ( ! buff.ca_inc.up || ! covenant.venthyr ) || covenant.night_fae & variable.convoke_desync & cooldown.convoke_the_spirits.up & ! cooldown.ca_inc.up & ( ( buff.eclipse_lunar.remains > 5 || buff.eclipse_solar.remains > 5 ) ) ) || buff.kindred_empowerment_energize.up || boss & fight_remains < 20 || variable.on_use_trinket = 0",
								["action"] = "trinket2",
							}, -- [18]
							{
								["enabled"] = true,
								["description"] = "Uses all other on use items on cd",
								["action"] = "use_items",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Either go into the st or aoe action list",
								["strict"] = 1,
								["criteria"] = "variable.is_aoe",
								["list_name"] = "aoe",
							}, -- [20]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "st",
							}, -- [21]
						},
						["precombat"] = {
							{
								["action"] = "kindred_spirits",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["var_name"] = "on_use_trinket",
								["description"] = "The variable is set to 0 with no stat on use trinkets, 1 when the first one is on use, 2 if the second is and 3 if both are",
							}, -- [2]
							{
								["enabled"] = true,
								["op"] = "add",
								["action"] = "variable",
								["value"] = "1",
								["var_name"] = "on_use_trinket",
								["criteria"] = "trinket.t1.has_use_buff & trinket.t1.cooldown.duration & ! trinket.t1.is.tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "add",
								["action"] = "variable",
								["value"] = "2",
								["var_name"] = "on_use_trinket",
								["criteria"] = "trinket.t2.has_use_buff & trinket.t2.cooldown.duration & ! trinket.t2.is.tome_of_monstrous_constructions",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "add",
								["action"] = "variable",
								["var_name"] = "on_use_trinket",
								["value"] = "4",
								["description"] = "These trinkets are not automatically detected as on use stat trinkets.  Set variable to 4 as they also need special handling.",
								["criteria"] = "equipped.inscrutable_quantum_device || equipped.empyreal_ordnance || equipped.soulletting_ruby",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "30 * ( 1 - 0.15 * set_bonus.tier28_4pc )",
								["var_name"] = "ss_cost",
								["description"] = "Sets the Starsurge cost for later calculations (for example when to start dumping before Frenzy falls off)",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "50 * ( 1 - 0.15 * set_bonus.tier28_4pc )",
								["var_name"] = "sf_cost",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "30 + 10 * runeforge.celestial_spirits.enabled",
								["var_name"] = "convoke_asp",
								["description"] = "Sets at which amount of AsP Convoke should be used: 40 without Celestial Spirits and 30 with.",
							}, -- [8]
							{
								["action"] = "moonkin_form",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( eclipse.lunar_next || eclipse.in_solar || eclipse.in_both || eclipse.any_next )",
								["action"] = "wrath",
								["line_cd"] = "10",
							}, -- [10]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "runeforge.timeworn_dreambinder.enabled & ( buff.timeworn_dreambinder.remains < gcd.max + 0.1 || buff.timeworn_dreambinder.remains < action.starfire.execute_time + 0.1 & ( eclipse.in_lunar || eclipse.solar_next || eclipse.any_next ) ) & buff.timeworn_dreambinder.up",
								["var_name"] = "dream_will_fall_off",
								["description"] = "Calculates whether the Dreamcatcher buff will fall off within the next cast",
							}, -- [1]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! eclipse.in_solar & spell_targets.starfire > 7 - talent.soul_of_the_forest.enabled * 2 + eclipse.in_both & ! runeforge.primordial_arcanic_pulsar.enabled & ! runeforge.oneths_clear_vision.enabled",
								["var_name"] = "ignore_starsurge",
								["description"] = "Calculates whether Starsurge is worth casting over Starfire in Lunar Eclipse",
							}, -- [2]
							{
								["enabled"] = true,
								["description"] = "Use Convoke when at less than 50 AsP and line up with CA/Inc",
								["criteria"] = "( ( variable.convoke_desync & ! cooldown.ca_inc.ready & ! runeforge.primordial_arcanic_pulsar.enabled || buff.ca_inc.up & ( ! runeforge.primordial_arcanic_pulsar.enabled || runeforge.celestial_spirits.enabled || fight_remains > 127 || boss & fight_remains < cooldown.ca_inc.remains + 10 || buff.ca_inc.remains > 12 ) ) & ( ( ( astral_power <= variable.convoke_asp || spell_targets.starfire > 3 ) & ( buff.eclipse_lunar.remains > 10 || buff.eclipse_solar.remains > 10 ) || buff.ca_inc.remains > 5 & buff.ca_inc.remains <= 12 ) & ( ! talent.stellar_drift.enabled || buff.starfall.remains < 1.5 - 0.5 * runeforge.celestial_spirits.enabled || buff.ca_inc.remains < buff.starfall.remains + 5 & buff.ca_inc.up ) & ( ! runeforge.timeworn_dreambinder.enabled || ! runeforge.celestial_spirits.enabled || buff.timeworn_dreambinder.remains > execute_time ) || runeforge.balance_of_all_things.enabled ) & ( ! runeforge.balance_of_all_things.enabled || ( buff.balance_of_all_things_nature.stack = 8 || buff.balance_of_all_things_arcane.stack = 8 ) ) || boss & fight_remains < 10 & ! cooldown.ca_inc.ready )",
								["action"] = "convoke_the_spirits",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["cycle_targets"] = 1,
								["description"] = "Use Sunfire in pandemic on anything that lives 14secs and less with more targets and at the end of a Solar Eclipse at 14 secs or less remaining as to not having to refresh during Lunar Eclipse",
								["criteria"] = "( refreshable || buff.eclipse_solar.remains < 3 & eclipse.in_solar & remains < 14 & talent.soul_of_the_forest.enabled ) & target.time_to_die > 14 - spell_targets + remains & ( eclipse.in_any || remains < gcd.max )",
							}, -- [4]
							{
								["enabled"] = true,
								["description"] = "Use Sunfire to have a global to use IQD",
								["criteria"] = "variable.iqd_condition & cooldown.inscrutable_quantum_device.ready & equipped.inscrutable_quantum_device & ap_check",
								["action"] = "sunfire",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "wait",
								["sec"] = "0.15 - action.ravenous_frenzy.time_since",
								["criteria"] = "covenant.venthyr & prev.1.ravenous_frenzy & action.ravenous_frenzy.time_since < 0.15 & ( ! starfire.ap_check || talent.stellar_drift.enabled & cooldown.starfall.ready || buff.starfall.refreshable )",
								["description"] = "Wait a small moment after Frenzy when about to use an instant",
							}, -- [6]
							{
								["enabled"] = true,
								["description"] = "Keep up Starfall at all times unless using Lycaras and it is about to proc or let the special action line below handle Dreambinder on 2 targets",
								["criteria"] = "! talent.stellar_drift.enabled & ( ! set_bonus.tier28_4pc || eclipse.in_any || spell_targets.starfall > 3 ) & ( buff.starfall.refreshable & ( spell_targets.starfall < 3 || ! runeforge.timeworn_dreambinder.enabled ) || talent.soul_of_the_forest.enabled & buff.eclipse_solar.remains < 3 & eclipse.in_solar & buff.starfall.remains < 7 & spell_targets.starfall >= 4 ) & ( ! runeforge.lycaras_fleeting_glimpse.enabled || time % 45 > buff.starfall.remains + 2 ) & target.time_to_die > 5",
								["action"] = "starfall",
							}, -- [7]
							{
								["enabled"] = true,
								["description"] = "With Stellar Drift use on cd when refreshable but still wait for Lycaras proc and don't use before CDs. Still use before Convoke since that will proc another Starfall",
								["criteria"] = "talent.stellar_drift.enabled & buff.starfall.refreshable & ( ! set_bonus.tier28_4pc || eclipse.in_any || spell_targets.starfall > 3 ) & ( ! runeforge.lycaras_fleeting_glimpse.enabled || time % 45 > 4 ) & fight_remains > 3",
								["action"] = "starfall",
							}, -- [8]
							{
								["enabled"] = true,
								["description"] = "With Dreambinder use Starfall to keep up the buff by also using Starfall on 5 seconds or less remaining",
								["criteria"] = "runeforge.timeworn_dreambinder.enabled & spell_targets.starfall >= 3 & ( ! buff.timeworn_dreambinder.up & buff.starfall.refreshable || ( variable.dream_will_fall_off & ( buff.starfall.remains < 3 || spell_targets.starfall > 2 & talent.stellar_drift.enabled & buff.starfall.remains < 5 ) ) )",
								["action"] = "starfall",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "astral_power > 80 * ( 1 - set_bonus.tier28_2pc * 0.2 ) * ( 1 - buff.timeworn_dreambinder.stack * 0.1 ) - ( buff.starfall.remains * 3 / spell_haste * ! talent.stellar_drift.enabled ) - ( cooldown.starfall.remains * 3 / spell_haste * talent.stellar_drift.enabled ) - ( buff.fury_of_elune.remains * 5 ) & ( buff.starfall.up || cooldown.starfall.remains )",
								["var_name"] = "starfall_wont_fall_off",
								["description"] = "Calculates whether a Starsurge use will cause Starfall to fall off, and use Starsurge to keep Dreambinder stack up. 80 is the required AsP to cast Starsurge+Starfall",
							}, -- [10]
							{
								["enabled"] = true,
								["description"] = "Use Starsurge with Dreambinder to keep up the buff without losing Starfall uptime and use Starsurge on 4+ BoAT stacks until 4 targets",
								["criteria"] = "variable.dream_will_fall_off & variable.starfall_wont_fall_off & ! variable.ignore_starsurge || ( buff.balance_of_all_things_nature.stack > 3 || buff.balance_of_all_things_arcane.stack > 3 ) & spell_targets.starfall < 4 & variable.starfall_wont_fall_off",
								["action"] = "starsurge",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "adaptive_swarm",
								["cycle_targets"] = 1,
								["description"] = "Use swarm so that you get max uptime by using it as late as possible on less than 3 stacks or just when 3+ stacks expire",
								["criteria"] = "! ticking & ! action.adaptive_swarm_damage.in_flight || dot.adaptive_swarm_damage.stack < 3 & dot.adaptive_swarm_damage.remains < 3",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "moonfire",
								["cycle_targets"] = 1,
								["description"] = "Refresh Moonfire if CA/Inc is ready, there are less than 5 targets in Lunar Eclipse with SotF, less than 10 otherwise in any Eclipse or up to 5 targets before a Lunar Eclipse. Don't refresh during Kindred Empowerment unless in Solar Eclipse",
								["criteria"] = "refreshable & target.time_to_die > ( ( 14 + ( spell_targets.starfire * 2 * buff.eclipse_lunar.up ) ) + remains ) / ( 1 + talent.twin_moons.enabled ) & astral_power > variable.sf_cost - buff.starfall.remains * 6 & ( ap_check || variable.ignore_starsurge || ! eclipse.in_any ) & ( cooldown.ca_inc.ready & eclipse.in_any & ( variable.convoke_desync || cooldown.convoke_the_spirits.ready || ! covenant.night_fae ) || spell_targets.starfire < ( ( 8 - ( buff.eclipse_lunar.up * 3 ) ) * ( 1 + talent.twin_moons.enabled ) ) & ! eclipse.solar_next & ( ! cooldown.ca_inc.ready ) || ( eclipse.in_solar || buff.eclipse_lunar.up & ! talent.soul_of_the_forest.enabled ) & ( spell_targets.starfire < 10 * ( 1 + talent.twin_moons.enabled ) ) ) & ( ! covenant.kyrian || ! buff.kindred_empowerment_energize.up || eclipse.in_solar ) & ! buff.ravenous_frenzy_sinful_hysteria.up",
							}, -- [13]
							{
								["enabled"] = true,
								["description"] = "Use FoN on cd without capping",
								["criteria"] = "ap_check || variable.ignore_starsurge",
								["action"] = "force_of_nature",
							}, -- [14]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( variable.cd_condition & ( buff.starfall.up || talent.stellar_drift.enabled || covenant.night_fae ) & dot.moonfire.ticking & ( ! buff.solstice.up & ! buff.ca_inc.up & ( ! talent.fury_of_elune.enabled || buff.ca_inc.duration > cooldown.fury_of_elune.remains + 8 ) & ( ! set_bonus.tier28_2pc || eclipse.in_lunar || eclipse.solar_next ) & variable.thrill_seeker_wait & ( ! covenant.night_fae || variable.convoke_desync || cooldown.convoke_the_spirits.remains < 15 ) & target.time_to_die > buff.ca_inc.duration * 0.7 ) || boss & fight_remains < buff.ca_inc.duration + 12 * runeforge.primordial_arcanic_pulsar.enabled )",
								["var_name"] = "cd_condition_aoe",
							}, -- [15]
							{
								["enabled"] = true,
								["description"] = "Use Frenzy with CA/Inc",
								["criteria"] = "buff.ca_inc.remains > 15 || buff.ca_inc.duration + 12 * runeforge.primordial_arcanic_pulsar.enabled < 26 & variable.cd_condition_aoe",
								["action"] = "ravenous_frenzy",
							}, -- [16]
							{
								["enabled"] = true,
								["description"] = "Use CA/Inc on cd unless and line it up with Convoke",
								["criteria"] = "variable.cd_condition_aoe & ( ! covenant.venthyr || ! runeforge.sinful_hysteria.enabled || runeforge.primordial_arcanic_pulsar.enabled || buff.ca_inc.duration >= 26 ) || buff.ravenous_frenzy.up & buff.ravenous_frenzy.remains < 15.5",
								["action"] = "celestial_alignment",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_aoe",
								["action"] = "incarnation",
							}, -- [18]
							{
								["enabled"] = true,
								["description"] = "Use Empower Bond on cd with Starfall up and save for Pulsar and CA/Inc",
								["criteria"] = "( cooldown.ca_inc.remains + buff.ca_inc.duration + runeforge.primordial_arcanic_pulsar.enabled * 12 > cooldown.empower_bond.duration + 10 ) || buff.ca_inc.remains > 8",
								["action"] = "empower_bond",
							}, -- [19]
							{
								["enabled"] = true,
								["action"] = "stellar_flare",
								["cycle_targets"] = 1,
								["description"] = "Refresh flare on up to 3 targets without CA/Inc being about to expire and not overcapping",
								["criteria"] = "refreshable & time_to_die > 15 & spell_targets.starfire < 4 & ap_check & ( buff.ca_inc.remains > 10 || ! buff.ca_inc.up )",
							}, -- [20]
							{
								["enabled"] = true,
								["description"] = "Use FoE if inside an Eclipse and line it up with a Pulsar proc and Adaptive Swarm",
								["criteria"] = "eclipse.in_any & ( ap_check || ! runeforge.primordial_arcanic_pulsar.enabled ) & ( buff.primordial_arcanic_pulsar.value < 250 || buff.ca_inc.remains > 8 ) & ( dot.adaptive_swarm_damage.ticking || ! covenant.necrolord || spell_targets > 2 ) & ( buff.ravenous_frenzy.remains < 9 - ( 4 * runeforge.sinful_hysteria.enabled ) & buff.ravenous_frenzy.up || ! buff.ravenous_frenzy.up ) & ( ! cooldown.ca_inc.up || buff.thrill_seeker.stack < 15 & fight_remains < 200 & fight_remains > 100 || ! soulbind.thrill_seeker.enabled ) & ( soulbind.thrill_seeker.enabled || cooldown.ca_inc.remains > 30 ) & target.time_to_die > 5 || boss & fight_remains < 10",
								["action"] = "fury_of_elune",
							}, -- [21]
							{
								["enabled"] = true,
								["description"] = "Use a Starfall Oneth proc unless Starfall is already up or you are about to overcap AsP",
								["criteria"] = "buff.oneths_perception.up & ( buff.starfall.refreshable || astral_power > 90 )",
								["action"] = "starfall",
							}, -- [22]
							{
								["enabled"] = true,
								["description"] = "Dump AsP before Convoke with Starfall and then Starsurge",
								["criteria"] = "covenant.night_fae & ! talent.stellar_drift.enabled & ( variable.convoke_desync || cooldown.ca_inc.up || buff.ca_inc.up ) & cooldown.convoke_the_spirits.remains < gcd.max * ceil ( astral_power / variable.sf_cost ) & buff.starfall.remains < 4",
								["action"] = "starfall",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & ( variable.convoke_desync || cooldown.ca_inc.up || buff.ca_inc.up ) & cooldown.convoke_the_spirits.remains < 5 & variable.starfall_wont_fall_off & eclipse.in_any & ! variable.ignore_starsurge",
								["action"] = "starsurge",
							}, -- [24]
							{
								["enabled"] = true,
								["description"] = "Use Starsurge with an Oneth proc or if you'd overcap AsP with your next cast. Also dump AsP at the end of the Venthyr buff if Starfall wouldn't fall off or you are on 2 targets",
								["criteria"] = "buff.oneths_clear_vision.up || ( ! starfire.ap_check & ! variable.ignore_starsurge || ( buff.ca_inc.remains < 5 & buff.ca_inc.up || ( ( buff.ca_inc.remains < gcd.max * ceil ( astral_power / variable.ss_cost ) & buff.ca_inc.up || buff.ravenous_frenzy_sinful_hysteria.remains < gcd.max * ceil ( astral_power / variable.ss_cost ) & buff.ravenous_frenzy_sinful_hysteria.up ) & covenant.venthyr ) ) & ( spell_targets.starfall < 3 || variable.starfall_wont_fall_off ) ) & ! variable.ignore_starsurge & ( ! runeforge.timeworn_dreambinder.enabled || spell_targets.starfall < 3 )",
								["action"] = "starsurge",
							}, -- [25]
							{
								["enabled"] = true,
								["description"] = "Use Moons in Solar Eclipse and save Full Moon for CA/Inc",
								["criteria"] = "( buff.eclipse_solar.remains > execute_time || ( charges = 2 & recharge_time < 5 ) || charges = 3 ) & ap_check",
								["action"] = "new_moon",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "( buff.eclipse_solar.remains > execute_time || ( charges = 2 & recharge_time < 5 ) || charges = 3 ) & ap_check & ( buff.ravenous_frenzy.remains < 5 & buff.ravenous_frenzy.up & ! runeforge.sinful_hysteria.enabled || ! buff.ravenous_frenzy.up )",
								["action"] = "half_moon",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "( buff.eclipse_solar.remains > execute_time & ( cooldown.ca_inc.remains > 50 || cooldown.convoke_the_spirits.remains > 50 ) || ( charges = 2 & recharge_time < 5 ) || charges = 3 ) & ap_check & ( buff.ravenous_frenzy.remains < 5 & buff.ravenous_frenzy.up & ! runeforge.sinful_hysteria.enabled || ! buff.ravenous_frenzy.up )",
								["action"] = "full_moon",
							}, -- [28]
							{
								["enabled"] = true,
								["description"] = "Use WoE on CD",
								["action"] = "warrior_of_elune",
							}, -- [29]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "spell_targets.starfire > 4 + floor ( mastery_value * 100 / 20 ) + floor ( buff.starsurge_empowerment_solar.stack / 4 )",
								["var_name"] = "starfire_in_solar",
								["description"] = "Calculates whether to use Starfire in Solar which is at 5 targets+1 for every 20% mastery or 4 Starsurge Empowerment stacks",
							}, -- [30]
							{
								["enabled"] = true,
								["description"] = "On 2 targets without Soul of the Forest you should fill with Wrath during Inc",
								["criteria"] = "! buff.ravenous_frenzy.up & ! buff.ravenous_frenzy_sinful_hysteria.up & ! talent.soul_of_the_forest.enabled & spell_targets.starfire < 3 & buff.eclipse_solar.remains > execute_time & fight_remains > buff.ca_inc.remains + 12 * runeforge.primordial_arcanic_pulsar.enabled",
								["action"] = "wrath",
							}, -- [31]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "1 / spell_haste < 2 - ( 0.2 * ( ( spell_targets.starfire - 1 ) / ( ( spell_targets.starfire - 1 ) / 20 + 1 ) ) * ( 1 + talent.soul_of_the_forest.enabled * 1.5 ) ) + 0.15 * buff.ravenous_frenzy.remains",
								["var_name"] = "wrath_in_frenzy",
								["description"] = "Calculates whether to Wrath during Frenzy",
							}, -- [32]
							{
								["enabled"] = true,
								["description"] = "Use Wrath in Solar Eclipse or if no Starfire will fit into CA/Inc anymore",
								["criteria"] = "( eclipse.lunar_next || eclipse.any_next & variable.is_cleave ) & ( target.time_to_die > 4 || eclipse.lunar_in_2 || boss & fight_remains < 10 ) || buff.eclipse_solar.remains < action.starfire.execute_time & buff.eclipse_solar.up || eclipse.in_solar & ! variable.starfire_in_solar || buff.ca_inc.remains < action.starfire.execute_time & ! variable.is_cleave & buff.ca_inc.remains < execute_time & buff.ca_inc.up || buff.ravenous_frenzy.up & variable.wrath_in_frenzy || ! variable.is_cleave & buff.ca_inc.remains > execute_time",
								["action"] = "wrath",
							}, -- [33]
							{
								["enabled"] = true,
								["description"] = "Use Starfire if in Lunar Eclipse, in Solar Eclipse on 4+ targets or to proc Solar Eclipse",
								["action"] = "starfire",
							}, -- [34]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Fallthru",
								["list_name"] = "fallthru",
							}, -- [35]
						},
						["fallthru"] = {
							{
								["enabled"] = true,
								["description"] = "Starsurge for movement unless using BoAT",
								["criteria"] = "! runeforge.balance_of_all_things.equipped",
								["action"] = "starsurge",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "sunfire",
								["cycle_targets"] = 1,
								["description"] = "Cast the dot with the most time to add until the max duration is hit. Sunfire remains multiplied to match moonfire duration",
								["criteria"] = "dot.moonfire.remains > remains * 22 / 18",
							}, -- [2]
							{
								["action"] = "moonfire",
								["enabled"] = true,
							}, -- [3]
						},
						["st"] = {
							{
								["enabled"] = true,
								["action"] = "adaptive_swarm",
								["cycle_targets"] = 1,
								["description"] = "Use Adaptive Swarm when there is no active swarm, as late as possible on swarm with 2 or fewer stacks or on a 3+ swarm so that the new swarm arrives just after that swarm expires",
								["criteria"] = "! dot.adaptive_swarm_damage.ticking & ! action.adaptive_swarm_damage.in_flight & ( ! dot.adaptive_swarm_heal.ticking || dot.adaptive_swarm_heal.remains > 5 ) || dot.adaptive_swarm_damage.stack < 3 & dot.adaptive_swarm_damage.remains < 3 & dot.adaptive_swarm_damage.ticking",
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "Uses Convoke if CA/Inc is up or you are desyncing CA/Inc with Convoke and you are below 40/30(Celestial Spirits) AsP in a 10+ sec Eclipse. Also don't let Dreambinder expire, always use in CA/Inc with Pulsar and at the start of a BoAT window.",
								["criteria"] = "! druid.no_cds & ( ( variable.convoke_desync & ! cooldown.ca_inc.ready & ! runeforge.primordial_arcanic_pulsar.enabled || buff.ca_inc.up & ( ! runeforge.primordial_arcanic_pulsar.enabled || runeforge.celestial_spirits.enabled || fight_remains > 127 || fight_remains < cooldown.ca_inc.remains + 10 || buff.ca_inc.remains > 12 ) ) & ( ( astral_power <= variable.convoke_asp & ( buff.eclipse_lunar.remains > 10 || buff.eclipse_solar.remains > 10 ) || buff.ca_inc.remains + 2 * 12 * runeforge.primordial_arcanic_pulsar.enabled > 63 || buff.ca_inc.remains > 3 & buff.ca_inc.remains <= 12 ) & ( ! runeforge.timeworn_dreambinder.enabled || ! runeforge.celestial_spirits.enabled || buff.timeworn_dreambinder.remains > execute_time ) || runeforge.balance_of_all_things.enabled ) & ( ! runeforge.balance_of_all_things.enabled || ( buff.balance_of_all_things_nature.stack = 8 || buff.balance_of_all_things_arcane.stack = 8 ) ) || boss & fight_remains < 10 & ! cooldown.ca_inc.ready )",
								["action"] = "convoke_the_spirits",
							}, -- [2]
							{
								["enabled"] = true,
								["description"] = "Use Starsurge to keep up the Dreambinder buff if it would expire before finishing the next cast or to dump before Convoke",
								["criteria"] = "runeforge.timeworn_dreambinder.enabled & ( ! ( ( buff.timeworn_dreambinder.remains > action.wrath.execute_time + 0.1 & ( eclipse.in_both || eclipse.in_solar || eclipse.lunar_next ) || buff.timeworn_dreambinder.remains > action.starfire.execute_time + 0.1 & ( eclipse.in_lunar || eclipse.solar_next || eclipse.any_next ) ) || ! buff.timeworn_dreambinder.up ) || ( buff.ca_inc.up || variable.convoke_desync ) & cooldown.convoke_the_spirits.ready & covenant.night_fae & ( buff.eclipse_lunar.remains > 10 || buff.eclipse_solar.remains > 10 ) ) & ( ! covenant.kyrian || cooldown.empower_bond.remains > 8 )",
								["action"] = "starsurge",
							}, -- [3]
							{
								["enabled"] = true,
								["description"] = "Dump Starsurges with Balance of All Things or to prepare for Convoke with BoAT",
								["criteria"] = "runeforge.balance_of_all_things.enabled & ( ( buff.balance_of_all_things_nature.stack > 2 || buff.balance_of_all_things_arcane.stack > 2 ) & cooldown.ca_inc.remains > 7 & ! cooldown.convoke_the_spirits.up || ( covenant.night_fae & cooldown.convoke_the_spirits.remains < 10 & eclipse.in_any & astral_power > 20 + 30 * cooldown.ca_inc.ready ) )",
								["action"] = "starsurge",
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( buff.ravenous_frenzy.remains > 5 || ! buff.ravenous_frenzy.up ) & ! buff.ravenous_frenzy_sinful_hysteria.up & ( buff.kindred_empowerment_energize.remains < gcd.max ) & ( buff.eclipse_solar.remains > gcd.max || buff.eclipse_lunar.remains > gcd.max || ( ! buff.eclipse_lunar.up || ! buff.eclipse_solar.up ) & ! talent.solstice.enabled )",
								["var_name"] = "dot_requirements",
								["description"] = "Condition for all dots that makes sure they aren't refreshed when Ravenous Frenzy has less than 5 secs remaining or the Empower Bond buff is about to fall off or any Eclipse is about to expire",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! buff.eclipse_solar.up & ! buff.eclipse_lunar.up ) & ! talent.solstice.enabled & ! runeforge.timeworn_dreambinder.enabled",
								["var_name"] = "dot_outside_eclipse",
								["description"] = "Condition that checks if you are outside eclipse to only dot there or ignore this with Solstice",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "moonfire",
								["cycle_targets"] = 1,
								["description"] = "Dot all targets within Pandemic without overcapping+the above conditions",
								["criteria"] = "( buff.eclipse_solar.remains > remains || buff.eclipse_lunar.remains > remains || variable.dot_outside_eclipse ) & refreshable & target.time_to_die > 12 & ap_check & variable.dot_requirements",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "( buff.eclipse_solar.remains > remains || buff.eclipse_lunar.remains > remains || variable.dot_outside_eclipse ) & refreshable & target.time_to_die > 12 & ap_check & variable.dot_requirements",
								["action"] = "sunfire",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "( buff.eclipse_solar.remains > remains || buff.eclipse_lunar.remains > remains || variable.dot_outside_eclipse ) & refreshable & target.time_to_die > 16 & ap_check & variable.dot_requirements",
								["action"] = "stellar_flare",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["description"] = "Use FoN on cd without capping",
								["criteria"] = "ap_check",
								["action"] = "force_of_nature",
							}, -- [10]
							{
								["enabled"] = true,
								["description"] = "Use Empower Bond with any long enough lasting Eclipse and try to line it up with Pulsar and CA/Inc",
								["criteria"] = "( cooldown.ca_inc.remains + buff.ca_inc.duration + runeforge.primordial_arcanic_pulsar.enabled * 12 > cooldown.empower_bond.duration + 10 ) || buff.ca_inc.remains > 8",
								["action"] = "empower_bond",
							}, -- [11]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "astral_power > 90 - ( 2.5 * buff.fury_of_elune.stack - 2 * eclipse.in_lunar )",
								["var_name"] = "asp_dump",
								["description"] = "Sets when AsP should be dumped to not overcap (Depends on Fury of Elune and the Eclipse)",
							}, -- [12]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "! druid.no_cds & ( variable.cd_condition & ! buff.ca_inc.up & ( ( ( variable.asp_dump || covenant.night_fae || ( covenant.kyrian & cooldown.empower_bond.ready ) || runeforge.timeworn_dreambinder.enabled ) & dot.sunfire.ticking & dot.moonfire.ticking & ( dot.stellar_flare.ticking || ! talent.stellar_flare.enabled ) & variable.thrill_seeker_wait & target.time_to_die > buff.ca_inc.duration * 0.7 || buff.bloodlust.up & buff.bloodlust.remains < buff.ca_inc.duration + ( 12 * runeforge.primordial_arcanic_pulsar.enabled ) ) || ( equipped.empyreal_ordnance & cooldown.empyreal_ordnance.remains < 167 + ( 5 * runeforge.sinful_hysteria.enabled ) ) ) & ( ( ! covenant.night_fae || ( variable.convoke_desync || cooldown.convoke_the_spirits.remains < 15 ) & ( ! runeforge.balance_of_all_things.enabled || astral_power < 50 & cooldown.convoke_the_spirits.ready ) ) || fight_remains < cooldown.convoke_the_spirits.remains ) || fight_remains < buff.ca_inc.duration + 12 * runeforge.primordial_arcanic_pulsar.enabled ) & ( ! set_bonus.tier28_2pc || eclipse.in_lunar || eclipse.solar_next || buff.primordial_arcanic_pulsar.value >= 250 || covenant.venthyr & fight_remains < 28 )",
								["var_name"] = "cd_condition_st",
								["description"] = "Use CA/Inc with Convoke/Kindred Spirits and don't overwrite Pulsar or when Bloodlust would expire before CA/Inc expires. Make sure to enter a Lunar Eclipse when usign T28 2pc and all CDs will become ready soon enough during the buff and dots have been sufficiently refreshed.",
							}, -- [13]
							{
								["enabled"] = true,
								["description"] = "Use Frenzy with CA/Inc unless Frenzy would last longer than CA/Inc, then use before",
								["criteria"] = "buff.ca_inc.remains > 15 || buff.ca_inc.duration < 27 + runeforge.primordial_arcanic_pulsar.enabled * 12 & variable.cd_condition_st",
								["action"] = "ravenous_frenzy",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_st & ( buff.ca_inc.duration >= 27 + runeforge.primordial_arcanic_pulsar.enabled * 12 || ! covenant.venthyr ) || buff.ravenous_frenzy.up & buff.ravenous_frenzy.remains < 9 + conduit.precise_alignment.time_value + ( ! buff.bloodlust.up & ! talent.starlord.enabled )",
								["action"] = "celestial_alignment",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "variable.cd_condition_st",
								["action"] = "incarnation",
							}, -- [16]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.ca_inc.remains > 10 + 5 * covenant.venthyr || ! variable.convoke_desync & covenant.night_fae || druid.no_cds",
								["var_name"] = "save_for_ca_inc",
								["description"] = "Variable used on abilities that want to be saved for CA/Inc so that they arent wasted just before them",
							}, -- [17]
							{
								["enabled"] = true,
								["description"] = "Uses FoE if in an Eclipse and tries to line it up with Pulsar, CA/Inc, Empower Bond and Adaptive Swarm",
								["criteria"] = "eclipse.in_any & ( astral_power < 92 - buff.fury_of_elune.stack * 5 || buff.ravenous_frenzy.up ) & ( buff.primordial_arcanic_pulsar.value < 240 || buff.ca_inc.remains > 8 ) & variable.save_for_ca_inc & ( ! covenant.necrolord || dot.adaptive_swarm_damage.ticking ) & ( ! covenant.venthyr || buff.ravenous_frenzy.remains < 9 - ( 4 * runeforge.sinful_hysteria.enabled ) & buff.ravenous_frenzy.up || ! buff.ravenous_frenzy.up ) & ( ! covenant.kyrian || cooldown.empower_bond.remains > 20 ) & target.time_to_die > 5 || boss & fight_remains < 10",
								["action"] = "fury_of_elune",
							}, -- [18]
							{
								["enabled"] = true,
								["action"] = "wait",
								["sec"] = "0.15 - action.ravenous_frenzy.time_since",
								["criteria"] = "covenant.venthyr & prev.1.ravenous_frenzy & action.ravenous_frenzy.time_since < 0.15 & variable.asp_dump",
								["description"] = "Wait a small moment after Frenzy if you are about to cast a spender",
							}, -- [19]
							{
								["enabled"] = true,
								["description"] = "Use Oneth Starfall procs if Starfall isn't up",
								["criteria"] = "buff.oneths_perception.up & buff.starfall.refreshable",
								["action"] = "starfall",
							}, -- [20]
							{
								["buff_name"] = "starlord",
								["criteria"] = "buff.starlord.remains < 5 & ( buff.eclipse_solar.remains > 5 || buff.eclipse_lunar.remains > 5 ) & astral_power > 90",
								["description"] = "Cancel Starlord if it has less than 5s remaining, you are at 90+ AsP and the current Eclipse has 5+s remaining",
								["enabled"] = true,
								["action"] = "cancel_buff",
							}, -- [21]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "covenant.night_fae & runeforge.primordial_arcanic_pulsar.enabled & buff.primordial_arcanic_pulsar.value + astral_power + 3 >= 300 & variable.convoke_desync & cooldown.convoke_the_spirits.remains < astral_power / 30 * gcd.max & eclipse.in_any & astral_power > variable.convoke_asp & cooldown.ca_inc.remains > 5",
								["var_name"] = "proc_pulsar_early",
								["description"] = "Sets when Pulsar should be procced early to be able to use Convoke on cooldown (Essentially becomes true if dumping AsP now will allow you to perfectly enter Pulsar and then use Convoke)",
							}, -- [22]
							{
								["enabled"] = true,
								["description"] = "Use Starfall with Stellar Drift or t28 4pc and no Starlord, when no Starfall is up or to proc Pulsar when above 90 AsP(or the early Pulsar proc variable is true) or adpative swarm has 8+secs remaining or is in flight",
								["criteria"] = "( talent.stellar_drift.enabled || set_bonus.tier28_4pc ) & ! talent.starlord.enabled & buff.starfall.refreshable & ! runeforge.timeworn_dreambinder.enabled & ( buff.primordial_arcanic_pulsar.value >= 250 & ! buff.ca_inc.up & ( variable.asp_dump || buff.kindred_empowerment_energize.up || variable.proc_pulsar_early ) || ( covenant.necrolord & talent.stellar_drift.enabled & ( dot.adaptive_swarm_damage.remains > 8 || action.adaptive_swarm_damage.in_flight ) ) ) & ( cooldown.ca_inc.remains > 10 || cooldown.convoke_the_spirits.remains > 10 )",
								["action"] = "starfall",
							}, -- [23]
							{
								["enabled"] = true,
								["description"] = "Dumps AsP before Convoke using the Convoke condition to check if Convoke is actually about to be cast",
								["criteria"] = "variable.proc_pulsar_early",
								["action"] = "starsurge",
							}, -- [24]
							{
								["enabled"] = true,
								["description"] = "Use Moons when you are about to/are capping charges and make sure they are in an Eclipse still for HM/FM",
								["criteria"] = "ap_check & ( charges = 2 & recharge_time < 5 || charges = 3 )",
								["action"] = "new_moon",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "ap_check & ( charges = 2 & recharge_time < 5 || charges = 3 ) & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
								["action"] = "half_moon",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "ap_check & ( charges = 2 & recharge_time < 5 || charges = 3 ) & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
								["action"] = "full_moon",
							}, -- [27]
							{
								["enabled"] = true,
								["description"] = "Use Starsurge Oneth procs and dump AsP when CA/Inc, Empower Bond, the Venthyr buff is about to fall off or you'd cap AsP",
								["criteria"] = "eclipse.in_any & ( buff.oneths_clear_vision.up || buff.kindred_empowerment_energize.up || buff.ca_inc.up & ( ! covenant.kyrian || cooldown.empower_bond.remains > 5 || buff.ca_inc.remains < gcd.max * floor ( astral_power / variable.ss_cost ) ) & ( ! covenant.venthyr || buff.ravenous_frenzy.remains < gcd.max * ceil ( ( astral_power + 40 * talent.fury_of_elune.enabled ) / variable.ss_cost ) + 3 * talent.new_moon.enabled & ! runeforge.sinful_hysteria.enabled & buff.ravenous_frenzy.up || buff.ravenous_frenzy_sinful_hysteria.up || ( buff.ravenous_frenzy.remains < action.starfire.execute_time & spell_haste < 0.4 || buff.ravenous_frenzy.remains < action.wrath.execute_time || buff.primordial_arcanic_pulsar.value >= 210 & ( astral_power > variable.ss_cost * 2 - 5 || buff.ravenous_frenzy.remains > 2 ) & buff.ravenous_frenzy.remains < 6 || variable.iqd_condition & cooldown.inscrutable_quantum_device.ready & equipped.inscrutable_quantum_device ) & buff.ravenous_frenzy.up || ! buff.ravenous_frenzy.up & ! cooldown.ravenous_frenzy.ready ) || variable.asp_dump || boss & fight_remains < gcd.max * ceil ( astral_power / variable.ss_cost ) )",
								["action"] = "starsurge",
							}, -- [28]
							{
								["enabled"] = true,
								["description"] = "Try to make the best of Starlord by stacking it up quickly in any Eclipse but Pulsar isn't about to be procced",
								["criteria"] = "talent.starlord.enabled & ! runeforge.timeworn_dreambinder.enabled & ( buff.starlord.up || astral_power > 90 ) & buff.starlord.stack < 3 & ( buff.eclipse_solar.up || buff.eclipse_lunar.up ) & buff.primordial_arcanic_pulsar.value < 270 & ( cooldown.ca_inc.remains > 10 || ! variable.convoke_desync & covenant.night_fae )",
								["action"] = "starsurge",
							}, -- [29]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "eclipse.in_lunar * 8 / action.starfire.execute_time + ! eclipse.in_lunar * ( 6 + talent.soul_of_the_forest.enabled * 3 ) / action.wrath.execute_time + 0.45 / spell_haste + 0.5 * talent.natures_balance.enabled",
								["var_name"] = "aspPerSec",
								["description"] = "Estimates how much AsP are gained per second. Only takes a snapshot for the current situation so wouldn't be accurate for larger timeframes",
							}, -- [30]
							{
								["enabled"] = true,
								["description"] = "Dump Starsurge in an Eclipse as soon as possible as long as you will end up with 80+ when entering the next Eclipse, don't let it proc Pulsar, don't overwrite an Oneth proc and pool before CA/Inc and Empower Bond",
								["criteria"] = "! runeforge.timeworn_dreambinder.enabled & ( buff.primordial_arcanic_pulsar.value < 270 || buff.primordial_arcanic_pulsar.value < 250 & talent.stellar_drift.enabled ) & ( eclipse.in_solar & astral_power + variable.aspPerSec * buff.eclipse_solar.remains + dot.fury_of_elune.ticks_remain * 2.5 > 80 || eclipse.in_lunar & astral_power + variable.aspPerSec * buff.eclipse_lunar.remains + dot.fury_of_elune.ticks_remain * 2.5 > 90 ) & ! buff.oneths_perception.up & ! talent.starlord.enabled & ( cooldown.ca_inc.remains > 7 || soulbind.thrill_seeker.enabled & buff.thrill_seeker.stack < 33 - ( runeforge.sinful_hysteria.enabled * 2 ) & fight_remains > 100 & fight_remains < 200 ) & ( ! covenant.kyrian || cooldown.empower_bond.remains > 2 )",
								["action"] = "starsurge",
							}, -- [31]
							{
								["enabled"] = true,
								["description"] = "Use Moons in any Eclipse and save Half+Full Moon for CA/Inc and Kindred Empowerment. Also use NM and FM at the end of Frenzy and don't let Dreambinder fall off",
								["criteria"] = "ap_check & variable.save_for_ca_inc & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time )",
								["action"] = "new_moon",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "ap_check & variable.save_for_ca_inc & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) & ( buff.ca_inc.up || buff.primordial_arcanic_pulsar.value <= 210 ) & ( ! covenant.venthyr || buff.ravenous_frenzy.remains < ( 5 - 2 * runeforge.sinful_hysteria.enabled ) & buff.ravenous_frenzy.up || ! buff.ravenous_frenzy.up ) & ( ! runeforge.timeworn_dreambinder.enabled || execute_time < buff.timeworn_dreambinder.remains || ! buff.timeworn_dreambinder.up )",
								["action"] = "half_moon",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "ap_check & variable.save_for_ca_inc & ( buff.eclipse_lunar.remains > execute_time || buff.eclipse_solar.remains > execute_time ) & ( buff.ca_inc.up || buff.primordial_arcanic_pulsar.value <= 210 ) & ( ! covenant.kyrian || buff.kindred_empowerment_energize.up ) & ( ! covenant.venthyr || buff.ravenous_frenzy.remains < 5 & buff.ravenous_frenzy.up & ! runeforge.sinful_hysteria.enabled || ! buff.ravenous_frenzy.up ) & ( ! runeforge.timeworn_dreambinder.enabled || execute_time < buff.timeworn_dreambinder.remains || ! buff.timeworn_dreambinder.up )",
								["action"] = "full_moon",
							}, -- [34]
							{
								["enabled"] = true,
								["description"] = "Use WoE on cd",
								["action"] = "warrior_of_elune",
							}, -- [35]
							{
								["enabled"] = true,
								["description"] = "Use Starfire to proc Solar Eclipse, CA/Inc has less time than a Wrath execute left or only Lunar Eclipse is up. With T28 2pc enter a Solar Eclipse if Pulsar still has less than 210 stacks and CA/Inc and Convoke have more than 17s CD remaining. Use above 250% haste during Frenzy and 222% haste without Frenzy",
								["criteria"] = "eclipse.in_lunar & ! buff.ravenous_frenzy.up || eclipse.solar_next || ( eclipse.any_next || buff.ca_inc.remains < action.wrath.execute_time & buff.ca_inc.up ) & ( ! set_bonus.tier28_2pc || runeforge.primordial_arcanic_pulsar.enabled & buff.primordial_arcanic_pulsar.value < 210 & cooldown.ca_inc.remains > 17 & ( ! covenant.night_fae || cooldown.convoke_the_spirits.remains > 17 ) & ( ! race.troll || cooldown.berserking.remains > 17 ) ) || eclipse.in_any & ( buff.warrior_of_elune.up || spell_haste < 0.45 & ( ! covenant.venthyr || ! buff.ravenous_frenzy.up ) || covenant.venthyr & spell_haste < 0.4 )",
								["action"] = "starfire",
							}, -- [36]
							{
								["enabled"] = true,
								["description"] = "Use Wrath otherwise which is in Solar Eclipse, CA/Inc or to proc Lunar Eclipse",
								["action"] = "wrath",
							}, -- [37]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "Fallthru",
								["list_name"] = "fallthru",
							}, -- [38]
						},
					},
					["version"] = 20220820,
					["warnings"] = "WARNING:  The import for 'opener' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 6: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 8: Converted SimC syntax % to Lua division operator (/) (2x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (3x).\nLine 9: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 9: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 11: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 12: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 17: Converted 'trinket.1.X' to 'trinket.t1.X' (5x).\nLine 17: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 18: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 18: Converted 'trinket.2.X' to 'trinket.t2.X' (5x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 3: Converted 'trinket.1.X' to 'trinket.t1.X' (3x).\nLine 4: Converted 'trinket.2.X' to 'trinket.t2.X' (3x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (8x).\nLine 7: Converted SimC syntax %% to Lua modulus operator (%) (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 8: Converted SimC syntax %% to Lua modulus operator (%) (1x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted SimC syntax % to Lua division operator (/) (2x).\nLine 13: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 15: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 23: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 25: Converted SimC syntax % to Lua division operator (/) (2x).\nLine 25: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 27: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 30: Converted SimC syntax % to Lua division operator (/) (2x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 32: Converted SimC syntax % to Lua division operator (/) (3x).\n\nWARNING:  The import for 'fallthru' required some automated changes.\nLine 2: Converted SimC syntax % to Lua division operator (/) (1x).\n\nWARNING:  The import for 'st' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (8x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 11: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 13: Converted 'runeforge.X' to 'runeforge.X.enabled' (5x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 15: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 22: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 23: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted SimC syntax % to Lua division operator (/) (3x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 29: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 30: Converted SimC syntax % to Lua division operator (/) (3x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 33: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 34: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 36: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nImported 6 action lists.\n",
					["spec"] = 102,
					["profile"] = "## Balance Druid\n## August 20, 2022\n\n## Changes:\n## - Added Solar Beam.\n## - Changed target_if cases to cycle_targets.\n## - Removed unnecessary variables (i.e., prev_starsurge -> prev.starsurge).\n## - Avoid precasting Wrath if it's the wrong Eclipse.\n## - Make Convoke the Spirits a little more flexible (if you hadn't hit it simultaneously with BOAT + Celestial Alignment, it'd skip).\n## - Make most 'fight_remains' scenarios apply to boss fights only.\n## - Treat Tome of Blah Blah Blah as a special trinket.\n## - Opener (i.e., Wrath, Wrath, Starfire) made more resilient to earlier combat-start.\n## - Fix Kindred Empowerment check for CD usage.\n## - Remove druid.no_cds checks.\n\n## Annotated Balance APL can be found at https://balance-simc.github.io/Balance-SimC/md.html?file=balance.txt\n\nactions.precombat=kindred_spirits\n# The variable is set to 0 with no stat on use trinkets, 1 when the first one is on use, 2 if the second is and 3 if both are\nactions.precombat+=/variable,name=on_use_trinket,value=0\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=1,if=trinket.1.has_use_buff&trinket.1.cooldown.duration&!trinket.1.is.tome_of_monstrous_constructions\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=2,if=trinket.2.has_use_buff&trinket.2.cooldown.duration&!trinket.2.is.tome_of_monstrous_constructions\n# These trinkets are not automatically detected as on use stat trinkets.  Set variable to 4 as they also need special handling.\nactions.precombat+=/variable,name=on_use_trinket,op=add,value=4,if=equipped.inscrutable_quantum_device||equipped.empyreal_ordnance||equipped.soulletting_ruby\n# Sets the Starsurge cost for later calculations (for example when to start dumping before Frenzy falls off)\nactions.precombat+=/variable,name=ss_cost,value=30*(1-0.15*set_bonus.tier28_4pc)\nactions.precombat+=/variable,name=sf_cost,value=50*(1-0.15*set_bonus.tier28_4pc)\n# Sets at which amount of AsP Convoke should be used: 40 without Celestial Spirits and 30 with.\nactions.precombat+=/variable,name=convoke_asp,value=30+10*runeforge.celestial_spirits\nactions.precombat+=/moonkin_form\nactions.precombat+=/wrath,line_cd=10,if=(eclipse.lunar_next||eclipse.in_solar||eclipse.in_both||eclipse.any_next)\n\n# Precast 2 Wrath and a Starsurge on ST with Night Fae and BoAT or Starfire otherwise\nactions.opener+=/wrath,if=(eclipse.lunar_next||eclipse.in_solar||eclipse.in_both||eclipse.any_next)&prev.1.wrath&!prev.2.wrath\nactions.opener+=/starfire,line_cd=5,if=((!runeforge.balance_of_all_things||!covenant.night_fae||!spell_targets.starfall=1||!talent.natures_balance.enabled)||(eclipse.solar_next||eclipse.in_lunar||eclipse.in_both||eclipse.any_next))&!set_bonus.tier28_2pc\nactions.opener+=/starsurge,line_cd=5,if=(runeforge.balance_of_all_things&covenant.night_fae&spell_targets.starfall=1)&!set_bonus.tier28_2pc\n\n## Executed every time the actor is available.\nactions=solar_beam\nactions+=/call_action_list,name=opener,strict=1,if=time<(2*action.wrath.cast_time+action.starfire.cast_time)\n# Sets AoE on 3+ without drift and with Starlord and 2+ otherwise\nactions+=/variable,name=is_aoe,value=spell_targets.starfall>1&(!talent.starlord.enabled||talent.stellar_drift.enabled)||spell_targets.starfall>2\n# Sets cleave when Starfire can hit 2+ targets which is relevant for the Eclipse to be preferred and which filler to cast\nactions+=/variable,name=is_cleave,value=spell_targets.starfire>1\n# Variable that checks if you are in a gcd to avoid the situation where a trinket etc is used in between casts\nactions+=/variable,name=in_gcd,value=prev_gcd.1.moonfire||prev_gcd.1.sunfire||prev_gcd.1.starsurge||prev_gcd.1.starfall||prev_gcd.1.fury_of_elune||prev.ravenous_frenzy||buff.ca_inc.remains=buff.ca_inc.duration||variable.is_aoe\n# Use Berserking at the end of Frenzy when haste is above 60%, after Convoke with BoaT and otherwise with CA/Inc\nactions+=/berserking,if=((!covenant.night_fae||!cooldown.convoke_the_spirits.up||!runeforge.balance_of_all_things)&buff.ca_inc.remains>15&!covenant.venthyr||covenant.venthyr&buff.ca_inc.up&buff.ravenous_frenzy.up&(buff.ravenous_frenzy.remains<=12-4*runeforge.sinful_hysteria||buff.ca_inc.remains<11||1%spell_haste<(1.9-talent.stellar_flare.enabled*0.1-druid.delay_berserking*0.3)))&variable.in_gcd\n# Pot with a CA/Inc that isn't a Pulsar proc or when the fight is about to end\nactions+=/potion,if=(buff.ca_inc.remains>15&(!runeforge.sinful_hysteria||buff.ravenous_frenzy.remains<19&buff.ravenous_frenzy.up)||boss&fight_remains<25)&variable.in_gcd\n# Calculates whether using Convoke now will allow you to still cast the same amount of Convoke+CA/Inc casts\nactions+=/variable,name=convoke_desync,value=ceil((fight_remains-15-cooldown.ca_inc.remains)%180)>ceil((fight_remains-15-cooldown.convoke_the_spirits.remains)%180)&!raid_event.adds.exists&(!cooldown.ca_inc.ready||!cooldown.convoke_the_spirits.ready)||cooldown.ca_inc.remains>interpolated_fight_remains||runeforge.celestial_spirits&cooldown.ca_inc.remains>30||cooldown.convoke_the_spirits.remains>interpolated_fight_remains-10||!covenant.night_fae\n# Used to delay the usage of CA/Inc when using double on use and prevent usage when an add event is about to die\nactions+=/variable,name=cd_condition,value=(target.time_to_die>15||raid_event.adds.in>50)&(!covenant.venthyr||cooldown.berserking.ready||!race.troll)&(!talent.fury_of_elune.enabled||covenant.venthyr&cooldown.fury_of_elune.remains<11+5*runeforge.sinful_hysteria||!covenant.venthyr&cooldown.fury_of_elune.remains<buff.ca_inc.duration+12*runeforge.primordial_arcanic_pulsar-12)&((equipped.empyreal_ordnance&(!covenant.venthyr||cooldown.empyreal_ordnance.remains<167+(5*runeforge.sinful_hysteria))&!cooldown.empyreal_ordnance.ready)||equipped.soulletting_ruby&(!covenant.night_fae||cooldown.soulletting_ruby_345801.remains<114)||equipped.inscrutable_quantum_device&cooldown.inscrutable_quantum_device.ready||cooldown.tormented_insight_355321.remains>40||(equipped.the_first_sigil&(cooldown.the_first_sigil_367241.remains<20||fight_remains>cooldown.ca_inc.duration+20))||((variable.on_use_trinket=1||variable.on_use_trinket=3)&(trinket.1.ready_cooldown||trinket.1.cooldown.remains>interpolated_fight_remains-10)||variable.on_use_trinket=2&(trinket.2.ready_cooldown||trinket.2.cooldown.remains>interpolated_fight_remains-10)||variable.on_use_trinket=0))\n# Variable used to delay any trinkets and cds when waiting for an Euphoria proc\nactions+=/variable,name=thrill_seeker_wait,value=!soulbind.thrill_seeker.enabled||fight_remains>200||boss&fight_remains<25+(40-buff.thrill_seeker.stack*2)||buff.thrill_seeker.stack>38-(runeforge.sinful_hysteria*2)\n# Use Empyreal Ordnance 20secs before a CA/Inc use or so that it will line up with the end of Frenzy\nactions+=/use_item,name=empyreal_ordnance,if=cooldown.ca_inc.remains<20&cooldown.convoke_the_spirits.remains<20&(variable.thrill_seeker_wait||buff.thrill_seeker.stack>30+(runeforge.sinful_hysteria*3))&variable.in_gcd||boss&fight_remains<37\n# Use Soulleting Ruby 6secs before a CA/Inc use or so that it will line up with the end of Frenzy\nactions+=/use_item,name=soulletting_ruby,if=(cooldown.ca_inc.remains<6&!covenant.venthyr&!covenant.night_fae||covenant.night_fae&cooldown.convoke_the_spirits.remains<6&(variable.convoke_desync||cooldown.ca_inc.remains<6)||covenant.venthyr&(!runeforge.sinful_hysteria&cooldown.ca_inc.remains<6||buff.ravenous_frenzy.remains<10+(5*equipped.instructors_divine_bell)&buff.ravenous_frenzy.up)||boss&fight_remains<25||equipped.empyreal_ordnance&cooldown.empyreal_ordnance.remains>20)&variable.in_gcd&!equipped.inscrutable_quantum_device||cooldown.inscrutable_quantum_device.remains>20||boss&fight_remains<20\nactions+=/use_item,name=scars_of_fraternal_strife,if=(!buff.scars_of_fraternal_strife_4.up||buff.scars_of_fraternal_strife_4.up&buff.ca_inc.remains>20)&(cooldown.inscrutable_quantum_device.remains>20||!equipped.inscrutable_quantum_device)||boss&fight_remains<33\n# Always use IQD with CA/Inc or at the end of Frenzy\nactions+=/variable,name=iqd_condition,value=buff.ca_inc.remains>15&(!runeforge.sinful_hysteria||buff.ravenous_frenzy.remains<=15.5+(3.5*buff.bloodlust.up)+(4.5-3.5*buff.bloodlust.up)*equipped.instructors_divine_bell+4.5*(equipped.the_first_sigil&cooldown.the_first_sigil_367241.remains<=20||equipped.scars_of_fraternal_strife&buff.scars_of_fraternal_strife_4.up)&buff.ravenous_frenzy.up)||boss&fight_remains<25||equipped.empyreal_ordnance&cooldown.empyreal_ordnance.remains\nactions+=/use_item,name=inscrutable_quantum_device,if=variable.iqd_condition&variable.in_gcd\n# Use Shadowed Orb before CA/Inc\nactions+=/use_item,name=shadowed_orb_of_torment,if=(!covenant.venthyr||(cooldown.ca_inc.ready&(cooldown.berserking.remains<2||!race.troll))&variable.thrill_seeker_wait)&(!covenant.night_fae||cooldown.convoke_the_spirits.remains<20)&dot.sunfire.ticking&(dot.stellar_flare.ticking||!talent.stellar_flare.enabled||spell_targets.starfire>3)&dot.moonfire.ticking&!equipped.inscrutable_quantum_device||equipped.inscrutable_quantum_device&cooldown.inscrutable_quantum_device.remains>30&!buff.ca_inc.up||boss&fight_remains<40\n# This is a rather elaborate way to make all on use stat trinkets to be lined up with CA/Inc and Convoke and use the 2nd slot on cd if both trinkets are on use stat trinkets\nactions+=/trinket1,if=variable.on_use_trinket!=1&!trinket.2.ready_cooldown||(variable.on_use_trinket=1||variable.on_use_trinket=3)&(covenant.venthyr&buff.ca_inc.up&(buff.ravenous_frenzy.remains+(4.5*runeforge.sinful_hysteria)<=trinket.1.buff_duration&buff.ravenous_frenzy.up||buff.ravenous_frenzy_sinful_hysteria.up)||cooldown.ca_inc.remains+15>trinket.1.cooldown.duration&(!runeforge.primordial_arcanic_pulsar||buff.ca_inc.remains>6||cooldown.ca_inc.remains-trinket.1.cooldown.duration<15)&(!covenant.venthyr||!buff.ravenous_frenzy.up&cooldown.ravenous_frenzy.remains)&(!covenant.night_fae||trinket.1.cooldown.duration>cooldown.convoke_the_spirits.remains||variable.convoke_desync&trinket.1.cooldown.duration>cooldown.ca_inc.remains)&!covenant.kyrian||covenant.night_fae&variable.convoke_desync&cooldown.convoke_the_spirits.up&!cooldown.ca_inc.up&((buff.eclipse_lunar.remains>5||buff.eclipse_solar.remains>5))||buff.kindred_empowerment_energize.up)||boss&fight_remains<20||variable.on_use_trinket=0\nactions+=/trinket2,if=variable.on_use_trinket!=2&!trinket.1.ready_cooldown||variable.on_use_trinket=2&(buff.ca_inc.up&covenant.venthyr&(buff.ravenous_frenzy.remains+(4.5*runeforge.sinful_hysteria)<=trinket.2.buff_duration&buff.ravenous_frenzy.up||buff.ravenous_frenzy_sinful_hysteria.up)||cooldown.ca_inc.remains+15>trinket.2.cooldown.duration&(!runeforge.primordial_arcanic_pulsar||buff.ca_inc.remains>6||cooldown.ca_inc.remains-trinket.2.cooldown.duration<15)&(!covenant.venthyr||!buff.ravenous_frenzy.up&cooldown.ravenous_frenzy.remains)&(!covenant.night_fae||trinket.2.cooldown.duration>cooldown.convoke_the_spirits.remains||variable.convoke_desync&trinket.2.cooldown.duration>cooldown.ca_inc.remains)&!covenant.kyrian&(!buff.ca_inc.up||!covenant.venthyr)||covenant.night_fae&variable.convoke_desync&cooldown.convoke_the_spirits.up&!cooldown.ca_inc.up&((buff.eclipse_lunar.remains>5||buff.eclipse_solar.remains>5)))||buff.kindred_empowerment_energize.up||boss&fight_remains<20||variable.on_use_trinket=0\n# Uses all other on use items on cd\nactions+=/use_items\n# Either go into the st or aoe action list\nactions+=/run_action_list,name=aoe,strict=1,if=variable.is_aoe\nactions+=/run_action_list,name=st\n\n# Calculates whether the Dreamcatcher buff will fall off within the next cast\nactions.aoe=variable,name=dream_will_fall_off,value=runeforge.timeworn_dreambinder&(buff.timeworn_dreambinder.remains<gcd.max+0.1||buff.timeworn_dreambinder.remains<action.starfire.execute_time+0.1&(eclipse.in_lunar||eclipse.solar_next||eclipse.any_next))&buff.timeworn_dreambinder.up\n# Calculates whether Starsurge is worth casting over Starfire in Lunar Eclipse\nactions.aoe+=/variable,name=ignore_starsurge,value=!eclipse.in_solar&spell_targets.starfire>7-talent.soul_of_the_forest.enabled*2+eclipse.in_both&!runeforge.primordial_arcanic_pulsar&!runeforge.oneths_clear_vision\n# Use Convoke when at less than 50 AsP and line up with CA/Inc\nactions.aoe+=/convoke_the_spirits,if=((variable.convoke_desync&!cooldown.ca_inc.ready&!runeforge.primordial_arcanic_pulsar||buff.ca_inc.up&(!runeforge.primordial_arcanic_pulsar||runeforge.celestial_spirits||fight_remains>127||boss&fight_remains<cooldown.ca_inc.remains+10||buff.ca_inc.remains>12))&(((astral_power<=variable.convoke_asp||spell_targets.starfire>3)&(buff.eclipse_lunar.remains>10||buff.eclipse_solar.remains>10)||buff.ca_inc.remains>5&buff.ca_inc.remains<=12)&(!talent.stellar_drift||buff.starfall.remains<1.5-0.5*runeforge.celestial_spirits||buff.ca_inc.remains<buff.starfall.remains+5&buff.ca_inc.up)&(!runeforge.timeworn_dreambinder||!runeforge.celestial_spirits||buff.timeworn_dreambinder.remains>execute_time)||runeforge.balance_of_all_things)&(!runeforge.balance_of_all_things||(buff.balance_of_all_things_nature.stack=8||buff.balance_of_all_things_arcane.stack=8))||boss&fight_remains<10&!cooldown.ca_inc.ready)\n# Use Sunfire in pandemic on anything that lives 14secs and less with more targets and at the end of a Solar Eclipse at 14 secs or less remaining as to not having to refresh during Lunar Eclipse\nactions.aoe+=/sunfire,cycle_targets=1,if=(refreshable||buff.eclipse_solar.remains<3&eclipse.in_solar&remains<14&talent.soul_of_the_forest.enabled)&target.time_to_die>14-spell_targets+remains&(eclipse.in_any||remains<gcd.max)\n# Use Sunfire to have a global to use IQD\nactions.aoe+=/sunfire,if=variable.iqd_condition&cooldown.inscrutable_quantum_device.ready&equipped.inscrutable_quantum_device&ap_check\n# Wait a small moment after Frenzy when about to use an instant\nactions.aoe+=/wait,sec=0.15-action.ravenous_frenzy.time_since,if=covenant.venthyr&prev.1.ravenous_frenzy&action.ravenous_frenzy.time_since<0.15&(!starfire.ap_check||talent.stellar_drift.enabled&cooldown.starfall.ready||buff.starfall.refreshable)\n# Keep up Starfall at all times unless using Lycaras and it is about to proc or let the special action line below handle Dreambinder on 2 targets\nactions.aoe+=/starfall,if=!talent.stellar_drift.enabled&(!set_bonus.tier28_4pc||eclipse.in_any||spell_targets.starfall>3)&(buff.starfall.refreshable&(spell_targets.starfall<3||!runeforge.timeworn_dreambinder)||talent.soul_of_the_forest.enabled&buff.eclipse_solar.remains<3&eclipse.in_solar&buff.starfall.remains<7&spell_targets.starfall>=4)&(!runeforge.lycaras_fleeting_glimpse||time%%45>buff.starfall.remains+2)&target.time_to_die>5\n# With Stellar Drift use on cd when refreshable but still wait for Lycaras proc and don't use before CDs. Still use before Convoke since that will proc another Starfall\nactions.aoe+=/starfall,if=talent.stellar_drift.enabled&buff.starfall.refreshable&(!set_bonus.tier28_4pc||eclipse.in_any||spell_targets.starfall>3)&(!runeforge.lycaras_fleeting_glimpse||time%%45>4)&fight_remains>3\n# With Dreambinder use Starfall to keep up the buff by also using Starfall on 5 seconds or less remaining\nactions.aoe+=/starfall,if=runeforge.timeworn_dreambinder&spell_targets.starfall>=3&(!buff.timeworn_dreambinder.up&buff.starfall.refreshable||(variable.dream_will_fall_off&(buff.starfall.remains<3||spell_targets.starfall>2&talent.stellar_drift.enabled&buff.starfall.remains<5)))\n# Calculates whether a Starsurge use will cause Starfall to fall off, and use Starsurge to keep Dreambinder stack up. 80 is the required AsP to cast Starsurge+Starfall\nactions.aoe+=/variable,name=starfall_wont_fall_off,value=astral_power>80*(1-set_bonus.tier28_2pc*0.2)*(1-buff.timeworn_dreambinder.stack*0.1)-(buff.starfall.remains*3%spell_haste*!talent.stellar_drift.enabled)-(cooldown.starfall.remains*3%spell_haste*talent.stellar_drift.enabled)-(buff.fury_of_elune.remains*5)&(buff.starfall.up||cooldown.starfall.remains)\n# Use Starsurge with Dreambinder to keep up the buff without losing Starfall uptime and use Starsurge on 4+ BoAT stacks until 4 targets\nactions.aoe+=/starsurge,if=variable.dream_will_fall_off&variable.starfall_wont_fall_off&!variable.ignore_starsurge||(buff.balance_of_all_things_nature.stack>3||buff.balance_of_all_things_arcane.stack>3)&spell_targets.starfall<4&variable.starfall_wont_fall_off\n# Use swarm so that you get max uptime by using it as late as possible on less than 3 stacks or just when 3+ stacks expire\nactions.aoe+=/adaptive_swarm,cycle_targets=1,if=!ticking&!action.adaptive_swarm_damage.in_flight||dot.adaptive_swarm_damage.stack<3&dot.adaptive_swarm_damage.remains<3\n# Refresh Moonfire if CA/Inc is ready, there are less than 5 targets in Lunar Eclipse with SotF, less than 10 otherwise in any Eclipse or up to 5 targets before a Lunar Eclipse. Don't refresh during Kindred Empowerment unless in Solar Eclipse\nactions.aoe+=/moonfire,cycle_targets=1,if=refreshable&target.time_to_die>((14+(spell_targets.starfire*2*buff.eclipse_lunar.up))+remains)%(1+talent.twin_moons.enabled)&astral_power>variable.sf_cost-buff.starfall.remains*6&(ap_check||variable.ignore_starsurge||!eclipse.in_any)&(cooldown.ca_inc.ready&eclipse.in_any&(variable.convoke_desync||cooldown.convoke_the_spirits.ready||!covenant.night_fae)||spell_targets.starfire<((8-(buff.eclipse_lunar.up*3))*(1+talent.twin_moons.enabled))&!eclipse.solar_next&(!cooldown.ca_inc.ready)||(eclipse.in_solar||buff.eclipse_lunar.up&!talent.soul_of_the_forest.enabled)&(spell_targets.starfire<10*(1+talent.twin_moons.enabled)))&(!covenant.kyrian||!buff.kindred_empowerment_energize.up||eclipse.in_solar)&!buff.ravenous_frenzy_sinful_hysteria.up\n# Use FoN on cd without capping\nactions.aoe+=/force_of_nature,if=ap_check||variable.ignore_starsurge\nactions.aoe+=/variable,name=cd_condition_aoe,value=(variable.cd_condition&(buff.starfall.up||talent.stellar_drift.enabled||covenant.night_fae)&dot.moonfire.ticking&(!buff.solstice.up&!buff.ca_inc.up&(!talent.fury_of_elune.enabled||buff.ca_inc.duration>cooldown.fury_of_elune.remains+8)&(!set_bonus.tier28_2pc||eclipse.in_lunar||eclipse.solar_next)&variable.thrill_seeker_wait&(!covenant.night_fae||variable.convoke_desync||cooldown.convoke_the_spirits.remains<15)&target.time_to_die>buff.ca_inc.duration*0.7)||boss&fight_remains<buff.ca_inc.duration+12*runeforge.primordial_arcanic_pulsar)\n# Use Frenzy with CA/Inc\nactions.aoe+=/ravenous_frenzy,if=buff.ca_inc.remains>15||buff.ca_inc.duration+12*runeforge.primordial_arcanic_pulsar<26&variable.cd_condition_aoe\n# Use CA/Inc on cd unless and line it up with Convoke\nactions.aoe+=/celestial_alignment,if=variable.cd_condition_aoe&(!covenant.venthyr||!runeforge.sinful_hysteria||runeforge.primordial_arcanic_pulsar||buff.ca_inc.duration>=26)||buff.ravenous_frenzy.up&buff.ravenous_frenzy.remains<15.5\nactions.aoe+=/incarnation,if=variable.cd_condition_aoe\n# Use Empower Bond on cd with Starfall up and save for Pulsar and CA/Inc\nactions.aoe+=/empower_bond,if=(cooldown.ca_inc.remains+buff.ca_inc.duration+runeforge.primordial_arcanic_pulsar*12>cooldown.empower_bond.duration+10)||buff.ca_inc.remains>8\n# Refresh flare on up to 3 targets without CA/Inc being about to expire and not overcapping\nactions.aoe+=/stellar_flare,cycle_targets=1,if=refreshable&time_to_die>15&spell_targets.starfire<4&ap_check&(buff.ca_inc.remains>10||!buff.ca_inc.up)\n# Use FoE if inside an Eclipse and line it up with a Pulsar proc and Adaptive Swarm\nactions.aoe+=/fury_of_elune,if=eclipse.in_any&(ap_check||!runeforge.primordial_arcanic_pulsar)&(buff.primordial_arcanic_pulsar.value<250||buff.ca_inc.remains>8)&(dot.adaptive_swarm_damage.ticking||!covenant.necrolord||spell_targets>2)&(buff.ravenous_frenzy.remains<9-(4*runeforge.sinful_hysteria)&buff.ravenous_frenzy.up||!buff.ravenous_frenzy.up)&(!cooldown.ca_inc.up||buff.thrill_seeker.stack<15&fight_remains<200&fight_remains>100||!soulbind.thrill_seeker.enabled)&(soulbind.thrill_seeker.enabled||cooldown.ca_inc.remains>30)&target.time_to_die>5||boss&fight_remains<10\n# Use a Starfall Oneth proc unless Starfall is already up or you are about to overcap AsP\nactions.aoe+=/starfall,if=buff.oneths_perception.up&(buff.starfall.refreshable||astral_power>90)\n# Dump AsP before Convoke with Starfall and then Starsurge\nactions.aoe+=/starfall,if=covenant.night_fae&!talent.stellar_drift.enabled&(variable.convoke_desync||cooldown.ca_inc.up||buff.ca_inc.up)&cooldown.convoke_the_spirits.remains<gcd.max*ceil(astral_power%variable.sf_cost)&buff.starfall.remains<4\nactions.aoe+=/starsurge,if=covenant.night_fae&(variable.convoke_desync||cooldown.ca_inc.up||buff.ca_inc.up)&cooldown.convoke_the_spirits.remains<5&variable.starfall_wont_fall_off&eclipse.in_any&!variable.ignore_starsurge\n# Use Starsurge with an Oneth proc or if you'd overcap AsP with your next cast. Also dump AsP at the end of the Venthyr buff if Starfall wouldn't fall off or you are on 2 targets\nactions.aoe+=/starsurge,if=buff.oneths_clear_vision.up||(!starfire.ap_check&!variable.ignore_starsurge||(buff.ca_inc.remains<5&buff.ca_inc.up||((buff.ca_inc.remains<gcd.max*ceil(astral_power%variable.ss_cost)&buff.ca_inc.up||buff.ravenous_frenzy_sinful_hysteria.remains<gcd.max*ceil(astral_power%variable.ss_cost)&buff.ravenous_frenzy_sinful_hysteria.up)&covenant.venthyr))&(spell_targets.starfall<3||variable.starfall_wont_fall_off))&!variable.ignore_starsurge&(!runeforge.timeworn_dreambinder||spell_targets.starfall<3)\n# Use Moons in Solar Eclipse and save Full Moon for CA/Inc\nactions.aoe+=/new_moon,if=(buff.eclipse_solar.remains>execute_time||(charges=2&recharge_time<5)||charges=3)&ap_check\nactions.aoe+=/half_moon,if=(buff.eclipse_solar.remains>execute_time||(charges=2&recharge_time<5)||charges=3)&ap_check&(buff.ravenous_frenzy.remains<5&buff.ravenous_frenzy.up&!runeforge.sinful_hysteria||!buff.ravenous_frenzy.up)\nactions.aoe+=/full_moon,if=(buff.eclipse_solar.remains>execute_time&(cooldown.ca_inc.remains>50||cooldown.convoke_the_spirits.remains>50)||(charges=2&recharge_time<5)||charges=3)&ap_check&(buff.ravenous_frenzy.remains<5&buff.ravenous_frenzy.up&!runeforge.sinful_hysteria||!buff.ravenous_frenzy.up)\n# Use WoE on CD\nactions.aoe+=/warrior_of_elune\n# Calculates whether to use Starfire in Solar which is at 5 targets+1 for every 20% mastery or 4 Starsurge Empowerment stacks\nactions.aoe+=/variable,name=starfire_in_solar,value=spell_targets.starfire>4+floor(mastery_value*100%20)+floor(buff.starsurge_empowerment_solar.stack%4)\n# On 2 targets without Soul of the Forest you should fill with Wrath during Inc\nactions.aoe+=/wrath,if=!buff.ravenous_frenzy.up&!buff.ravenous_frenzy_sinful_hysteria.up&!talent.soul_of_the_forest.enabled&spell_targets.starfire<3&buff.eclipse_solar.remains>execute_time&fight_remains>buff.ca_inc.remains+12*runeforge.primordial_arcanic_pulsar\n# Calculates whether to Wrath during Frenzy\nactions.aoe+=/variable,name=wrath_in_frenzy,value=1%spell_haste<2-(0.2*((spell_targets.starfire-1)%((spell_targets.starfire-1)%20+1))*(1+talent.soul_of_the_forest.enabled*1.5))+0.15*buff.ravenous_frenzy.remains\n# Use Wrath in Solar Eclipse or if no Starfire will fit into CA/Inc anymore\nactions.aoe+=/wrath,if=(eclipse.lunar_next||eclipse.any_next&variable.is_cleave)&(target.time_to_die>4||eclipse.lunar_in_2||boss&fight_remains<10)||buff.eclipse_solar.remains<action.starfire.execute_time&buff.eclipse_solar.up||eclipse.in_solar&!variable.starfire_in_solar||buff.ca_inc.remains<action.starfire.execute_time&!variable.is_cleave&buff.ca_inc.remains<execute_time&buff.ca_inc.up||buff.ravenous_frenzy.up&variable.wrath_in_frenzy||!variable.is_cleave&buff.ca_inc.remains>execute_time\n# Use Starfire if in Lunar Eclipse, in Solar Eclipse on 4+ targets or to proc Solar Eclipse\nactions.aoe+=/starfire\n# Fallthru\nactions.aoe+=/run_action_list,name=fallthru\n\n# Starsurge for movement unless using BoAT\nactions.fallthru=starsurge,if=!runeforge.balance_of_all_things.equipped\n# Cast the dot with the most time to add until the max duration is hit. Sunfire remains multiplied to match moonfire duration\nactions.fallthru+=/sunfire,cycle_targets=1,if=dot.moonfire.remains>remains*22%18\nactions.fallthru+=/moonfire\n\n# Use Adaptive Swarm when there is no active swarm, as late as possible on swarm with 2 or fewer stacks or on a 3+ swarm so that the new swarm arrives just after that swarm expires\nactions.st=adaptive_swarm,cycle_targets=1,if=!dot.adaptive_swarm_damage.ticking&!action.adaptive_swarm_damage.in_flight&(!dot.adaptive_swarm_heal.ticking||dot.adaptive_swarm_heal.remains>5)||dot.adaptive_swarm_damage.stack<3&dot.adaptive_swarm_damage.remains<3&dot.adaptive_swarm_damage.ticking\n# Uses Convoke if CA/Inc is up or you are desyncing CA/Inc with Convoke and you are below 40/30(Celestial Spirits) AsP in a 10+ sec Eclipse. Also don't let Dreambinder expire, always use in CA/Inc with Pulsar and at the start of a BoAT window.\nactions.st+=/convoke_the_spirits,if=!druid.no_cds&((variable.convoke_desync&!cooldown.ca_inc.ready&!runeforge.primordial_arcanic_pulsar||buff.ca_inc.up&(!runeforge.primordial_arcanic_pulsar||runeforge.celestial_spirits||fight_remains>127||fight_remains<cooldown.ca_inc.remains+10||buff.ca_inc.remains>12))&((astral_power<=variable.convoke_asp&(buff.eclipse_lunar.remains>10||buff.eclipse_solar.remains>10)||buff.ca_inc.remains+2*12*runeforge.primordial_arcanic_pulsar>63||buff.ca_inc.remains>3&buff.ca_inc.remains<=12)&(!runeforge.timeworn_dreambinder||!runeforge.celestial_spirits||buff.timeworn_dreambinder.remains>execute_time)||runeforge.balance_of_all_things)&(!runeforge.balance_of_all_things||(buff.balance_of_all_things_nature.stack=8||buff.balance_of_all_things_arcane.stack=8))||boss&fight_remains<10&!cooldown.ca_inc.ready)\n# Use Starsurge to keep up the Dreambinder buff if it would expire before finishing the next cast or to dump before Convoke\nactions.st+=/starsurge,if=runeforge.timeworn_dreambinder&(!((buff.timeworn_dreambinder.remains>action.wrath.execute_time+0.1&(eclipse.in_both||eclipse.in_solar||eclipse.lunar_next)||buff.timeworn_dreambinder.remains>action.starfire.execute_time+0.1&(eclipse.in_lunar||eclipse.solar_next||eclipse.any_next))||!buff.timeworn_dreambinder.up)||(buff.ca_inc.up||variable.convoke_desync)&cooldown.convoke_the_spirits.ready&covenant.night_fae&(buff.eclipse_lunar.remains>10||buff.eclipse_solar.remains>10))&(!covenant.kyrian||cooldown.empower_bond.remains>8)\n# Dump Starsurges with Balance of All Things or to prepare for Convoke with BoAT\nactions.st+=/starsurge,if=runeforge.balance_of_all_things&((buff.balance_of_all_things_nature.stack>2||buff.balance_of_all_things_arcane.stack>2)&cooldown.ca_inc.remains>7&!cooldown.convoke_the_spirits.up||(covenant.night_fae&cooldown.convoke_the_spirits.remains<10&eclipse.in_any&astral_power>20+30*cooldown.ca_inc.ready))\n# Condition for all dots that makes sure they aren't refreshed when Ravenous Frenzy has less than 5 secs remaining or the Empower Bond buff is about to fall off or any Eclipse is about to expire\nactions.st+=/variable,name=dot_requirements,value=(buff.ravenous_frenzy.remains>5||!buff.ravenous_frenzy.up)&!buff.ravenous_frenzy_sinful_hysteria.up&(buff.kindred_empowerment_energize.remains<gcd.max)&(buff.eclipse_solar.remains>gcd.max||buff.eclipse_lunar.remains>gcd.max||(!buff.eclipse_lunar.up||!buff.eclipse_solar.up)&!talent.solstice.enabled)\n# Condition that checks if you are outside eclipse to only dot there or ignore this with Solstice\nactions.st+=/variable,name=dot_outside_eclipse,value=(!buff.eclipse_solar.up&!buff.eclipse_lunar.up)&!talent.solstice.enabled&!runeforge.timeworn_dreambinder\n# Dot all targets within Pandemic without overcapping+the above conditions\nactions.st+=/moonfire,cycle_targets=1,if=(buff.eclipse_solar.remains>remains||buff.eclipse_lunar.remains>remains||variable.dot_outside_eclipse)&refreshable&target.time_to_die>12&ap_check&variable.dot_requirements\nactions.st+=/sunfire,cycle_targets=1,if=(buff.eclipse_solar.remains>remains||buff.eclipse_lunar.remains>remains||variable.dot_outside_eclipse)&refreshable&target.time_to_die>12&ap_check&variable.dot_requirements\nactions.st+=/stellar_flare,cycle_targets=1,if=(buff.eclipse_solar.remains>remains||buff.eclipse_lunar.remains>remains||variable.dot_outside_eclipse)&refreshable&target.time_to_die>16&ap_check&variable.dot_requirements\n# Use FoN on cd without capping\nactions.st+=/force_of_nature,if=ap_check\n# Use Empower Bond with any long enough lasting Eclipse and try to line it up with Pulsar and CA/Inc\nactions.st+=/empower_bond,if=(cooldown.ca_inc.remains+buff.ca_inc.duration+runeforge.primordial_arcanic_pulsar*12>cooldown.empower_bond.duration+10)||buff.ca_inc.remains>8\n# Sets when AsP should be dumped to not overcap (Depends on Fury of Elune and the Eclipse)\nactions.st+=/variable,name=asp_dump,value=astral_power>90-(2.5*buff.fury_of_elune.stack-2*eclipse.in_lunar)\n# Use CA/Inc with Convoke/Kindred Spirits and don't overwrite Pulsar or when Bloodlust would expire before CA/Inc expires. Make sure to enter a Lunar Eclipse when usign T28 2pc and all CDs will become ready soon enough during the buff and dots have been sufficiently refreshed.\nactions.st+=/variable,name=cd_condition_st,value=!druid.no_cds&(variable.cd_condition&!buff.ca_inc.up&(((variable.asp_dump||covenant.night_fae||(covenant.kyrian&cooldown.empower_bond.ready)||runeforge.timeworn_dreambinder)&dot.sunfire.ticking&dot.moonfire.ticking&(dot.stellar_flare.ticking||!talent.stellar_flare.enabled)&variable.thrill_seeker_wait&target.time_to_die>buff.ca_inc.duration*0.7||buff.bloodlust.up&buff.bloodlust.remains<buff.ca_inc.duration+(12*runeforge.primordial_arcanic_pulsar))||(equipped.empyreal_ordnance&cooldown.empyreal_ordnance.remains<167+(5*runeforge.sinful_hysteria)))&((!covenant.night_fae||(variable.convoke_desync||cooldown.convoke_the_spirits.remains<15)&(!runeforge.balance_of_all_things||astral_power<50&cooldown.convoke_the_spirits.ready))||fight_remains<cooldown.convoke_the_spirits.remains)||fight_remains<buff.ca_inc.duration+12*runeforge.primordial_arcanic_pulsar)&(!set_bonus.tier28_2pc||eclipse.in_lunar||eclipse.solar_next||buff.primordial_arcanic_pulsar.value>=250||covenant.venthyr&fight_remains<28)\n# Use Frenzy with CA/Inc unless Frenzy would last longer than CA/Inc, then use before\nactions.st+=/ravenous_frenzy,if=buff.ca_inc.remains>15||buff.ca_inc.duration<27+runeforge.primordial_arcanic_pulsar*12&variable.cd_condition_st\nactions.st+=/celestial_alignment,if=variable.cd_condition_st&(buff.ca_inc.duration>=27+runeforge.primordial_arcanic_pulsar*12||!covenant.venthyr)||buff.ravenous_frenzy.up&buff.ravenous_frenzy.remains<9+conduit.precise_alignment.time_value+(!buff.bloodlust.up&!talent.starlord.enabled)\nactions.st+=/incarnation,if=variable.cd_condition_st\n# Variable used on abilities that want to be saved for CA/Inc so that they arent wasted just before them\nactions.st+=/variable,name=save_for_ca_inc,value=cooldown.ca_inc.remains>10+5*covenant.venthyr||!variable.convoke_desync&covenant.night_fae||druid.no_cds\n# Uses FoE if in an Eclipse and tries to line it up with Pulsar, CA/Inc, Empower Bond and Adaptive Swarm\nactions.st+=/fury_of_elune,if=eclipse.in_any&(astral_power<92-buff.fury_of_elune.stack*5||buff.ravenous_frenzy.up)&(buff.primordial_arcanic_pulsar.value<240||buff.ca_inc.remains>8)&variable.save_for_ca_inc&(!covenant.necrolord||dot.adaptive_swarm_damage.ticking)&(!covenant.venthyr||buff.ravenous_frenzy.remains<9-(4*runeforge.sinful_hysteria)&buff.ravenous_frenzy.up||!buff.ravenous_frenzy.up)&(!covenant.kyrian||cooldown.empower_bond.remains>20)&target.time_to_die>5||boss&fight_remains<10\n# Wait a small moment after Frenzy if you are about to cast a spender\nactions.st+=/wait,sec=0.15-action.ravenous_frenzy.time_since,if=covenant.venthyr&prev.1.ravenous_frenzy&action.ravenous_frenzy.time_since<0.15&variable.asp_dump\n# Use Oneth Starfall procs if Starfall isn't up\nactions.st+=/starfall,if=buff.oneths_perception.up&buff.starfall.refreshable\n# Cancel Starlord if it has less than 5s remaining, you are at 90+ AsP and the current Eclipse has 5+s remaining\nactions.st+=/cancel_buff,name=starlord,if=buff.starlord.remains<5&(buff.eclipse_solar.remains>5||buff.eclipse_lunar.remains>5)&astral_power>90\n# Sets when Pulsar should be procced early to be able to use Convoke on cooldown (Essentially becomes true if dumping AsP now will allow you to perfectly enter Pulsar and then use Convoke)\nactions.st+=/variable,name=proc_pulsar_early,value=covenant.night_fae&runeforge.primordial_arcanic_pulsar&buff.primordial_arcanic_pulsar.value+astral_power+3>=300&variable.convoke_desync&cooldown.convoke_the_spirits.remains<astral_power%30*gcd.max&eclipse.in_any&astral_power>variable.convoke_asp&cooldown.ca_inc.remains>5\n# Use Starfall with Stellar Drift or t28 4pc and no Starlord, when no Starfall is up or to proc Pulsar when above 90 AsP(or the early Pulsar proc variable is true) or adpative swarm has 8+secs remaining or is in flight\nactions.st+=/starfall,if=(talent.stellar_drift.enabled||set_bonus.tier28_4pc)&!talent.starlord.enabled&buff.starfall.refreshable&!runeforge.timeworn_dreambinder&(buff.primordial_arcanic_pulsar.value>=250&!buff.ca_inc.up&(variable.asp_dump||buff.kindred_empowerment_energize.up||variable.proc_pulsar_early)||(covenant.necrolord&talent.stellar_drift.enabled&(dot.adaptive_swarm_damage.remains>8||action.adaptive_swarm_damage.in_flight)))&(cooldown.ca_inc.remains>10||cooldown.convoke_the_spirits.remains>10)\n# Dumps AsP before Convoke using the Convoke condition to check if Convoke is actually about to be cast\nactions.st+=/starsurge,if=variable.proc_pulsar_early\n# Use Moons when you are about to/are capping charges and make sure they are in an Eclipse still for HM/FM\nactions.st+=/new_moon,if=ap_check&(charges=2&recharge_time<5||charges=3)\nactions.st+=/half_moon,if=ap_check&(charges=2&recharge_time<5||charges=3)&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.st+=/full_moon,if=ap_check&(charges=2&recharge_time<5||charges=3)&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\n# Use Starsurge Oneth procs and dump AsP when CA/Inc, Empower Bond, the Venthyr buff is about to fall off or you'd cap AsP\nactions.st+=/starsurge,if=eclipse.in_any&(buff.oneths_clear_vision.up||buff.kindred_empowerment_energize.up||buff.ca_inc.up&(!covenant.kyrian||cooldown.empower_bond.remains>5||buff.ca_inc.remains<gcd.max*floor(astral_power%variable.ss_cost))&(!covenant.venthyr||buff.ravenous_frenzy.remains<gcd.max*ceil((astral_power+40*talent.fury_of_elune.enabled)%variable.ss_cost)+3*talent.new_moon.enabled&!runeforge.sinful_hysteria&buff.ravenous_frenzy.up||buff.ravenous_frenzy_sinful_hysteria.up||(buff.ravenous_frenzy.remains<action.starfire.execute_time&spell_haste<0.4||buff.ravenous_frenzy.remains<action.wrath.execute_time||buff.primordial_arcanic_pulsar.value>=210&(astral_power>variable.ss_cost*2-5||buff.ravenous_frenzy.remains>2)&buff.ravenous_frenzy.remains<6||variable.iqd_condition&cooldown.inscrutable_quantum_device.ready&equipped.inscrutable_quantum_device)&buff.ravenous_frenzy.up||!buff.ravenous_frenzy.up&!cooldown.ravenous_frenzy.ready)||variable.asp_dump||boss&fight_remains<gcd.max*ceil(astral_power%variable.ss_cost))\n# Try to make the best of Starlord by stacking it up quickly in any Eclipse but Pulsar isn't about to be procced\nactions.st+=/starsurge,if=talent.starlord.enabled&!runeforge.timeworn_dreambinder&(buff.starlord.up||astral_power>90)&buff.starlord.stack<3&(buff.eclipse_solar.up||buff.eclipse_lunar.up)&buff.primordial_arcanic_pulsar.value<270&(cooldown.ca_inc.remains>10||!variable.convoke_desync&covenant.night_fae)\n# Estimates how much AsP are gained per second. Only takes a snapshot for the current situation so wouldn't be accurate for larger timeframes\nactions.st+=/variable,name=aspPerSec,value=eclipse.in_lunar*8%action.starfire.execute_time+!eclipse.in_lunar*(6+talent.soul_of_the_forest.enabled*3)%action.wrath.execute_time+0.45%spell_haste+0.5*talent.natures_balance.enabled\n# Dump Starsurge in an Eclipse as soon as possible as long as you will end up with 80+ when entering the next Eclipse, don't let it proc Pulsar, don't overwrite an Oneth proc and pool before CA/Inc and Empower Bond\nactions.st+=/starsurge,if=!runeforge.timeworn_dreambinder&(buff.primordial_arcanic_pulsar.value<270||buff.primordial_arcanic_pulsar.value<250&talent.stellar_drift.enabled)&(eclipse.in_solar&astral_power+variable.aspPerSec*buff.eclipse_solar.remains+dot.fury_of_elune.ticks_remain*2.5>80||eclipse.in_lunar&astral_power+variable.aspPerSec*buff.eclipse_lunar.remains+dot.fury_of_elune.ticks_remain*2.5>90)&!buff.oneths_perception.up&!talent.starlord.enabled&(cooldown.ca_inc.remains>7||soulbind.thrill_seeker.enabled&buff.thrill_seeker.stack<33-(runeforge.sinful_hysteria*2)&fight_remains>100&fight_remains<200)&(!covenant.kyrian||cooldown.empower_bond.remains>2)\n# Use Moons in any Eclipse and save Half+Full Moon for CA/Inc and Kindred Empowerment. Also use NM and FM at the end of Frenzy and don't let Dreambinder fall off\nactions.st+=/new_moon,if=ap_check&variable.save_for_ca_inc&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)\nactions.st+=/half_moon,if=ap_check&variable.save_for_ca_inc&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)&(buff.ca_inc.up||buff.primordial_arcanic_pulsar.value<=210)&(!covenant.venthyr||buff.ravenous_frenzy.remains<(5-2*runeforge.sinful_hysteria)&buff.ravenous_frenzy.up||!buff.ravenous_frenzy.up)&(!runeforge.timeworn_dreambinder||execute_time<buff.timeworn_dreambinder.remains||!buff.timeworn_dreambinder.up)\nactions.st+=/full_moon,if=ap_check&variable.save_for_ca_inc&(buff.eclipse_lunar.remains>execute_time||buff.eclipse_solar.remains>execute_time)&(buff.ca_inc.up||buff.primordial_arcanic_pulsar.value<=210)&(!covenant.kyrian||buff.kindred_empowerment_energize.up)&(!covenant.venthyr||buff.ravenous_frenzy.remains<5&buff.ravenous_frenzy.up&!runeforge.sinful_hysteria||!buff.ravenous_frenzy.up)&(!runeforge.timeworn_dreambinder||execute_time<buff.timeworn_dreambinder.remains||!buff.timeworn_dreambinder.up)\n# Use WoE on cd\nactions.st+=/warrior_of_elune\n# Use Starfire to proc Solar Eclipse, CA/Inc has less time than a Wrath execute left or only Lunar Eclipse is up. With T28 2pc enter a Solar Eclipse if Pulsar still has less than 210 stacks and CA/Inc and Convoke have more than 17s CD remaining. Use above 250% haste during Frenzy and 222% haste without Frenzy\nactions.st+=/starfire,if=eclipse.in_lunar&!buff.ravenous_frenzy.up||eclipse.solar_next||(eclipse.any_next||buff.ca_inc.remains<action.wrath.execute_time&buff.ca_inc.up)&(!set_bonus.tier28_2pc||runeforge.primordial_arcanic_pulsar&buff.primordial_arcanic_pulsar.value<210&cooldown.ca_inc.remains>17&(!covenant.night_fae||cooldown.convoke_the_spirits.remains>17)&(!race.troll||cooldown.berserking.remains>17))||eclipse.in_any&(buff.warrior_of_elune.up||spell_haste<0.45&(!covenant.venthyr||!buff.ravenous_frenzy.up)||covenant.venthyr&spell_haste<0.4)\n# Use Wrath otherwise which is in Solar Eclipse, CA/Inc or to proc Lunar Eclipse\nactions.st+=/wrath\n# Fallthru\nactions.st+=/run_action_list,name=fallthru",
				},
				["Destruction"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220604,
					["spec"] = 267,
					["desc"] = "Destruction Warlock\nMay 31, 2022\n\nChanges:\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Avoid spamming Immolate.\n- Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).",
					["lists"] = {
						["default"] = {
							{
								["enabled"] = true,
								["action"] = "spell_lock",
								["description"] = "Executed every time the actor is available.",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "havoc_active & active_enemies > 1 & active_enemies < 5 - talent.inferno.enabled + ( talent.inferno.enabled & talent.internal_combustion.enabled )",
								["strict"] = 1,
								["action"] = "call_action_list",
								["list_name"] = "havoc",
							}, -- [2]
							{
								["interrupt_if"] = "buff.volatile_solvent.up",
								["enabled"] = true,
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.roaring_blaze.enabled & debuff.roaring_blaze.remains < 1.5",
								["action"] = "conflagrate",
							}, -- [4]
							{
								["action"] = "cataclysm",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "settings.fixed_aoe_3_plus & active_enemies > 2 || ! settings.fixed_aoe_3_plus & active_enemies > 2 - set_bonus.tier28_4pc",
								["strict"] = 1,
								["action"] = "call_action_list",
								["list_name"] = "aoe",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & soul_shard <= 4 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["action"] = "soul_fire",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "remains < 3 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["action"] = "immolate",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & action.chaos_bolt.in_flight & remains < duration * 0.5",
								["action"] = "immolate",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "( pet.infernal.active || pet.blasphemy.active ) & soul_shard >= 4",
								["action"] = "chaos_bolt",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [11]
							{
								["action"] = "channel_demonfire",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "dot.immolate.remains > dot.immolate.duration * 0.5 || ! talent.internal_combustion.enabled",
								["action"] = "havoc",
								["cycle_targets"] = 1,
							}, -- [15]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [16]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.odr_shawl_of_the_ymirjar.equipped",
								["action"] = "havoc",
							}, -- [18]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "active_enemies > 1 & cooldown.havoc.remains <= 10 || buff.ritual_of_ruin.up & talent.rain_of_chaos.enabled",
								["var_name"] = "pool_soul_shards",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1.5 - 0.3 * talent.flashover.enabled & ! variable.pool_soul_shards",
								["action"] = "conflagrate",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || buff.rain_of_chaos.remains > cast_time",
								["action"] = "chaos_bolt",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.up & ! variable.pool_soul_shards",
								["action"] = "chaos_bolt",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "talent.eradication.enabled & ! variable.pool_soul_shards & debuff.eradication.remains < cast_time",
								["action"] = "chaos_bolt",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "! variable.pool_soul_shards || soul_shard >= 4.5",
								["action"] = "shadowburn",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard > 3.5",
								["action"] = "chaos_bolt",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 5 & target.time_to_die > cast_time + travel_time",
								["action"] = "chaos_bolt",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "charges > 1 || target.time_to_die < gcd",
								["action"] = "conflagrate",
							}, -- [27]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [28]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["action"] = "fel_domination",
								["criteria"] = "time > 0 & ! pet.alive",
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "talent.grimoire_of_sacrifice.enabled",
								["action"] = "grimoire_of_sacrifice",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [9]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active & ( ! cooldown.havoc.ready || active_enemies > 3 )",
								["action"] = "rain_of_fire",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc",
								["action"] = "rain_of_fire",
							}, -- [2]
							{
								["action"] = "soul_rot",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "impending_catastrophe",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "dot.immolate.remains > cast_time",
								["action"] = "channel_demonfire",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 5 & remains < 5 & ( ! talent.cataclysm.enabled || cooldown.cataclysm.remains > remains )",
								["action"] = "immolate",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 4",
								["action"] = "havoc",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["action"] = "rain_of_fire",
								["enabled"] = true,
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "havoc",
								["cycle_targets"] = 1,
							}, -- [10]
							{
								["action"] = "decimating_bolt",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "talent.fire_and_brimstone.enabled & buff.backdraft.up & soul_shard < 5 - 0.2 * active_enemies",
								["action"] = "incinerate",
							}, -- [12]
							{
								["action"] = "soul_fire",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down",
								["action"] = "conflagrate",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "target.health.pct < 20",
								["action"] = "shadowburn",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "immolate",
								["cycle_targets"] = 1,
							}, -- [16]
							{
								["action"] = "scouring_tithe",
								["enabled"] = true,
							}, -- [17]
							{
								["action"] = "incinerate",
								["enabled"] = true,
							}, -- [18]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "cooldown.summon_infernal.remains < 3 || boss & time_to_die < 42",
							}, -- [1]
							{
								["action"] = "summon_infernal",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & cooldown.summon_infernal.remains_expected > time_to_die",
								["action"] = "dark_soul_instability",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "potion",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "berserking",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "blood_fury",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active",
								["action"] = "fireblood",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.infernal.active",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "pet.infernal.active || boss & time_to_die < 21",
								["action"] = "use_items",
							}, -- [10]
						},
						["havoc"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.backdraft.down & soul_shard >= 1 & soul_shard <= 4",
								["action"] = "conflagrate",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "soul_fire",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & soulbind.lead_by_example.enabled",
								["action"] = "decimating_bolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "scouring_tithe",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.internal_combustion.enabled & remains < duration * 0.5 || ! talent.internal_combustion.enabled & refreshable",
								["action"] = "immolate",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains & ! ( set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled )",
								["action"] = "chaos_bolt",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_4pc & active_enemies > 1 & talent.inferno.enabled",
								["action"] = "rain_of_fire",
							}, -- [7]
							{
								["action"] = "shadowburn",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cast_time < havoc_remains",
								["action"] = "incinerate",
							}, -- [9]
						},
					},
					["version"] = 20220604,
					["warnings"] = "WARNING:  The import for 'default' required some automated changes.\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 5 action lists.\n",
					["profile"] = "## Destruction Warlock\n## May 31, 2022\n\n## Changes:\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Avoid spamming Immolate.\n## - Add setting to require 3 targets for AOE even with Tier 28 (to enable Chaos Bolt on 2 targets).\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat=fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/grimoire_of_sacrifice,if=talent.grimoire_of_sacrifice.enabled\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/soul_fire\nactions.precombat+=/incinerate\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions=call_action_list,name=havoc,strict=1,if=havoc_active&active_enemies>1&active_enemies<5-talent.inferno.enabled+(talent.inferno.enabled&talent.internal_combustion.enabled)\nactions+=/fleshcraft,if=soulbind.volatile_solvent,interrupt_if=buff.volatile_solvent.up\nactions+=/conflagrate,if=talent.roaring_blaze.enabled&debuff.roaring_blaze.remains<1.5\nactions+=/cataclysm\nactions+=/call_action_list,name=aoe,strict=1,if=settings.fixed_aoe_3_plus&active_enemies>2||!settings.fixed_aoe_3_plus&active_enemies>2-set_bonus.tier28_4pc\nactions+=/soul_fire,cycle_targets=1,if=refreshable&soul_shard<=4&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,cycle_targets=1,if=remains<3&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions+=/immolate,if=talent.internal_combustion.enabled&action.chaos_bolt.in_flight&remains<duration*0.5\nactions+=/chaos_bolt,if=(pet.infernal.active||pet.blasphemy.active)&soul_shard>=4\nactions+=/call_action_list,name=cds\nactions+=/channel_demonfire\nactions+=/scouring_tithe\nactions+=/decimating_bolt\nactions+=/havoc,cycle_targets=1,if=dot.immolate.remains>dot.immolate.duration*0.5||!talent.internal_combustion.enabled\nactions+=/impending_catastrophe\nactions+=/soul_rot\nactions+=/havoc,if=runeforge.odr_shawl_of_the_ymirjar.equipped\nactions+=/variable,name=pool_soul_shards,value=active_enemies>1&cooldown.havoc.remains<=10||buff.ritual_of_ruin.up&talent.rain_of_chaos\nactions+=/conflagrate,if=buff.backdraft.down&soul_shard>=1.5-0.3*talent.flashover.enabled&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=pet.infernal.active||buff.rain_of_chaos.remains>cast_time\nactions+=/chaos_bolt,if=buff.backdraft.up&!variable.pool_soul_shards\nactions+=/chaos_bolt,if=talent.eradication&!variable.pool_soul_shards&debuff.eradication.remains<cast_time\nactions+=/shadowburn,if=!variable.pool_soul_shards||soul_shard>=4.5\nactions+=/chaos_bolt,if=soul_shard>3.5\nactions+=/chaos_bolt,if=boss&fight_remains<5&target.time_to_die>cast_time+travel_time\nactions+=/conflagrate,if=charges>1||target.time_to_die<gcd\nactions+=/incinerate\n\nactions.aoe=rain_of_fire,if=pet.infernal.active&(!cooldown.havoc.ready||active_enemies>3)\nactions.aoe+=/rain_of_fire,if=set_bonus.tier28_4pc\nactions.aoe+=/soul_rot\nactions.aoe+=/impending_catastrophe\nactions.aoe+=/channel_demonfire,if=dot.immolate.remains>cast_time\nactions.aoe+=/immolate,cycle_targets=1,if=active_enemies<5&remains<5&(!talent.cataclysm.enabled||cooldown.cataclysm.remains>remains)\nactions.aoe+=/call_action_list,name=cds\nactions.aoe+=/havoc,cycle_targets=1,if=active_enemies<4\nactions.aoe+=/rain_of_fire\nactions.aoe+=/havoc,cycle_targets=1\nactions.aoe+=/decimating_bolt\nactions.aoe+=/incinerate,if=talent.fire_and_brimstone.enabled&buff.backdraft.up&soul_shard<5-0.2*active_enemies\nactions.aoe+=/soul_fire\nactions.aoe+=/conflagrate,if=buff.backdraft.down\nactions.aoe+=/shadowburn,if=target.health.pct<20\nactions.aoe+=/immolate,cycle_targets=1,if=refreshable\nactions.aoe+=/scouring_tithe\nactions.aoe+=/incinerate\n\nactions.cds=use_item,name=shadowed_orb_of_torment,if=cooldown.summon_infernal.remains<3||boss&time_to_die<42\nactions.cds+=/summon_infernal\nactions.cds+=/dark_soul_instability,if=pet.infernal.active||boss&cooldown.summon_infernal.remains_expected>time_to_die\nactions.cds+=/potion,if=pet.infernal.active\nactions.cds+=/berserking,if=pet.infernal.active\nactions.cds+=/blood_fury,if=pet.infernal.active\nactions.cds+=/fireblood,if=pet.infernal.active\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.cds+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.infernal.active\nactions.cds+=/use_items,if=pet.infernal.active||boss&time_to_die<21\n\nactions.havoc=conflagrate,if=buff.backdraft.down&soul_shard>=1&soul_shard<=4\nactions.havoc+=/soul_fire,if=cast_time<havoc_remains\nactions.havoc+=/decimating_bolt,if=cast_time<havoc_remains&soulbind.lead_by_example.enabled\nactions.havoc+=/scouring_tithe,if=cast_time<havoc_remains\nactions.havoc+=/immolate,if=talent.internal_combustion.enabled&remains<duration*0.5||!talent.internal_combustion.enabled&refreshable\nactions.havoc+=/chaos_bolt,if=cast_time<havoc_remains&!(set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled)\nactions.havoc+=/rain_of_fire,if=set_bonus.tier28_4pc&active_enemies>1&talent.inferno.enabled\nactions.havoc+=/shadowburn\nactions.havoc+=/incinerate,if=cast_time<havoc_remains",
					["author"] = "SimC",
				},
				["Arcane"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220821,
					["spec"] = 62,
					["desc"] = "Mage Arcane\nAugust 21, 2022\n\nChanges:\n- Use typical SimC handling of channel interruption instead of 'cancel_action'.\n- Change arcane_infinity to arcane_harmony (it never went live as arcane_harmony).\n- Don't Evocate in AOE just because you're out of range and not using Arcane Explosion.\n- Adjust priority to use Arcane Power's effective cooldown based on CDR effects.\n- Use strict processing to reduce CPU time due to unnecessary APL forks.\n- Moved variables/calculations to Lua module to reduce CPU time.",
					["lists"] = {
						["harmony"] = {
							{
								["enabled"] = true,
								["criteria"] = "mana.pct <= 30 & variable.outside_of_cooldowns & ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains < 10 )",
								["action"] = "evocation",
								["description"] = "If low on mana and cooldowns are coming up, go ahead and evo",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( variable.stack_harmony || time < 10 ) & buff.arcane_harmony.stack < 16 & ( active_enemies < variable.aoe_spark_target_count || variable.outside_of_cooldowns )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
								["description"] = "We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "equipped.empyreal_ordnance & time < 30 & cooldown.empyreal_ordnance.remains > 168 & ! action.empyreal_ordnance.disabled",
								["action"] = "arcane_missiles",
								["description"] = "When using Empyreal Ordnance, cast a few extra missiles while waiting for the buff at the start of the fight",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "buff.arcane_power.up & target.distance <= 10",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "variable.empowered_barrage & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains <= ( execute_time * 2 ) & target.distance > 10",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains <= ( execute_time * 2 ) & ( ! equipped.soulletting_ruby || conduit.arcane_prodigy.rank >= 5 || ( cooldown.soulletting_ruby.remains > 110 & target.distance > 10 ) || ( cooldown.soulletting_ruby.remains <= execute_time & target.distance <= 10 ) )",
								["action"] = "radiant_spark",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark & cooldown.arcane_power.remains <= execute_time & ( ! equipped.soulletting_ruby || conduit.arcane_prodigy.rank >= 5 || ( cooldown.soulletting_ruby.remains > 110 & target.distance > 10 ) || ( cooldown.soulletting_ruby.remains <= execute_time & target.distance <= 10 ) )",
								["action"] = "touch_of_the_magi",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & cooldown.radiant_spark.remains <= execute_time & variable.time_until_ap >= 20 & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns || cooldown.touch_of_the_magi.remains <= ( execute_time * 2 ) )",
								["action"] = "rune_of_power",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & prev_gcd.1.rune_of_power",
								["action"] = "radiant_spark",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark & ! variable.holding_totm",
								["action"] = "touch_of_the_magi",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.rune_of_power.up & buff.arcane_power.up & buff.arcane_harmony.stack >= 16 & buff.arcane_power.remains <= action.arcane_barrage.execute_time & buff.bloodlust.up",
								["action"] = "arcane_barrage",
								["description"] = "Use 2nd arcane barrage in AP+ROP only if Bloodlust and at least 2 CCs procced",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & buff.bloodlust.up & ( variable.time_until_ap > 30 || cooldown.radiant_spark.remains > 12 ) & ( buff.arcane_harmony.stack >= 15 || buff.clearcasting.stack >= 1 ) & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns )",
								["action"] = "rune_of_power",
								["description"] = "Use 2nd RoP in AP only if Bloodlust and 2 CCs proc",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & ( variable.time_until_ap > 30 || cooldown.radiant_spark.remains > 12 ) & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns )",
								["action"] = "rune_of_power",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & ( buff.arcane_charge.stack >= 2 || cooldown.arcane_orb.ready ) & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > 5 ) & cooldown.arcane_power.remains_expected >= 30 & ( ! conduit.arcane_prodigy.enabled || ! variable.always_sync_cooldowns )",
								["action"] = "radiant_spark",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_until_ap < 50 & variable.time_until_ap > 30 & ( ! equipped.soulletting_ruby || conduit.arcane_prodigy.rank >= 5 )",
								["action"] = "touch_of_the_magi",
								["description"] = "When running prodigy, use totm by itself in order to align it with ap",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_orb",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 3 & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_orb",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 2 & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_barrage",
								["description"] = "When doing the AoE spark sequence, you will use harmony stacks on the second spark stack to get a second barrage on the fourth",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 1 & runeforge.harmonic_echo.enabled & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_blast",
								["description"] = "When using Harmonic Echo, Arcane Blast should be used instead of Arcane Explosion for the first spark stack when doing the AoE spark sequence",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = 1 & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_explosion",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.2.radiant_spark & active_enemies >= variable.aoe_spark_target_count",
								["action"] = "arcane_explosion",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = debuff.radiant_spark_vulnerability.max_stack",
								["action"] = "arcane_barrage",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark || ( debuff.radiant_spark_vulnerability.up & debuff.radiant_spark_vulnerability.stack < debuff.radiant_spark_vulnerability.max_stack )",
								["action"] = "arcane_blast",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.bloodlust.up & cooldown.radiant_spark.remains <= 10 & buff.arcane_harmony.stack >= 16",
								["action"] = "arcane_barrage",
								["description"] = "Use mini Barrage between radiant sparks if under BL without delaying Radiant Spark ideally",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < 3 & variable.time_until_ap > 10 & ( cooldown.touch_of_the_magi.remains > 5 || ! conduit.arcane_prodigy.enabled )",
								["action"] = "arcane_orb",
								["description"] = "Use orb on cd unless ap is coming up soon",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.arcane_power.up",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.rune_of_power.remains <= action.arcane_missiles.execute_time & buff.arcane_power.up & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_harmony.stack & buff.power_infusion.up & buff.bloodlust.up",
								["action"] = "arcane_barrage",
								["description"] = "If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "buff.presence_of_mind.up & ( buff.arcane_charge.stack < buff.arcane_charge.max_stack || ! ( buff.power_infusion.up & buff.bloodlust.up ) ) & ! ( buff.arcane_charge.stack = 0 & buff.presence_of_mind.stack = 1 )",
								["action"] = "arcane_blast",
								["description"] = "If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window, so we'll only use enough blasts initially to get to four charges",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack & buff.arcane_power.up & active_enemies < variable.aoe_target_count",
								["action"] = "presence_of_mind",
								["description"] = "The best use of pom is to use it to quickly build charges during ap after they get dumped by the harmony barrage",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & active_enemies >= variable.aoe_target_count",
								["action"] = "arcane_missiles",
								["chain"] = "1",
								["description"] = "In AoE situations, CC AM is prioritized over other filler actions",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & active_enemies >= variable.aoe_target_count",
								["action"] = "arcane_barrage",
								["description"] = "In AoE situations, barrage at four charges regardless of harmony stacks",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack & active_enemies >= variable.aoe_target_count",
								["action"] = "arcane_explosion",
								["description"] = "Use Arcane Explosion as the filler in AoE situations instead of building harmony stacks with Missiles",
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "arcane_missiles",
								["description"] = "We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.",
								["interrupt"] = "1",
								["criteria"] = "buff.arcane_harmony.stack < 16",
								["chain"] = "1",
								["interrupt_global"] = "1",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & variable.empowered_barrage",
								["action"] = "arcane_barrage",
							}, -- [35]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct < 15",
								["action"] = "evocation",
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_blast",
								["description"] = "Only use blast to build charges if we already have some from orb",
							}, -- [37]
							{
								["enabled"] = true,
								["action"] = "arcane_missiles",
								["description"] = "Fill with am unless ap is coming up and we're low on mana",
								["interrupt"] = "1",
								["criteria"] = "! ( variable.time_until_ap <= 10 & mana.pct < 30 )",
								["chain"] = "1",
								["interrupt_global"] = "1",
							}, -- [38]
							{
								["enabled"] = true,
								["description"] = "Profiles with low mastery, high haste, or both may not have enough mana to support how mana intensive radiant spark can be, so we'll use fire blast and frostbolt when low on mana",
								["action"] = "fire_blast",
							}, -- [39]
							{
								["action"] = "frostbolt",
								["enabled"] = true,
							}, -- [40]
						},
						["fishing_opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "( runeforge.temporal_warp.enabled || ( runeforge.siphon_storm.enabled & ! variable.prepull_evo = 1 ) ) & ( buff.rune_of_power.down || prev_gcd.1.arcane_barrage ) & cooldown.rune_of_power.remains",
								["action"] = "evocation",
								["description"] = "When running either the SS or TW legendaries, we want to Evo before the TotM/AP window. Use it as soon as RoP has finished our we've spent our charges",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.rune_of_power.enabled & cooldown.rune_of_power.remains & cooldown.arcane_power.remains & buff.arcane_power.down & buff.rune_of_power.down & prev_gcd.1.arcane_barrage",
								["action"] = "evocation",
								["description"] = "If we've finished our cooldown windows and spent our charges, prioritize Evo over everything else",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & buff.disciplinary_command_frost.up",
								["action"] = "fire_blast",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & mana.pct > 95",
								["action"] = "frost_nova",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.arcane_harmony.enabled & buff.arcane_harmony.stack < buff.arcane_harmony.max_stack & ( ( buff.arcane_power.down & cooldown.arcane_power.ready ) || debuff.touch_of_the_magi.up )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "conduit.gift_of_the_lich",
								["action"] = "deathborne",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled",
								["action"] = "rune_of_power",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.rune_of_power.ready",
								["action"] = "arcane_orb",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.rune_of_power.ready & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_blast",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "time >= 5 + ( 1 * set_bonus.tier28_4pc )",
								["action"] = "mirrors_of_torment",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "time > 6 & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [11]
							{
								["action"] = "rune_of_power",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.clearcasting.stack = buff.clearcasting.max_stack & covenant.venthyr & cooldown.mirrors_of_torment.ready & ! variable.empowered_barrage & cooldown.arcane_power.ready",
								["action"] = "arcane_missiles",
								["description"] = "If we're at max stacks of CC and we haven't used MoT yet, use a stack to prevent munching unless running the Harmony legendary",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "potion",
								["criteria"] = "! runeforge.temporal_warp.enabled & ( ! runeforge.siphon_storm.enabled || ( variable.prepull_evo = 1 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) )",
								["description"] = "Normally we pair potion use with AP, but it will last long enough for both the RoP and AP windows unless running the SS or TW legendaries",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage",
								["action"] = "deathborne",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage",
								["action"] = "radiant_spark",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.remains < ( 6 + 2 * runeforge.siphon_storm.enabled )",
								["action"] = "mirrors_of_torment",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.rune_of_power.up & ( mana.pct < ( 25 + ( 10 * covenant.kyrian ) ) || buff.clearcasting.stack = buff.clearcasting.max_stack )",
								["action"] = "arcane_power",
								["description"] = "When running the Harmony legendary, use AP before TotM to dump a fully stacked barrage",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_power.up",
								["action"] = "arcane_barrage",
							}, -- [19]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage || prev_gcd.1.radiant_spark || ( prev_gcd.1.deathborne & ! runeforge.siphon_storm.enabled )",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down || prev_gcd.1.arcane_barrage || prev_gcd.1.radiant_spark || ( prev_gcd.1.deathborne & ! runeforge.siphon_storm.enabled )",
								["action"] = "touch_of_the_magi",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "! talent.arcane_echo.enabled & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.rune_of_power.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "dot.radiant_spark.remains > 5 || debuff.radiant_spark_vulnerability.stack > 0",
								["action"] = "arcane_blast",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.ready & mana.pct < ( 40 + ( 10 * covenant.kyrian ) ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( ! runeforge.siphon_storm.enabled || variable.prepull_evo = 1 ) & ! runeforge.temporal_warp.enabled & ! runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "We want to make sure we have enough mana for the entire AP window, even if there's still time remaining on RoP. It's only better to burn to zero and Evo if running the SS or TW legendaries.",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.arcane_power.remains <= gcd & cooldown.evocation.remains",
								["action"] = "arcane_barrage",
								["description"] = "Barrage should not be used at the end of AP if Evocation is ready as dropping charges will make it take longer to burn through remaining mana",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.rune_of_power.remains <= gcd & ! runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "Barrage should always be the last cast in the RoP window as TotM will restore the charges spent",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & talent.arcane_echo.enabled & ( buff.deathborne.down || active_enemies = 1 ) & debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time",
								["early_chain_if"] = "buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & buff.clearcasting.stack = buff.clearcasting.max_stack",
								["action"] = "arcane_missiles",
								["description"] = "If we're venthyr, immediately use CC when capped to not waste procs from MoT",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & cooldown.arcane_power.remains & ( buff.rune_of_power.up || buff.arcane_power.up )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
								["description"] = "Start using CC AM when AP has been used",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack <= variable.totm_max_charges",
								["action"] = "arcane_orb",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up || mana.pct > 15",
								["action"] = "arcane_blast",
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "evocation",
								["interrupt_if"] = "mana.pct>=85",
								["interrupt_immediate"] = "1",
								["criteria"] = "buff.rune_of_power.down & buff.arcane_power.down",
							}, -- [34]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [35]
						},
						["rotation"] = {
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & cooldown.rune_of_power.remains <= execute_time & cooldown.touch_of_the_magi.remains < 3 & ( buff.arcane_charge.stack > variable.totm_max_charges & talent.rune_of_power.enabled & variable.time_until_ap > variable.totm_max_delay_for_ap )",
								["action"] = "arcane_barrage",
								["description"] = "Use evo if we're low on mana and cooldowns are about to be up",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack > variable.totm_max_charges & cooldown.arcane_power.remains <= execute_time & mana.pct > variable.ap_minimum_mana_pct & buff.rune_of_power.down )",
								["action"] = "arcane_barrage",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack > variable.totm_max_charges & talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= execute_time & variable.time_until_ap > variable.totm_max_delay_for_ap )",
								["action"] = "arcane_barrage",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack > variable.totm_max_charges & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > variable.totm_max_delay_for_rop ) & variable.time_until_ap > variable.totm_max_delay_for_ap )",
								["action"] = "arcane_barrage",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "debuff.radiant_spark_vulnerability.stack = debuff.radiant_spark_vulnerability.max_stack & ( buff.arcane_power.down || buff.arcane_power.remains <= gcd ) & ( buff.rune_of_power.down || buff.rune_of_power.remains <= gcd )",
								["action"] = "arcane_barrage",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.just_used_spark || ( debuff.radiant_spark_vulnerability.up & debuff.radiant_spark_vulnerability.stack < debuff.radiant_spark_vulnerability.max_stack )",
								["action"] = "arcane_blast",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.presence_of_mind.up & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= action.arcane_blast.execute_time",
								["action"] = "arcane_blast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & talent.arcane_echo.enabled & ( buff.deathborne.down || active_enemies = 1 ) & ( debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time || cooldown.presence_of_mind.remains || covenant.kyrian )",
								["early_chain_if"] = "buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.expanded_potential.up",
								["action"] = "arcane_missiles",
								["description"] = "Consume the expanded potential buff asap to not lose potential procs",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & ( buff.arcane_power.up || buff.rune_of_power.up || debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.clearcasting.stack = buff.clearcasting.max_stack",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & buff.clearcasting.remains <= ( ( buff.clearcasting.stack * action.arcane_missiles.execute_time ) + gcd.max )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
								["description"] = "Always try to bank CC for cooldown windows but dump them if they're about to expire",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.arcane_power.down & debuff.touch_of_the_magi.down",
								["action"] = "nether_tempest",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack <= variable.totm_max_charges",
								["action"] = "arcane_orb",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns & mana.pct <= 95",
								["action"] = "supernova",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.rule_of_threes.up & buff.arcane_charge.stack > 3",
								["action"] = "arcane_blast",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.siphon_storm.enabled & variable.outside_of_cooldowns & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.arcane_orb.enabled & cooldown.arcane_orb.remains <= gcd & mana.pct <= 90 & cooldown.evocation.remains",
								["action"] = "arcane_barrage",
								["description"] = "Dump charges if we fall below the conserve mana threshold and evocation is still on cooldown",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & variable.outside_of_cooldowns & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.arcane_orb.enabled & cooldown.arcane_orb.remains <= gcd & mana.pct <= 90 & cooldown.evocation.remains < 30",
								["action"] = "arcane_barrage",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns & buff.arcane_charge.stack = buff.arcane_charge.max_stack & talent.arcane_orb.enabled & cooldown.arcane_orb.remains <= gcd & mana.pct <= 90 & cooldown.evocation.remains & ( ! runeforge.siphon_storm.enabled || buff.siphon_storm.remains <= 18 )",
								["action"] = "arcane_barrage",
								["description"] = "Dump charges if orb is ready",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.arcane_power.remains <= gcd & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( cooldown.evocation.remains || runeforge.arcane_harmony.enabled )",
								["action"] = "arcane_barrage",
								["description"] = "Arcane Barrage should generally be the last cast of the AP window",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.rune_of_power.remains <= gcd & buff.arcane_charge.stack = buff.arcane_charge.max_stack & ( cooldown.evocation.remains || runeforge.arcane_harmony.enabled )",
								["action"] = "arcane_barrage",
								["description"] = "Arcane Barrage should generally be the last cast of the RoP window",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= gcd & buff.arcane_charge.stack = buff.arcane_charge.max_stack",
								["action"] = "arcane_barrage",
								["description"] = "Arcane Barrage should be the last cast of the TotM window if it is not used with RoP or AP",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.arcane_charge.stack >= ( active_enemies - 1 ) & active_enemies > 1 & buff.deathborne.down",
								["action"] = "arcane_barrage",
								["description"] = "When the target is in execute range and there is more than one enemy, use barrage as soon as you have enough charges to hit all enemies if the Arcane Bombardment legendary is equipped",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "variable.empowered_barrage & buff.arcane_charge.stack < buff.arcane_charge.max_stack & active_enemies > 1 & buff.deathborne.down",
								["action"] = "arcane_explosion",
							}, -- [24]
							{
								["action"] = "arcane_blast",
								["enabled"] = true,
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns",
								["action"] = "evocation",
							}, -- [26]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [27]
						},
						["cooldowns"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.remains > 30 & cooldown.touch_of_the_magi.ready & ( buff.arcane_charge.stack <= variable.totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frost_nova",
								["description"] = "Prioritize using grisly icicle with ap. Use it with totm otherwise.",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.ready & ( ! talent.enlightened.enabled || ( talent.enlightened.enabled & mana.pct >= 70 ) ) & ( ( cooldown.touch_of_the_magi.remains > 10 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack = 0 ) ) & buff.rune_of_power.down & mana.pct >= variable.ap_minimum_mana_pct",
								["action"] = "frost_nova",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ( buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down ) & cooldown.touch_of_the_magi.remains = 0 & ( buff.arcane_charge.stack <= variable.totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frostbolt",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down & prev_gcd.1.frostbolt",
								["action"] = "fire_blast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.siphon_storm.enabled & cooldown.touch_of_the_magi.remains <= 9 - ( 3 * set_bonus.tier28_4pc ) & cooldown.arcane_power.remains <= 10 - ( 3 * set_bonus.tier28_4pc )",
								["action"] = "mirrors_of_torment",
								["description"] = "Pair MoT with AP if it's coming up soon. If it will be used with TotM, cast it slightly before",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & buff.siphon_storm.up & cooldown.touch_of_the_magi.remains <= 9 - ( 3 * set_bonus.tier28_4pc ) & cooldown.arcane_power.remains <= 10 - ( 3 * set_bonus.tier28_4pc )",
								["action"] = "mirrors_of_torment",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns & ( soulbind.volatile_solvent.enabled || soulbind.pustule_eruption.enabled )",
								["action"] = "fleshcraft",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.siphon_storm.enabled & cooldown.touch_of_the_magi.remains <= 15 & cooldown.arcane_power.remains <= 16",
								["action"] = "deathborne",
								["description"] = "Always use deathborne with ap. If totm is ready as well, make sure to cast it before totm.",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & prev_gcd.1.evocation",
								["action"] = "deathborne",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.ready & ( ! talent.enlightened.enabled || ( talent.enlightened.enabled & mana.pct >= 70 ) ) & ( ( cooldown.touch_of_the_magi.remains > 10 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.ready & buff.arcane_charge.stack = 0 ) ) & buff.rune_of_power.down & mana.pct >= variable.ap_minimum_mana_pct",
								["action"] = "deathborne",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains > variable.rs_max_delay_for_totm & cooldown.arcane_power.remains > variable.rs_max_delay_for_ap & ( talent.rune_of_power.enabled & ( cooldown.rune_of_power.remains < execute_time || cooldown.rune_of_power.remains > variable.rs_max_delay_for_rop ) || ! talent.rune_of_power.enabled ) & buff.arcane_charge.stack > 2 & debuff.touch_of_the_magi.down & buff.rune_of_power.down & buff.arcane_power.down",
								["action"] = "radiant_spark",
								["description"] = "Use spark if totm and ap are on cd and won't be up for longer than the max delay, making sure we have at least two arcane charges and that totm wasn't just used.",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains < execute_time & buff.arcane_charge.stack <= variable.totm_max_charges & cooldown.arcane_power.remains < ( execute_time + action.touch_of_the_magi.execute_time )",
								["action"] = "radiant_spark",
								["description"] = "Use spark with ap when possible. If totm is ready as well, make sure to cast it before totm.",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains < execute_time & ( ( ! talent.enlightened.enabled || ( talent.enlightened.enabled & mana.pct >= 70 ) ) & ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack = 0 ) ) & buff.rune_of_power.down & mana.pct >= variable.ap_minimum_mana_pct )",
								["action"] = "radiant_spark",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( ! runeforge.siphon_storm.enabled || buff.siphon_storm.up ) & buff.arcane_charge.stack <= variable.totm_max_charges & cooldown.arcane_power.remains <= execute_time & mana.pct > variable.ap_minimum_mana_pct & buff.rune_of_power.down",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & cooldown.touch_of_the_magi.remains <= ( action.evocation.execute_time + 13 )",
								["action"] = "evocation",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & buff.arcane_power.down & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains > 10",
								["action"] = "rune_of_power",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & prev_gcd.1.rune_of_power",
								["action"] = "touch_of_the_magi",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & covenant.venthyr & cooldown.arcane_power.remains <= execute_time",
								["action"] = "touch_of_the_magi",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & ( ! runeforge.siphon_storm.enabled || buff.siphon_storm.up ) & buff.arcane_charge.stack <= variable.totm_max_charges & cooldown.arcane_power.remains <= execute_time & mana.pct > variable.ap_minimum_mana_pct & buff.rune_of_power.down",
								["action"] = "touch_of_the_magi",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & buff.arcane_charge.stack <= variable.totm_max_charges & talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= execute_time & variable.time_until_ap > variable.totm_max_delay_for_ap",
								["action"] = "touch_of_the_magi",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & buff.arcane_charge.stack <= variable.totm_max_charges & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > variable.totm_max_delay_for_rop ) & variable.time_until_ap > variable.totm_max_delay_for_ap",
								["action"] = "touch_of_the_magi",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "( ! set_bonus.tier28_2pc || ! covenant.venthyr ) & buff.arcane_power.down & ( cooldown.touch_of_the_magi.remains > variable.rop_max_delay_for_totm || cooldown.arcane_power.remains <= variable.totm_max_delay_for_ap ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack & cooldown.arcane_power.remains > 10 & cooldown.touch_of_the_magi.remains > 10",
								["action"] = "rune_of_power",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "variable.outside_of_cooldowns",
								["action"] = "shifting_power",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "talent.rune_of_power.enabled & buff.arcane_power.up & buff.rune_of_power.remains < gcd.max",
								["action"] = "presence_of_mind",
								["description"] = "Use pom to squeeze an extra ab in the next cooldown window, unless kyrian then only during arcane power due to how mana hungry radiant spark is",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains < action.arcane_missiles.execute_time & ! covenant.kyrian",
								["action"] = "presence_of_mind",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.rune_of_power.remains < gcd.max & cooldown.evocation.ready & cooldown.touch_of_the_magi.remains & ! covenant.kyrian",
								["action"] = "presence_of_mind",
							}, -- [27]
						},
						["default"] = {
							{
								["action"] = "counterspell",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( talent.enlightened.enabled & mana.pct <= 80 & mana.pct >= 65 ) || ( ! talent.enlightened.enabled & mana.pct <= 85 )",
								["action"] = "mana_gem",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "potion",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.temporal_warp.enabled & buff.exhaustion.up & ( cooldown.arcane_power.ready || boss & fight_remains <= 40 )",
								["action"] = "time_warp",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down",
								["action"] = "lights_judgment",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down",
								["action"] = "bag_of_tricks",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "berserking",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "blood_fury",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "fireblood",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "ancestral_call",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up",
								["action"] = "use_items",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up || cooldown.arcane_power.remains >= 55 & debuff.touch_of_the_magi.up",
								["action"] = "gladiators_badge",
								["effect_name"] = "gladiators_badge",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "covenant.kyrian & cooldown.arcane_power.remains <= 10 & cooldown.touch_of_the_magi.remains <= 10 & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "! covenant.kyrian & cooldown.arcane_power.remains <= 6 & cooldown.touch_of_the_magi.remains <= 6 & time > 30 & ( ! covenant.venthyr || active_enemies < variable.aoe_target_count ) & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "cooldown.arcane_power.remains <= 15 & cooldown.touch_of_the_magi.remains <= 15",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "cooldown.arcane_power.remains <= 7 & cooldown.touch_of_the_magi.remains <= 7",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
								["criteria"] = "cooldown.arcane_power.remains >= 20 || ! variable.ap_on_use = 1 || ( time = 0 & variable.fishing_opener = 1 & runeforge.siphon_storm.enabled )",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains >= 20 || ! variable.ap_on_use",
								["name"] = "mrrgrias_favor",
							}, -- [19]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
								["criteria"] = "cooldown.arcane_power.remains >= 20 || ! variable.ap_on_use = 1 || ( time = 0 & variable.fishing_opener = 1 & runeforge.siphon_storm.enabled )",
							}, -- [20]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
								["criteria"] = "cooldown.arcane_power.remains <= 5 & ( ! variable.fishing_opener = 1 || time > 30 )",
							}, -- [21]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
								["criteria"] = "cooldown.arcane_power.remains <= 5 & variable.fishing_opener = 1 & buff.rune_of_power.up & buff.rune_of_power.remains <= ( 10 - 5 * runeforge.siphon_storm.enabled ) & time < 30",
							}, -- [22]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "time = 0 || ( variable.outside_of_cooldowns & ( ( covenant.kyrian & cooldown.radiant_spark.remains <= 2 & cooldown.arcane_power.remains <= 5 & cooldown.touch_of_the_magi.remains <= 5 ) || cooldown.arcane_power.remains <= 2 || fight_remains < cooldown.arcane_power.remains ) )",
							}, -- [23]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( variable.time_until_ap + ( action.radiant_spark.execute_time * covenant.kyrian ) + ( action.deathborne.execute_time * covenant.necrolord ) + action.touch_of_the_magi.execute_time < target.distance / 5.6 ) & ( variable.have_opened || ( covenant.kyrian & runeforge.arcane_infinity.enabled ) ) & target.distance > 25",
								["description"] = "5.6 is the speed of the Soulletting Ruby projectile",
							}, -- [24]
							{
								["enabled"] = true,
								["name"] = "neural_synapse_enhancer",
								["action"] = "neural_synapse_enhancer",
								["criteria"] = "( buff.arcane_power.up & cooldown.touch_of_the_magi.remains > 40 ) || ( cooldown.arcane_power.remains >= 20 & debuff.touch_of_the_magi.up )",
							}, -- [25]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
								["criteria"] = "cooldown.arcane_power.remains >= 30 || ! variable.ap_on_use = 1",
							}, -- [26]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.venthyr & runeforge.siphon_storm.enabled & talent.arcane_echo.enabled & active_enemies >= variable.aoe_target_count",
								["list_name"] = "vaoe",
							}, -- [27]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies >= variable.aoe_target_count & ! ( covenant.kyrian & runeforge.arcane_infinity.enabled )",
								["list_name"] = "aoe",
							}, -- [28]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "covenant.kyrian & runeforge.arcane_harmony.enabled",
								["list_name"] = "harmony",
							}, -- [29]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.have_opened = 0 & variable.fishing_opener & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "fishing_opener",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.have_opened = 0 & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "opener",
							}, -- [31]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "cooldowns",
							}, -- [32]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.final_burn = 0 & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "rotation",
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "variable.final_burn = 1 & ! ( covenant.kyrian & runeforge.arcane_harmony.enabled )",
								["list_name"] = "final_burn",
							}, -- [34]
						},
						["precombat"] = {
							{
								["action"] = "arcane_intellect",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "summon_arcane_familiar",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "conjure_mana_gem",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "mirror_image",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled || soulbind.pustule_eruption.enabled",
								["action"] = "fleshcraft",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "covenant.kyrian & runeforge.arcane_harmony.enabled & conduit.arcane_prodigy.enabled & variable.always_sync_cooldowns & active_enemies < variable.aoe_target_count",
								["action"] = "rune_of_power",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "! variable.prepull_evo = 1 & runeforge.disciplinary_command.enabled",
								["action"] = "frostbolt",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "! variable.prepull_evo = 1 & ! runeforge.disciplinary_command.enabled & ( ! covenant.venthyr || variable.fishing_opener )",
								["action"] = "arcane_blast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "! variable.prepull_evo = 1 & ! runeforge.disciplinary_command.enabled & covenant.venthyr & ! variable.fishing_opener",
								["action"] = "mirrors_of_torment",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "variable.prepull_evo = 1",
								["action"] = "evocation",
							}, -- [10]
						},
						["aoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ( buff.arcane_power.down & buff.rune_of_power.down & debuff.touch_of_the_magi.down ) & cooldown.touch_of_the_magi.remains = 0 & ( buff.arcane_charge.stack <= variable.aoe_totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frostbolt",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "( runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down & prev_gcd.1.frostbolt ) || ( runeforge.disciplinary_command.enabled & time = 0 )",
								["action"] = "fire_blast",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.remains > 30 & cooldown.touch_of_the_magi.remains = 0 & ( buff.arcane_charge.stack <= variable.aoe_totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "frost_nova",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & cooldown.arcane_power.remains = 0 & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
								["action"] = "frost_nova",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & runeforge.arcane_infinity.enabled & buff.arcane_harmony.stack < 15 & cooldown.touch_of_the_magi.remains <= variable.harmony_stack_time + execute_time & cooldown.arcane_power.remains <= variable.harmony_stack_time + execute_time + action.touch_of_the_magi.execute_time",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & talent.arcane_echo.enabled & time < 10 & cooldown.mirrors_of_torment.remains & buff.clearcasting.stack < 3",
								["action"] = "arcane_blast",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "runeforge.siphon_storm.enabled & prev_gcd.1.evocation",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & prev_gcd.1.evocation",
								["action"] = "touch_of_the_magi",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.siphon_storm.enabled & ( prev_gcd.1.evocation || prev_gcd.1.touch_of_the_magi )",
								["action"] = "arcane_power",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.arcane_infinity.enabled & cooldown.touch_of_the_magi.remains <= 10 & cooldown.arcane_power.remains <= 15",
								["action"] = "mirrors_of_torment",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains <= 8 & cooldown.touch_of_the_magi.remains <= 8 & ( buff.arcane_charge.stack <= variable.aoe_totm_max_charges & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > 5 ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > 5 ) || cooldown.arcane_power.remains <= gcd ) )",
								["action"] = "mirrors_of_torment",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "time > 30 & runeforge.siphon_storm.enabled & covenant.venthyr & prev_gcd.1.mirrors_of_torment",
								["action"] = "evocation",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "time > 30 & runeforge.siphon_storm.enabled & buff.arcane_charge.stack <= variable.aoe_totm_max_charges & cooldown.touch_of_the_magi.remains = 0 & cooldown.arcane_power.remains <= gcd",
								["action"] = "evocation",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "evocation",
								["interrupt_if"] = "buff.siphon_storm.stack=buff.siphon_storm.max_stack",
								["interrupt_immediate"] = "1",
								["criteria"] = "time > 30 & runeforge.siphon_storm.enabled & cooldown.arcane_power.remains = 0 & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "cooldown.radiant_spark.ready & cooldown.touch_of_the_magi.remains <= gcd.max & cooldown.arcane_power.remains <= gcd.max",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains < execute_time & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd )",
								["action"] = "radiant_spark",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains < execute_time & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
								["action"] = "radiant_spark",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.remains = 0 & ( ( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down )",
								["action"] = "deathborne",
							}, -- [18]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
								["criteria"] = "( buff.arcane_charge.stack <= variable.aoe_totm_max_charges || prev_gcd.1.radiant_spark ) & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & runeforge.arcane_infinity.enabled & cooldown.mirrors_of_torment.remains <= 50",
								["action"] = "touch_of_the_magi",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & runeforge.arcane_infinity.enabled & buff.mirrors_of_torment.remains <= 20 & cooldown.arcane_power.remains <= gcd",
								["action"] = "touch_of_the_magi",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "( buff.arcane_charge.stack <= variable.aoe_totm_max_charges || prev_gcd.1.radiant_spark ) & ( ( talent.rune_of_power.enabled & cooldown.rune_of_power.remains <= gcd & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || ( ! talent.rune_of_power.enabled & cooldown.arcane_power.remains > variable.totm_max_delay_for_ap ) || cooldown.arcane_power.remains <= gcd ) & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
								["action"] = "touch_of_the_magi",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "( ( cooldown.touch_of_the_magi.remains > variable.ap_max_delay_for_totm & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & buff.rune_of_power.down & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
								["action"] = "arcane_power",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & ( ( cooldown.touch_of_the_magi.remains > 20 & buff.arcane_charge.stack = buff.arcane_charge.max_stack ) || ( cooldown.touch_of_the_magi.remains = 0 & buff.arcane_charge.stack <= variable.aoe_totm_max_charges ) ) & ( cooldown.arcane_power.remains > 12 || debuff.touch_of_the_magi.up ) & ! ( soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled )",
								["action"] = "rune_of_power",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_orb.remains > 5 || ! talent.arcane_orb.enabled",
								["action"] = "shifting_power",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & cooldown.radiant_spark.remains <= execute_time",
								["action"] = "rune_of_power",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & ( buff.arcane_charge.stack >= 2 || cooldown.touch_of_the_magi.remains <= execute_time )",
								["action"] = "radiant_spark",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & prev_gcd.1.radiant_spark",
								["action"] = "touch_of_the_magi",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.effusive_anima_accelerator.enabled & runeforge.harmonic_echo.enabled & prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.harmonic_echo.enabled & debuff.radiant_spark_vulnerability.stack = 1",
								["action"] = "arcane_explosion",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.harmonic_echo.enabled & ( prev_gcd.1.radiant_spark || ( prev_gcd.2.radiant_spark & debuff.touch_of_the_magi.up ) )",
								["action"] = "arcane_explosion",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.harmonic_echo.enabled & debuff.radiant_spark_vulnerability.stack = 3",
								["action"] = "arcane_orb",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & talent.arcane_echo.enabled & debuff.touch_of_the_magi.up",
								["action"] = "arcane_missiles",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= buff.presence_of_mind.max_stack * action.arcane_blast.execute_time & ( ( talent.resonance.enabled & active_enemies < 4 ) || active_enemies < 5 ) & ( ! runeforge.arcane_bombardment.enabled || target.health.pct > 35 )",
								["action"] = "presence_of_mind",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & ( ( talent.resonance.enabled & active_enemies < 4 ) || active_enemies < 5 ) & ( ! runeforge.arcane_bombardment.enabled || target.health.pct > 35 )",
								["action"] = "arcane_blast",
							}, -- [35]
							{
								["action"] = "supernova",
								["enabled"] = true,
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack >= ( active_enemies - 1 ) & runeforge.arcane_bombardment.enabled & target.health.pct < 35",
								["action"] = "arcane_barrage",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack",
								["action"] = "arcane_barrage",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = 0 & ( cooldown.arcane_power.remains > 15 || ! ( covenant.kyrian & runeforge.arcane_harmony.enabled ) )",
								["action"] = "arcane_orb",
							}, -- [39]
							{
								["enabled"] = true,
								["criteria"] = "( refreshable || ! ticking ) & buff.arcane_charge.stack = buff.arcane_charge.max_stack",
								["action"] = "nether_tempest",
							}, -- [40]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & runeforge.arcane_harmony.enabled & ( ( talent.amplification.enabled & active_enemies < 8 ) || active_enemies < 5 )",
								["action"] = "arcane_missiles",
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & talent.amplification.enabled & active_enemies < 4",
								["action"] = "arcane_missiles",
							}, -- [42]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_explosion",
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & prev_gcd.1.arcane_barrage",
								["action"] = "arcane_explosion",
							}, -- [44]
						},
						["vaoe"] = {
							{
								["enabled"] = true,
								["criteria"] = "time < 7",
								["action"] = "rune_of_power",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "time < 7",
								["action"] = "arcane_orb",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "time < 7",
								["action"] = "arcane_explosion",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "prev_gcd.1.mirrors_of_torment & ( ! equipped.the_first_sigil || cooldown.the_first_sigil.remains )",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains <= ( action.evocation.execute_time + 13 ) & cooldown.arcane_power.remains <= ( action.evocation.execute_time + 14 )",
								["action"] = "evocation",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "time > 6 & cooldown.touch_of_the_magi.remains <= 9 & buff.siphon_storm.up",
								["action"] = "mirrors_of_torment",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.siphon_storm.remains > 20 & ! debuff.mirrors_of_torment.up",
								["action"] = "arcane_explosion",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "debuff.mirrors_of_torment.up & time < 13",
								["action"] = "arcane_blast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "debuff.mirrors_of_torment.remains >= 19 & cooldown.touch_of_the_magi.remains",
								["action"] = "arcane_blast",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & cooldown.touch_of_the_magi.remains <= execute_time & cooldown.arcane_power.remains > 10",
								["action"] = "rune_of_power",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "time >= 13 & cooldown.arcane_power.remains <= execute_time",
								["action"] = "touch_of_the_magi",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "time > 30 & prev_gcd.1.rune_of_power",
								["action"] = "touch_of_the_magi",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.touch_of_the_magi",
								["action"] = "arcane_power",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & buff.siphon_storm.remains > 24 & ! debuff.touch_of_the_magi.down",
								["action"] = "arcane_explosion",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.touch_of_the_magi.remains <= 8 & cooldown.rune_of_power.remains <= 9 & buff.arcane_charge.stack = buff.arcane_charge.max_stack & active_enemies < 6 - ( 1 * set_bonus.tier28_2pc )",
								["action"] = "arcane_blast",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 9 - ( 1 * set_bonus.tier28_2pc ) & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time",
								["early_chain_if"] = "buff.clearcasting_channel.down&active_enemies<6",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react",
								["action"] = "arcane_missiles",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = 0 & cooldown.arcane_power.remains > 15",
								["action"] = "arcane_orb",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "time > 10 & buff.arcane_charge.stack = buff.arcane_charge.max_stack & cooldown.touch_of_the_magi.remains & ( buff.siphon_storm.remains < 25 || buff.siphon_storm.down & cooldown.touch_of_the_magi.remains >= 11 )",
								["action"] = "arcane_barrage",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_explosion",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack = buff.arcane_charge.max_stack & prev_gcd.1.arcane_barrage",
								["action"] = "arcane_explosion",
							}, -- [21]
						},
						["opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & buff.disciplinary_command_frost.up",
								["action"] = "fire_blast",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & mana.pct > 95",
								["action"] = "frost_nova",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["action"] = "soulletting_ruby",
							}, -- [3]
							{
								["action"] = "deathborne",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct > 40",
								["action"] = "radiant_spark",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr",
								["action"] = "rune_of_power",
							}, -- [6]
							{
								["action"] = "mirrors_of_torment",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down & cooldown.arcane_power.remains",
								["action"] = "shifting_power",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.arcane_power.ready & buff.arcane_charge.stack < buff.arcane_charge.max_stack",
								["action"] = "arcane_orb",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & cooldown.mirrors_of_torment.remains > 84",
								["action"] = "arcane_blast",
							}, -- [10]
							{
								["action"] = "touch_of_the_magi",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "arcane_power",
								["enabled"] = true,
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.down",
								["action"] = "rune_of_power",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! talent.arcane_echo.enabled & debuff.touch_of_the_magi.up & debuff.touch_of_the_magi.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.rune_of_power.remains <= ( action.arcane_blast.execute_time * buff.presence_of_mind.max_stack )",
								["action"] = "presence_of_mind",
								["description"] = "If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "dot.radiant_spark.remains > 5 || debuff.radiant_spark_vulnerability.stack > 0",
								["action"] = "arcane_blast",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_power.up & buff.arcane_power.remains < gcd & runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "Always Barrage at the end of AP when running the Arcane Harmony legendary",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up & buff.arcane_power.down & buff.rune_of_power.remains <= gcd & runeforge.arcane_harmony.enabled",
								["action"] = "arcane_barrage",
								["description"] = "Always Barrage at the end of the RoP window when running the Arcane Harmony legendary",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "debuff.touch_of_the_magi.up & talent.arcane_echo.enabled & ( buff.deathborne.down || active_enemies = 1 ) & debuff.touch_of_the_magi.remains > action.arcane_missiles.execute_time",
								["early_chain_if"] = "buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.stack = buff.clearcasting.max_stack & covenant.venthyr",
								["action"] = "arcane_missiles",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react & cooldown.arcane_power.remains & ( buff.rune_of_power.up || buff.arcane_power.up )",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.arcane_charge.stack <= variable.totm_max_charges",
								["action"] = "arcane_orb",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.up || mana.pct > 15",
								["action"] = "arcane_blast",
							}, -- [23]
							{
								["enabled"] = true,
								["action"] = "evocation",
								["interrupt_if"] = "mana.pct>=85",
								["interrupt_immediate"] = "1",
								["criteria"] = "buff.rune_of_power.down & buff.arcane_power.down",
							}, -- [24]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [25]
						},
						["final_burn"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.clearcasting.react",
								["action"] = "arcane_missiles",
								["chain"] = "1",
							}, -- [1]
							{
								["action"] = "arcane_blast",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "arcane_barrage",
								["enabled"] = true,
							}, -- [3]
						},
					},
					["version"] = 20220821,
					["warnings"] = "WARNING:  The import for 'opener' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 14: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'fishing_opener' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 11: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 23: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 29: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'rotation' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 17: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 18: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'vaoe' required some automated changes.\nLine 4: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 14: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 15: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 19: Unsupported use_item action [ mrrgrias_favor]; entry disabled.\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 27: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 27: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 29: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 30: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 32: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 33: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 34: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 12: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 13: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 16: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 19: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 22: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 23: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 23: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 25: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 27: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 27: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 29: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 29: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 30: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 32: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 33: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 34: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 34: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 35: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 35: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 37: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 39: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 41: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 41: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 42: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'harmony' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 6: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (2x).\nLine 7: Converted 'trinket.abc.cooldown' to 'cooldown.abc' (2x).\nLine 9: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 13: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 14: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 15: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\n\nWARNING:  The import for 'cooldowns' required some automated changes.\nLine 1: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 11: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 14: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 15: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 22: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 25: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nImported 10 action lists.\n",
					["author"] = "SimulationCraft",
					["profile"] = "## Mage Arcane\n## August 21, 2022\n\n## Changes:\n## - Use typical SimC handling of channel interruption instead of 'cancel_action'.\n## - Change arcane_infinity to arcane_harmony (it never went live as arcane_harmony).\n## - Don't Evocate in AOE just because you're out of range and not using Arcane Explosion.\n## - Adjust priority to use Arcane Power's effective cooldown based on CDR effects.\n## - Use strict processing to reduce CPU time due to unnecessary APL forks.\n## - Moved variables/calculations to Lua module to reduce CPU time.\n\nactions.precombat+=/arcane_intellect\nactions.precombat+=/arcane_familiar\nactions.precombat+=/conjure_mana_gem\n## actions.precombat+=/variable,name=aoe_target_count,op=reset,default=3\n## actions.precombat+=/variable,name=evo_pct,op=reset,default=15\n## actions.precombat+=/variable,name=prepull_evo,op=set,if=(runeforge.siphon_storm&(covenant.venthyr||covenant.necrolord||conduit.arcane_prodigy)),value=1,value_else=0\n## actions.precombat+=/variable,name=have_opened,op=set,if=active_enemies>=variable.aoe_target_count,value=1,value_else=0\n## actions.precombat+=/variable,name=final_burn,op=set,value=0\n## actions.precombat+=/variable,name=harmony_stack_time,op=reset,default=9\n## actions.precombat+=/variable,name=always_sync_cooldowns,op=reset,default=0\n## actions.precombat+=/variable,name=rs_max_delay_for_totm,op=reset,default=5\n## actions.precombat+=/variable,name=rs_max_delay_for_rop,op=reset,default=5\n## actions.precombat+=/variable,name=rs_max_delay_for_ap,op=reset,default=20\n## actions.precombat+=/variable,name=mot_preceed_totm_by,op=reset,default=8\n## actions.precombat+=/variable,name=mot_max_delay_for_totm,op=reset,default=10\n## actions.precombat+=/variable,name=mot_max_delay_for_ap,op=reset,default=15\n## actions.precombat+=/variable,name=ap_max_delay_for_totm,op=reset,if=conduit.arcane_prodigy,value=30,value_else=10\n## actions.precombat+=/variable,name=ap_max_delay_for_totm,op=reset,default=20\n## actions.precombat+=/variable,name=ap_max_delay_for_mot,op=reset,default=20\n## actions.precombat+=/variable,name=rop_max_delay_for_totm,op=set,value=20-(5*conduit.arcane_prodigy)\n## actions.precombat+=/variable,name=totm_max_delay_for_ap,op=set,value=5+20*(covenant.night_fae||(conduit.arcane_prodigy&active_enemies<variable.aoe_target_count))+15*(covenant.kyrian&runeforge.arcane_harmony&active_enemies>=variable.aoe_target_count)\n## actions.precombat+=/variable,name=totm_max_delay_for_rop,op=set,value=20-(8*conduit.arcane_prodigy)\n## actions.precombat+=/variable,name=barrage_mana_pct,op=set,if=covenant.night_fae,value=60-(mastery_value*100)\n## actions.precombat+=/variable,name=barrage_mana_pct,op=set,if=covenant.kyrian,value=95-(mastery_value*100)\n## actions.precombat+=/variable,name=barrage_mana_pct,op=set,if=variable.barrage_mana_pct=0,value=80-(mastery_value*100)\n## actions.precombat+=/variable,name=ap_minimum_mana_pct,op=reset,default=15\n## actions.precombat+=/variable,name=totm_max_charges,op=reset,default=2\n## actions.precombat+=/variable,name=aoe_totm_max_charges,op=reset,default=2\n## actions.precombat+=/variable,name=fishing_opener,op=set,value=1*(equipped.empyreal_ordnance||(talent.rune_of_power&(talent.arcane_echo||!covenant.kyrian)&(!covenant.necrolord||active_enemies=1||runeforge.siphon_storm)&!covenant.venthyr))\n## actions.precombat+=/variable,name=ap_on_use,op=set,value=equipped.macabre_sheet_music||equipped.gladiators_badge||equipped.gladiators_medallion||equipped.darkmoon_deck_putrescence||equipped.inscrutable_quantum_device||equipped.soulletting_ruby||equipped.sunblood_amethyst||equipped.wakeners_frond||equipped.flame_of_battle\nactions.precombat+=/mirror_image\nactions.precombat+=/fleshcraft,if=soulbind.volatile_solvent||soulbind.pustule_eruption\nactions.precombat+=/rune_of_power,if=covenant.kyrian&runeforge.arcane_harmony&conduit.arcane_prodigy&variable.always_sync_cooldowns&active_enemies<variable.aoe_target_count\nactions.precombat+=/frostbolt,if=!variable.prepull_evo=1&runeforge.disciplinary_command\nactions.precombat+=/arcane_blast,if=!variable.prepull_evo=1&!runeforge.disciplinary_command&(!covenant.venthyr||variable.fishing_opener)\nactions.precombat+=/mirrors_of_torment,if=!variable.prepull_evo=1&!runeforge.disciplinary_command&covenant.venthyr&!variable.fishing_opener\nactions.precombat+=/evocation,if=variable.prepull_evo=1\n\nactions+=/counterspell\nactions+=/use_mana_gem,if=(talent.enlightened&mana.pct<=80&mana.pct>=65)||(!talent.enlightened&mana.pct<=85)\nactions+=/potion,if=buff.arcane_power.up\nactions+=/time_warp,if=runeforge.temporal_warp&buff.exhaustion.up&(cooldown.arcane_power.ready||boss&fight_remains<=40)\nactions+=/lights_judgment,if=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down\nactions+=/bag_of_tricks,if=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down\nactions+=/berserking,if=buff.arcane_power.up\nactions+=/blood_fury,if=buff.arcane_power.up\nactions+=/fireblood,if=buff.arcane_power.up\nactions+=/ancestral_call,if=buff.arcane_power.up\nactions+=/use_items,if=buff.arcane_power.up\nactions+=/use_item,name=scars_of_fraternal_strife\nactions+=/use_item,effect_name=gladiators_badge,if=buff.arcane_power.up||cooldown.arcane_power.remains>=55&debuff.touch_of_the_magi.up\nactions+=/use_item,name=moonlit_prism,if=covenant.kyrian&cooldown.arcane_power.remains<=10&cooldown.touch_of_the_magi.remains<=10&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions+=/use_item,name=moonlit_prism,if=!covenant.kyrian&cooldown.arcane_power.remains<=6&cooldown.touch_of_the_magi.remains<=6&time>30&(!covenant.venthyr||active_enemies<variable.aoe_target_count)&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions+=/use_item,name=empyreal_ordnance,if=cooldown.arcane_power.remains<=15&cooldown.touch_of_the_magi.remains<=15\nactions+=/use_item,name=grim_eclipse,if=cooldown.arcane_power.remains<=7&cooldown.touch_of_the_magi.remains<=7\nactions+=/use_item,name=dreadfire_vessel,if=cooldown.arcane_power.remains>=20||!variable.ap_on_use=1||(time=0&variable.fishing_opener=1&runeforge.siphon_storm)\nactions+=/use_item,name=mrrgrias_favor,if=cooldown.arcane_power.remains>=20||!variable.ap_on_use\nactions+=/use_item,name=glyph_of_assimilation,if=cooldown.arcane_power.remains>=20||!variable.ap_on_use=1||(time=0&variable.fishing_opener=1&runeforge.siphon_storm)\nactions+=/use_item,name=macabre_sheet_music,if=cooldown.arcane_power.remains<=5&(!variable.fishing_opener=1||time>30)\nactions+=/use_item,name=macabre_sheet_music,if=cooldown.arcane_power.remains<=5&variable.fishing_opener=1&buff.rune_of_power.up&buff.rune_of_power.remains<=(10-5*runeforge.siphon_storm)&time<30\nactions+=/use_item,name=shadowed_orb_of_torment,if=time=0||(variable.outside_of_cooldowns&((covenant.kyrian&cooldown.radiant_spark.remains<=2&cooldown.arcane_power.remains<=5&cooldown.touch_of_the_magi.remains<=5)||cooldown.arcane_power.remains<=2||fight_remains<cooldown.arcane_power.remains))\n# 5.6 is the speed of the Soulletting Ruby projectile\nactions+=/use_item,name=soulletting_ruby,if=(variable.time_until_ap+(action.radiant_spark.execute_time*covenant.kyrian)+(action.deathborne.execute_time*covenant.necrolord)+action.touch_of_the_magi.execute_time<target.distance%5.6)&(variable.have_opened||(covenant.kyrian&runeforge.arcane_infinity))&target.distance>25\nactions+=/use_item,name=neural_synapse_enhancer,if=(buff.arcane_power.up&cooldown.touch_of_the_magi.remains>40)||(cooldown.arcane_power.remains>=20&debuff.touch_of_the_magi.up)\nactions+=/use_item,name=soul_igniter,if=cooldown.arcane_power.remains>=30||!variable.ap_on_use=1\n## actions+=/newfound_resolve,use_while_casting=1,if=buff.arcane_power.up||debuff.touch_of_the_magi.up||dot.radiant_spark.ticking\n## actions+=/call_action_list,name=calculations\nactions+=/call_action_list,name=vaoe,strict=1,if=covenant.venthyr&runeforge.siphon_storm&talent.arcane_echo&active_enemies>=variable.aoe_target_count\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=variable.aoe_target_count&!(covenant.kyrian&runeforge.arcane_infinity)\nactions+=/call_action_list,name=harmony,strict=1,if=covenant.kyrian&runeforge.arcane_harmony\nactions+=/call_action_list,name=fishing_opener,strict=1,if=variable.have_opened=0&variable.fishing_opener&!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=opener,strict=1,if=variable.have_opened=0&!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=cooldowns,strict=1,if=!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=rotation,strict=1,if=variable.final_burn=0&!(covenant.kyrian&runeforge.arcane_harmony)\nactions+=/call_action_list,name=final_burn,strict=1,if=variable.final_burn=1&!(covenant.kyrian&runeforge.arcane_harmony)\n\nactions.aoe=frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&(buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down)&cooldown.touch_of_the_magi.remains=0&(buff.arcane_charge.stack<=variable.aoe_totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.aoe+=/fire_blast,if=(runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down&prev_gcd.1.frostbolt)||(runeforge.disciplinary_command&time=0)\nactions.aoe+=/frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.remains>30&cooldown.touch_of_the_magi.remains=0&(buff.arcane_charge.stack<=variable.aoe_totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.aoe+=/frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.remains=0&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down)\nactions.aoe+=/arcane_missiles,if=covenant.venthyr&runeforge.arcane_infinity&buff.arcane_harmony.stack<15&cooldown.touch_of_the_magi.remains<=variable.harmony_stack_time+execute_time&cooldown.arcane_power.remains<=variable.harmony_stack_time+execute_time+action.touch_of_the_magi.execute_time,chain=1\nactions.aoe+=/arcane_blast,if=covenant.venthyr&talent.arcane_echo&time<10&cooldown.mirrors_of_torment.remains&buff.clearcasting.stack<3\nactions.aoe+=/use_item,name=soulletting_ruby,if=runeforge.siphon_storm&prev_gcd.1.evocation\nactions.aoe+=/touch_of_the_magi,if=runeforge.siphon_storm&prev_gcd.1.evocation\nactions.aoe+=/arcane_power,if=runeforge.siphon_storm&(prev_gcd.1.evocation||prev_gcd.1.touch_of_the_magi)\nactions.aoe+=/mirrors_of_torment,if=runeforge.arcane_infinity&cooldown.touch_of_the_magi.remains<=10&cooldown.arcane_power.remains<=15\nactions.aoe+=/mirrors_of_torment,if=cooldown.arcane_power.remains<=8&cooldown.touch_of_the_magi.remains<=8&(buff.arcane_charge.stack<=variable.aoe_totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>5)||(!talent.rune_of_power&cooldown.arcane_power.remains>5)||cooldown.arcane_power.remains<=gcd))\nactions.aoe+=/evocation,if=time>30&runeforge.siphon_storm&covenant.venthyr&prev_gcd.1.mirrors_of_torment\nactions.aoe+=/evocation,if=time>30&runeforge.siphon_storm&buff.arcane_charge.stack<=variable.aoe_totm_max_charges&cooldown.touch_of_the_magi.remains=0&cooldown.arcane_power.remains<=gcd\nactions.aoe+=/evocation,if=time>30&runeforge.siphon_storm&cooldown.arcane_power.remains=0&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down),interrupt_if=buff.siphon_storm.stack=buff.siphon_storm.max_stack,interrupt_immediate=1\nactions.aoe+=/use_item,name=soulletting_ruby,if=cooldown.radiant_spark.ready&cooldown.touch_of_the_magi.remains<=gcd.max&cooldown.arcane_power.remains<=gcd.max\nactions.aoe+=/radiant_spark,if=cooldown.touch_of_the_magi.remains<execute_time&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd)\nactions.aoe+=/radiant_spark,if=cooldown.arcane_power.remains<execute_time&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down)\nactions.aoe+=/deathborne,if=cooldown.arcane_power.remains=0&(((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down)\nactions.aoe+=/use_item,name=soulletting_ruby,if=(buff.arcane_charge.stack<=variable.aoe_totm_max_charges||prev_gcd.1.radiant_spark)&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd)&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/touch_of_the_magi,if=covenant.venthyr&runeforge.arcane_infinity&cooldown.mirrors_of_torment.remains<=50\nactions.aoe+=/touch_of_the_magi,if=covenant.venthyr&runeforge.arcane_infinity&buff.mirrors_of_torment.remains<=20&cooldown.arcane_power.remains<=gcd\nactions.aoe+=/touch_of_the_magi,if=(buff.arcane_charge.stack<=variable.aoe_totm_max_charges||prev_gcd.1.radiant_spark)&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd)&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/arcane_power,if=((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&buff.rune_of_power.down&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/rune_of_power,if=buff.rune_of_power.down&((cooldown.touch_of_the_magi.remains>20&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack<=variable.aoe_totm_max_charges))&(cooldown.arcane_power.remains>12||debuff.touch_of_the_magi.up)&!(soulbind.effusive_anima_accelerator&runeforge.harmonic_echo)\nactions.aoe+=/shifting_power,if=cooldown.arcane_orb.remains>5||!talent.arcane_orb\nactions.aoe+=/rune_of_power,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&cooldown.radiant_spark.remains<=execute_time\nactions.aoe+=/radiant_spark,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&(buff.arcane_charge.stack>=2||cooldown.touch_of_the_magi.remains<=execute_time)\nactions.aoe+=/touch_of_the_magi,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&prev_gcd.1.radiant_spark\nactions.aoe+=/arcane_power,if=soulbind.effusive_anima_accelerator&runeforge.harmonic_echo&prev_gcd.1.touch_of_the_magi\nactions.aoe+=/arcane_explosion,if=runeforge.harmonic_echo&debuff.radiant_spark_vulnerability.stack=1\nactions.aoe+=/arcane_explosion,if=runeforge.harmonic_echo&(prev_gcd.1.radiant_spark||(prev_gcd.2.radiant_spark&debuff.touch_of_the_magi.up))\nactions.aoe+=/arcane_orb,if=runeforge.harmonic_echo&debuff.radiant_spark_vulnerability.stack=3\nactions.aoe+=/arcane_missiles,if=buff.clearcasting.react&talent.arcane_echo&debuff.touch_of_the_magi.up\nactions.aoe+=/presence_of_mind,if=buff.deathborne.up&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=buff.presence_of_mind.max_stack*action.arcane_blast.execute_time&((talent.resonance&active_enemies<4)||active_enemies<5)&(!runeforge.arcane_bombardment||target.health.pct>35)\nactions.aoe+=/arcane_blast,if=buff.deathborne.up&((talent.resonance&active_enemies<4)||active_enemies<5)&(!runeforge.arcane_bombardment||target.health.pct>35)\nactions.aoe+=/supernova\nactions.aoe+=/arcane_barrage,if=buff.arcane_charge.stack>=(active_enemies-1)&runeforge.arcane_bombardment&target.health.pct<35\nactions.aoe+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack\nactions.aoe+=/arcane_orb,if=buff.arcane_charge.stack=0&(cooldown.arcane_power.remains>15||!(covenant.kyrian&runeforge.arcane_harmony))\nactions.aoe+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack\nactions.aoe+=/arcane_missiles,if=buff.clearcasting.react&runeforge.arcane_harmony&((talent.amplification&active_enemies<8)||active_enemies<5)\nactions.aoe+=/arcane_missiles,if=buff.clearcasting.react&talent.amplification&active_enemies<4\nactions.aoe+=/arcane_explosion,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.aoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&prev_gcd.1.arcane_barrage\n## actions.aoe+=/evocation,interrupt_if=mana.pct>=85,interrupt_immediate=1\n\n## These calculations were moved into the addon to (hopefully) increase efficiency.\n## actions.calculations=variable,name=have_opened,op=set,value=1,if=variable.have_opened=0&prev_gcd.1.evocation&!(runeforge.siphon_storm||runeforge.temporal_warp)\n## actions.calculations+=/variable,name=have_opened,op=set,value=1,if=variable.have_opened=0&buff.arcane_power.down&cooldown.arcane_power.remains&(runeforge.siphon_storm||runeforge.temporal_warp)\n## actions.calculations+=/variable,name=final_burn,op=set,value=1,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&!buff.rule_of_threes.up&fight_remains<=((mana%action.arcane_blast.cost)*action.arcane_blast.execute_time)\n## Either a fully stacked harmony or in execute range with Bombardment\n## actions.calculations+=/variable,name=empowered_barrage,op=set,value=buff.arcane_harmony.stack>=15||(runeforge.arcane_bombardment&target.health.pct<35)\n## actions.calculations+=/variable,name=last_ap_use,default=0,op=set,if=buff.arcane_power.up&(variable.last_ap_use=0||time>=variable.last_ap_use+15),value=time\n## Arcane Prodigy gives a variable amount of cdr, but we'll use a flat estimation here. The simc provided remains_expected expression does not work well for prodigy due to the bursty nature of the cdr.\n## actions.calculations+=/variable,name=estimated_ap_cooldown,op=set,value=(cooldown.arcane_power.duration*(1-(0.03*conduit.arcane_prodigy.rank)))-(time-variable.last_ap_use)\n## actions.calculations+=/variable,name=time_until_ap,op=set,if=conduit.arcane_prodigy,value=cooldown.arcane_power.remains_expected\n## actions.calculations+=/variable,name=time_until_ap,op=set,if=!conduit.arcane_prodigy,value=cooldown.arcane_power.remains\n## We'll delay AP up to 20sec for TotM\n## actions.calculations+=/variable,name=time_until_ap,op=max,value=cooldown.touch_of_the_magi.remains,if=(cooldown.touch_of_the_magi.remains-variable.time_until_ap)<20\n## Since Ruby is such a powerful trinket for Kyrian, we'll stick to the two minute cycle until we get a high enough rank of prodigy\n## actions.calculations+=/variable,name=time_until_ap,op=max,value=trinket.soulletting_ruby.cooldown.remains,if=conduit.arcane_prodigy&conduit.arcane_prodigy.rank<5&equipped.soulletting_ruby&covenant.kyrian&runeforge.arcane_harmony\n## We'll delay TotM up to 20sec for AP\n## actions.calculations+=/variable,name=holding_totm,op=set,value=cooldown.touch_of_the_magi.ready&variable.time_until_ap<20\n## Radiant Spark does not immediately put up the vulnerability debuff so it can be difficult to discern that we're at the zeroth vulnerability stack\n## actions.calculations+=/variable,name=just_used_spark,op=set,value=(prev_gcd.1.radiant_spark||prev_gcd.2.radiant_spark||prev_gcd.3.radiant_spark)&action.radiant_spark.time_since<gcd.max*4\n## Original SimC checked debuff.radiant_spark_vulnerability.down, but that doesn't work when the addon applies RSV instantly.\n## actions.calculations+=/variable,name=just_used_spark,op=set,value=(prev_gcd.1.radiant_spark||prev_gcd.2.radiant_spark||prev_gcd.3.radiant_spark)&debuff.radiant_spark_vulnerability.down\n## actions.calculations+=/variable,name=outside_of_cooldowns,op=set,value=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down&!variable.just_used_spark&debuff.radiant_spark_vulnerability.down\n## actions.calculations+=/variable,name=stack_harmony,op=set,value=runeforge.arcane_harmony&((covenant.kyrian&cooldown.radiant_spark.remains<variable.harmony_stack_time))\n\n# Prioritize using grisly icicle with ap. Use it with totm otherwise.\nactions.cooldowns=frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.remains>30&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack<=variable.totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.cooldowns+=/frost_nova,if=runeforge.grisly_icicle&cooldown.arcane_power.ready&(!talent.enlightened||(talent.enlightened&mana.pct>=70))&((cooldown.touch_of_the_magi.remains>10&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack=0))&buff.rune_of_power.down&mana.pct>=variable.ap_minimum_mana_pct\nactions.cooldowns+=/frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&(buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.down)&cooldown.touch_of_the_magi.remains=0&(buff.arcane_charge.stack<=variable.totm_max_charges&((talent.rune_of_power&cooldown.rune_of_power.remains<=gcd&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||(!talent.rune_of_power&cooldown.arcane_power.remains>variable.totm_max_delay_for_ap)||cooldown.arcane_power.remains<=gcd))\nactions.cooldowns+=/fire_blast,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down&prev_gcd.1.frostbolt\n# Pair MoT with AP if it's coming up soon. If it will be used with TotM, cast it slightly before\nactions.cooldowns+=/mirrors_of_torment,if=!runeforge.siphon_storm&cooldown.touch_of_the_magi.remains<=9-(3*set_bonus.tier28_4pc)&cooldown.arcane_power.remains<=10-(3*set_bonus.tier28_4pc)\nactions.cooldowns+=/mirrors_of_torment,if=runeforge.siphon_storm&buff.siphon_storm.up&cooldown.touch_of_the_magi.remains<=9-(3*set_bonus.tier28_4pc)&cooldown.arcane_power.remains<=10-(3*set_bonus.tier28_4pc)\nactions.cooldowns+=/fleshcraft,if=variable.outside_of_cooldowns&(soulbind.volatile_solvent||soulbind.pustule_eruption)\n# Always use deathborne with ap. If totm is ready as well, make sure to cast it before totm.\nactions.cooldowns+=/deathborne,if=!runeforge.siphon_storm&cooldown.touch_of_the_magi.remains<=15&cooldown.arcane_power.remains<=16\nactions.cooldowns+=/deathborne,if=runeforge.siphon_storm&prev_gcd.1.evocation\nactions.cooldowns+=/deathborne,if=cooldown.arcane_power.ready&(!talent.enlightened||(talent.enlightened&mana.pct>=70))&((cooldown.touch_of_the_magi.remains>10&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.ready&buff.arcane_charge.stack=0))&buff.rune_of_power.down&mana.pct>=variable.ap_minimum_mana_pct\n# Use spark if totm and ap are on cd and won't be up for longer than the max delay, making sure we have at least two arcane charges and that totm wasn't just used.\nactions.cooldowns+=/radiant_spark,if=cooldown.touch_of_the_magi.remains>variable.rs_max_delay_for_totm&cooldown.arcane_power.remains>variable.rs_max_delay_for_ap&(talent.rune_of_power&(cooldown.rune_of_power.remains<execute_time||cooldown.rune_of_power.remains>variable.rs_max_delay_for_rop)||!talent.rune_of_power)&buff.arcane_charge.stack>2&debuff.touch_of_the_magi.down&buff.rune_of_power.down&buff.arcane_power.down\n# Use spark with ap when possible. If totm is ready as well, make sure to cast it before totm.\nactions.cooldowns+=/radiant_spark,if=cooldown.touch_of_the_magi.remains<execute_time&buff.arcane_charge.stack<=variable.totm_max_charges&cooldown.arcane_power.remains<(execute_time+action.touch_of_the_magi.execute_time)\nactions.cooldowns+=/radiant_spark,if=cooldown.arcane_power.remains<execute_time&((!talent.enlightened||(talent.enlightened&mana.pct>=70))&((cooldown.touch_of_the_magi.remains>variable.ap_max_delay_for_totm&buff.arcane_charge.stack=buff.arcane_charge.max_stack)||(cooldown.touch_of_the_magi.remains=0&buff.arcane_charge.stack=0))&buff.rune_of_power.down&mana.pct>=variable.ap_minimum_mana_pct)\nactions.cooldowns+=/use_item,name=soulletting_ruby,if=(!runeforge.siphon_storm||buff.siphon_storm.up)&buff.arcane_charge.stack<=variable.totm_max_charges&cooldown.arcane_power.remains<=execute_time&mana.pct>variable.ap_minimum_mana_pct&buff.rune_of_power.down\nactions.cooldowns+=/evocation,if=runeforge.siphon_storm&cooldown.touch_of_the_magi.remains<=(action.evocation.execute_time+13)\nactions.cooldowns+=/rune_of_power,if=set_bonus.tier28_2pc&covenant.venthyr&buff.arcane_power.down&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains>10\nactions.cooldowns+=/touch_of_the_magi,if=set_bonus.tier28_2pc&covenant.venthyr&prev_gcd.1.rune_of_power\nactions.cooldowns+=/touch_of_the_magi,if=set_bonus.tier28_2pc&covenant.venthyr&cooldown.arcane_power.remains<=execute_time\nactions.cooldowns+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\nactions.cooldowns+=/touch_of_the_magi,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&(!runeforge.siphon_storm||buff.siphon_storm.up)&buff.arcane_charge.stack<=variable.totm_max_charges&cooldown.arcane_power.remains<=execute_time&mana.pct>variable.ap_minimum_mana_pct&buff.rune_of_power.down\nactions.cooldowns+=/touch_of_the_magi,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&buff.arcane_charge.stack<=variable.totm_max_charges&talent.rune_of_power&cooldown.rune_of_power.remains<=execute_time&variable.time_until_ap>variable.totm_max_delay_for_ap\nactions.cooldowns+=/touch_of_the_magi,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&buff.arcane_charge.stack<=variable.totm_max_charges&(!talent.rune_of_power||cooldown.rune_of_power.remains>variable.totm_max_delay_for_rop)&variable.time_until_ap>variable.totm_max_delay_for_ap\nactions.cooldowns+=/rune_of_power,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&buff.arcane_power.down&(cooldown.touch_of_the_magi.remains>variable.rop_max_delay_for_totm||cooldown.arcane_power.remains<=variable.totm_max_delay_for_ap)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&cooldown.arcane_power.remains>10&cooldown.touch_of_the_magi.remains>10\nactions.cooldowns+=/shifting_power,if=variable.outside_of_cooldowns\n# Use pom to squeeze an extra ab in the next cooldown window, unless kyrian then only during arcane power due to how mana hungry radiant spark is\nactions.cooldowns+=/presence_of_mind,if=talent.rune_of_power&buff.arcane_power.up&buff.rune_of_power.remains<gcd.max\nactions.cooldowns+=/presence_of_mind,if=debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<action.arcane_missiles.execute_time&!covenant.kyrian\nactions.cooldowns+=/presence_of_mind,if=buff.rune_of_power.up&buff.rune_of_power.remains<gcd.max&cooldown.evocation.ready&cooldown.touch_of_the_magi.remains&!covenant.kyrian\n\nactions.final_burn=arcane_missiles,if=buff.clearcasting.react,chain=1\nactions.final_burn+=/arcane_blast\nactions.final_burn+=/arcane_barrage\n\n# When running either the SS or TW legendaries, we want to Evo before the TotM/AP window. Use it as soon as RoP has finished our we've spent our charges\nactions.fishing_opener=evocation,if=(runeforge.temporal_warp||(runeforge.siphon_storm&!variable.prepull_evo=1))&(buff.rune_of_power.down||prev_gcd.1.arcane_barrage)&cooldown.rune_of_power.remains\n# If we've finished our cooldown windows and spent our charges, prioritize Evo over everything else\nactions.fishing_opener+=/evocation,if=talent.rune_of_power&cooldown.rune_of_power.remains&cooldown.arcane_power.remains&buff.arcane_power.down&buff.rune_of_power.down&prev_gcd.1.arcane_barrage\nactions.fishing_opener+=/fire_blast,if=runeforge.disciplinary_command&buff.disciplinary_command_frost.up\nactions.fishing_opener+=/frost_nova,if=runeforge.grisly_icicle&mana.pct>95\nactions.fishing_opener+=/arcane_missiles,if=runeforge.arcane_harmony&buff.arcane_harmony.stack<buff.arcane_harmony.max_stack&((buff.arcane_power.down&cooldown.arcane_power.ready)||debuff.touch_of_the_magi.up),chain=1\nactions.fishing_opener+=/deathborne,if=conduit.gift_of_the_lich\nactions.fishing_opener+=/rune_of_power,if=runeforge.siphon_storm\nactions.fishing_opener+=/arcane_orb,if=cooldown.rune_of_power.ready\nactions.fishing_opener+=/arcane_blast,if=cooldown.rune_of_power.ready&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.fishing_opener+=/mirrors_of_torment,if=time>=5+(1*set_bonus.tier28_4pc)\nactions.fishing_opener+=/use_item,name=moonlit_prism,if=time>6&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions.fishing_opener+=/rune_of_power\n# If we're at max stacks of CC and we haven't used MoT yet, use a stack to prevent munching unless running the Harmony legendary\nactions.fishing_opener+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.stack=buff.clearcasting.max_stack&covenant.venthyr&cooldown.mirrors_of_torment.ready&!variable.empowered_barrage&cooldown.arcane_power.ready\n# Normally we pair potion use with AP, but it will last long enough for both the RoP and AP windows unless running the SS or TW legendaries\nactions.fishing_opener+=/potion,if=!runeforge.temporal_warp&(!runeforge.siphon_storm||(variable.prepull_evo=1&buff.arcane_charge.stack=buff.arcane_charge.max_stack))\nactions.fishing_opener+=/deathborne,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage\nactions.fishing_opener+=/radiant_spark,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage\nactions.fishing_opener+=/mirrors_of_torment,if=buff.rune_of_power.remains<(6+2*runeforge.siphon_storm)\n# When running the Harmony legendary, use AP before TotM to dump a fully stacked barrage\nactions.fishing_opener+=/arcane_power,if=variable.empowered_barrage&buff.rune_of_power.up&(mana.pct<(25+(10*covenant.kyrian))||buff.clearcasting.stack=buff.clearcasting.max_stack)\nactions.fishing_opener+=/arcane_barrage,if=variable.empowered_barrage&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_power.up\nactions.fishing_opener+=/use_item,name=soulletting_ruby,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage||prev_gcd.1.radiant_spark||(prev_gcd.1.deathborne&!runeforge.siphon_storm)\nactions.fishing_opener+=/touch_of_the_magi,if=buff.rune_of_power.down||prev_gcd.1.arcane_barrage||prev_gcd.1.radiant_spark||(prev_gcd.1.deathborne&!runeforge.siphon_storm)\nactions.fishing_opener+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\n# Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.\nactions.fishing_opener+=/presence_of_mind,if=!talent.arcane_echo&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\n# If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.\nactions.fishing_opener+=/presence_of_mind,if=buff.arcane_power.up&buff.rune_of_power.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\nactions.fishing_opener+=/arcane_blast,if=dot.radiant_spark.remains>5||debuff.radiant_spark_vulnerability.stack>0\n# We want to make sure we have enough mana for the entire AP window, even if there's still time remaining on RoP. It's only better to burn to zero and Evo if running the SS or TW legendaries.\nactions.fishing_opener+=/arcane_barrage,if=cooldown.arcane_power.ready&mana.pct<(40+(10*covenant.kyrian))&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(!runeforge.siphon_storm||variable.prepull_evo=1)&!runeforge.temporal_warp&!runeforge.arcane_harmony\n# Barrage should not be used at the end of AP if Evocation is ready as dropping charges will make it take longer to burn through remaining mana\nactions.fishing_opener+=/arcane_barrage,if=buff.arcane_power.up&buff.arcane_power.remains<=gcd&cooldown.evocation.remains\n# Barrage should always be the last cast in the RoP window as TotM will restore the charges spent\nactions.fishing_opener+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.rune_of_power.remains<=gcd&!runeforge.arcane_harmony\nactions.fishing_opener+=/arcane_missiles,if=debuff.touch_of_the_magi.up&talent.arcane_echo&(buff.deathborne.down||active_enemies=1)&debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time,chain=1,early_chain_if=buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))\n# If we're venthyr, immediately use CC when capped to not waste procs from MoT\nactions.fishing_opener+=/arcane_missiles,if=covenant.venthyr&buff.clearcasting.stack=buff.clearcasting.max_stack\n# Start using CC AM when AP has been used\nactions.fishing_opener+=/arcane_missiles,if=buff.clearcasting.react&cooldown.arcane_power.remains&(buff.rune_of_power.up||buff.arcane_power.up),chain=1\nactions.fishing_opener+=/arcane_orb,if=buff.arcane_charge.stack<=variable.totm_max_charges\nactions.fishing_opener+=/arcane_blast,if=buff.rune_of_power.up||mana.pct>15\nactions.fishing_opener+=/evocation,if=buff.rune_of_power.down&buff.arcane_power.down,interrupt_if=mana.pct>=85,interrupt_immediate=1\nactions.fishing_opener+=/arcane_barrage\n\n## Unsupported cancel_action; Evocation will be naturally broken if conditions are met.\n## actions.harmony=cancel_action,if=action.evocation.channeling&mana.pct>=95\n# If low on mana and cooldowns are coming up, go ahead and evo\nactions.harmony+=/evocation,if=mana.pct<=30&variable.outside_of_cooldowns&(talent.rune_of_power&cooldown.rune_of_power.remains<10)\n# We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.\nactions.harmony+=/arcane_missiles,if=(variable.stack_harmony||time<10)&buff.arcane_harmony.stack<16&(active_enemies<variable.aoe_spark_target_count||variable.outside_of_cooldowns),chain=1\n# When using Empyreal Ordnance, cast a few extra missiles while waiting for the buff at the start of the fight\nactions.harmony+=/arcane_missiles,if=equipped.empyreal_ordnance&time<30&cooldown.empyreal_ordnance.remains>168&!action.empyreal_ordnance.disabled\nactions.harmony+=/use_item,name=soulletting_ruby,if=buff.arcane_power.up&target.distance<=10\nactions.harmony+=/use_item,name=soulletting_ruby,if=variable.empowered_barrage&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains<=(execute_time*2)&target.distance>10\nactions.harmony+=/radiant_spark,if=variable.empowered_barrage&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains<=(execute_time*2)&(!equipped.soulletting_ruby||conduit.arcane_prodigy.rank>=5||(trinket.soulletting_ruby.cooldown.remains>110&target.distance>10)||(trinket.soulletting_ruby.cooldown.remains<=execute_time&target.distance<=10))\nactions.harmony+=/touch_of_the_magi,if=variable.just_used_spark&cooldown.arcane_power.remains<=execute_time&(!equipped.soulletting_ruby||conduit.arcane_prodigy.rank>=5||(trinket.soulletting_ruby.cooldown.remains>110&target.distance>10)||(trinket.soulletting_ruby.cooldown.remains<=execute_time&target.distance<=10))\nactions.harmony+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\nactions.harmony+=/rune_of_power,if=variable.empowered_barrage&cooldown.radiant_spark.remains<=execute_time&variable.time_until_ap>=20&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns||cooldown.touch_of_the_magi.remains<=(execute_time*2))\nactions.harmony+=/radiant_spark,if=variable.empowered_barrage&prev_gcd.1.rune_of_power\nactions.harmony+=/touch_of_the_magi,if=variable.just_used_spark&!variable.holding_totm\n# Use 2nd arcane barrage in AP+ROP only if Bloodlust and at least 2 CCs procced\nactions.harmony+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.rune_of_power.up&buff.arcane_power.up&buff.arcane_harmony.stack>=16&buff.arcane_power.remains<=action.arcane_barrage.execute_time&buff.bloodlust.up\n# Use 2nd RoP in AP only if Bloodlust and 2 CCs proc\nactions.harmony+=/rune_of_power,if=buff.rune_of_power.down&buff.bloodlust.up&(variable.time_until_ap>30||cooldown.radiant_spark.remains>12)&(buff.arcane_harmony.stack>=15||buff.clearcasting.stack>=1)&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns)\nactions.harmony+=/rune_of_power,if=buff.arcane_power.down&(variable.time_until_ap>30||cooldown.radiant_spark.remains>12)&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns)\nactions.harmony+=/radiant_spark,if=variable.empowered_barrage&(buff.arcane_charge.stack>=2||cooldown.arcane_orb.ready)&(!talent.rune_of_power||cooldown.rune_of_power.remains>5)&cooldown.arcane_power.remains_expected>=30&(!conduit.arcane_prodigy||!variable.always_sync_cooldowns)\n# When running prodigy, use totm by itself in order to align it with ap\nactions.harmony+=/touch_of_the_magi,if=variable.time_until_ap<50&variable.time_until_ap>30&(!equipped.soulletting_ruby||conduit.arcane_prodigy.rank>=5)\nactions.harmony+=/arcane_orb,if=variable.just_used_spark&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.harmony+=/arcane_orb,if=debuff.radiant_spark_vulnerability.stack=3&active_enemies>=variable.aoe_spark_target_count\n# When doing the AoE spark sequence, you will use harmony stacks on the second spark stack to get a second barrage on the fourth\nactions.harmony+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=2&active_enemies>=variable.aoe_spark_target_count\n## When using Harmonic Echo, you do not want to queue Arcane Barrage during the Arcane Blast cast if there is more than one target\n## actions.harmony+=/wait,sec=0.04,if=debuff.radiant_spark_vulnerability.stack=1&prev_gcd.1.arcane_blast&active_enemies>=variable.aoe_spark_target_count,line_cd=25\n# When using Harmonic Echo, Arcane Blast should be used instead of Arcane Explosion for the first spark stack when doing the AoE spark sequence\nactions.harmony+=/arcane_blast,if=debuff.radiant_spark_vulnerability.stack=1&runeforge.harmonic_echo&active_enemies>=variable.aoe_spark_target_count\nactions.harmony+=/arcane_explosion,if=debuff.radiant_spark_vulnerability.stack=1&active_enemies>=variable.aoe_spark_target_count\nactions.harmony+=/arcane_explosion,if=prev_gcd.2.radiant_spark&active_enemies>=variable.aoe_spark_target_count\n## When using Harmonic Echo, you do not want to queue Arcane Barrage during the Arcane Blast cast if there is more than one target\n## actions.harmony+=/wait,sec=0.04,if=debuff.radiant_spark_vulnerability.stack=(debuff.radiant_spark_vulnerability.max_stack-1)&runeforge.harmonic_echo&active_enemies>1,line_cd=25\nactions.harmony+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=debuff.radiant_spark_vulnerability.max_stack\nactions.harmony+=/arcane_blast,if=variable.just_used_spark||(debuff.radiant_spark_vulnerability.up&debuff.radiant_spark_vulnerability.stack<debuff.radiant_spark_vulnerability.max_stack)\n# Use mini Barrage between radiant sparks if under BL without delaying Radiant Spark ideally\nactions.harmony+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.bloodlust.up&cooldown.radiant_spark.remains<=10&buff.arcane_harmony.stack>=16\n# Use orb on cd unless ap is coming up soon\nactions.harmony+=/arcane_orb,if=buff.arcane_charge.stack<3&variable.time_until_ap>10&(cooldown.touch_of_the_magi.remains>5||!conduit.arcane_prodigy)\nactions.harmony+=/arcane_missiles,if=buff.clearcasting.react&buff.arcane_power.up,chain=1\n# If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window\nactions.harmony+=/arcane_barrage,if=buff.rune_of_power.up&buff.rune_of_power.remains<=action.arcane_missiles.execute_time&buff.arcane_power.up&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_harmony.stack&buff.power_infusion.up&buff.bloodlust.up\n# If we get power infusion during lust we'll have enough haste to get off a strong barrage during the rop/ap window, so we'll only use enough blasts initially to get to four charges\nactions.harmony+=/arcane_blast,if=buff.presence_of_mind.up&(buff.arcane_charge.stack<buff.arcane_charge.max_stack||!(buff.power_infusion.up&buff.bloodlust.up))&!(buff.arcane_charge.stack=0&buff.presence_of_mind.stack=1)\n# The best use of pom is to use it to quickly build charges during ap after they get dumped by the harmony barrage\nactions.harmony+=/presence_of_mind,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack&buff.arcane_power.up&active_enemies<variable.aoe_target_count\n# In AoE situations, CC AM is prioritized over other filler actions\nactions.harmony+=/arcane_missiles,if=buff.clearcasting.react&active_enemies>=variable.aoe_target_count,chain=1\n# In AoE situations, barrage at four charges regardless of harmony stacks\nactions.harmony+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&active_enemies>=variable.aoe_target_count\n# Use Arcane Explosion as the filler in AoE situations instead of building harmony stacks with Missiles\nactions.harmony+=/arcane_explosion,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack&active_enemies>=variable.aoe_target_count\n# We want to stack harmony fully. The use of 16 stacks here is to account for the tick left on the channel and the missile in flight.\nactions.harmony+=/arcane_missiles,if=buff.arcane_harmony.stack<16,chain=1,interrupt=1,interrupt_global=1\nactions.harmony+=/arcane_barrage,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&variable.empowered_barrage\nactions.harmony+=/evocation,if=mana.pct<15\n# Only use blast to build charges if we already have some from orb\nactions.harmony+=/arcane_blast,if=buff.arcane_charge.stack&buff.arcane_charge.stack<buff.arcane_charge.max_stack\n# Fill with am unless ap is coming up and we're low on mana\nactions.harmony+=/arcane_missiles,if=!(variable.time_until_ap<=10&mana.pct<30),chain=1,interrupt=1,interrupt_global=1\n# Profiles with low mastery, high haste, or both may not have enough mana to support how mana intensive radiant spark can be, so we'll use fire blast and frostbolt when low on mana\nactions.harmony+=/fire_blast\nactions.harmony+=/frostbolt\n\nactions.opener=fire_blast,if=runeforge.disciplinary_command&buff.disciplinary_command_frost.up\nactions.opener+=/frost_nova,if=runeforge.grisly_icicle&mana.pct>95\nactions.opener+=/use_item,name=soulletting_ruby\nactions.opener+=/deathborne\nactions.opener+=/radiant_spark,if=mana.pct>40\nactions.opener+=/rune_of_power,if=covenant.venthyr\nactions.opener+=/mirrors_of_torment\nactions.opener+=/shifting_power,if=buff.arcane_power.down&cooldown.arcane_power.remains\nactions.opener+=/arcane_orb,if=cooldown.arcane_power.ready&buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.opener+=/arcane_blast,if=covenant.venthyr&cooldown.mirrors_of_torment.remains>84\nactions.opener+=/touch_of_the_magi\nactions.opener+=/arcane_power\nactions.opener+=/rune_of_power,if=buff.arcane_power.down\n# Use PoM to squeeze an extra Arcane Blast during the TotM/AP window unless running Arcane Echo. If Arcane Echo is talented, we can't use PoM within the TotM/AP window unless we interrupt the AM channel, so we'll save it.\nactions.opener+=/presence_of_mind,if=!talent.arcane_echo&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\n# If PoM hasn't been used during the TotM window, we'll use it to squeeze an extra Arcane Blast in the RoP/AP window.\nactions.opener+=/presence_of_mind,if=buff.arcane_power.up&buff.rune_of_power.remains<=(action.arcane_blast.execute_time*buff.presence_of_mind.max_stack)\nactions.opener+=/arcane_blast,if=dot.radiant_spark.remains>5||debuff.radiant_spark_vulnerability.stack>0\n# Always Barrage at the end of AP when running the Arcane Harmony legendary\nactions.opener+=/arcane_barrage,if=buff.arcane_power.up&buff.arcane_power.remains<gcd&runeforge.arcane_harmony\n# Always Barrage at the end of the RoP window when running the Arcane Harmony legendary\nactions.opener+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.rune_of_power.remains<=gcd&runeforge.arcane_harmony\nactions.opener+=/arcane_missiles,if=debuff.touch_of_the_magi.up&talent.arcane_echo&(buff.deathborne.down||active_enemies=1)&debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time,chain=1,early_chain_if=buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))\nactions.opener+=/arcane_missiles,if=buff.clearcasting.stack=buff.clearcasting.max_stack&covenant.venthyr\nactions.opener+=/arcane_missiles,if=buff.clearcasting.react&cooldown.arcane_power.remains&(buff.rune_of_power.up||buff.arcane_power.up),chain=1\nactions.opener+=/arcane_orb,if=buff.arcane_charge.stack<=variable.totm_max_charges\nactions.opener+=/arcane_blast,if=buff.rune_of_power.up||mana.pct>15\nactions.opener+=/evocation,if=buff.rune_of_power.down&buff.arcane_power.down,interrupt_if=mana.pct>=85,interrupt_immediate=1\nactions.opener+=/arcane_barrage\n\n## actions.rotation=cancel_action,if=action.evocation.channeling&mana.pct>=95&(!runeforge.siphon_storm||buff.siphon_storm.stack=buff.siphon_storm.max_stack)\n# Use evo if we're low on mana and cooldowns are about to be up\nactions.rotation+=/arcane_barrage,if=set_bonus.tier28_2pc&covenant.venthyr&cooldown.rune_of_power.remains<=execute_time&cooldown.touch_of_the_magi.remains<3&(buff.arcane_charge.stack>variable.totm_max_charges&talent.rune_of_power&variable.time_until_ap>variable.totm_max_delay_for_ap)\nactions.rotation+=/arcane_barrage,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack>variable.totm_max_charges&cooldown.arcane_power.remains<=execute_time&mana.pct>variable.ap_minimum_mana_pct&buff.rune_of_power.down)\nactions.rotation+=/arcane_barrage,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack>variable.totm_max_charges&talent.rune_of_power&cooldown.rune_of_power.remains<=execute_time&variable.time_until_ap>variable.totm_max_delay_for_ap)\nactions.rotation+=/arcane_barrage,if=(!set_bonus.tier28_2pc||!covenant.venthyr)&cooldown.touch_of_the_magi.ready&(buff.arcane_charge.stack>variable.totm_max_charges&(!talent.rune_of_power||cooldown.rune_of_power.remains>variable.totm_max_delay_for_rop)&variable.time_until_ap>variable.totm_max_delay_for_ap)\nactions.rotation+=/arcane_barrage,if=debuff.radiant_spark_vulnerability.stack=debuff.radiant_spark_vulnerability.max_stack&(buff.arcane_power.down||buff.arcane_power.remains<=gcd)&(buff.rune_of_power.down||buff.rune_of_power.remains<=gcd)\nactions.rotation+=/arcane_blast,if=variable.just_used_spark||(debuff.radiant_spark_vulnerability.up&debuff.radiant_spark_vulnerability.stack<debuff.radiant_spark_vulnerability.max_stack)\nactions.rotation+=/arcane_blast,if=buff.presence_of_mind.up&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=action.arcane_blast.execute_time\nactions.rotation+=/arcane_missiles,if=debuff.touch_of_the_magi.up&talent.arcane_echo&(buff.deathborne.down||active_enemies=1)&(debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time||cooldown.presence_of_mind.remains||covenant.kyrian),chain=1,early_chain_if=buff.clearcasting_channel.down&(buff.arcane_power.up||(!talent.overpowered&(buff.rune_of_power.up||cooldown.evocation.ready)))\n# Consume the expanded potential buff asap to not lose potential procs\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.expanded_potential.up\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&(buff.arcane_power.up||buff.rune_of_power.up||debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time),chain=1\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.stack=buff.clearcasting.max_stack,chain=1\n# Always try to bank CC for cooldown windows but dump them if they're about to expire\nactions.rotation+=/arcane_missiles,if=buff.clearcasting.react&buff.clearcasting.remains<=((buff.clearcasting.stack*action.arcane_missiles.execute_time)+gcd.max),chain=1\nactions.rotation+=/nether_tempest,if=(refreshable||!ticking)&buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.arcane_power.down&debuff.touch_of_the_magi.down\nactions.rotation+=/arcane_orb,if=buff.arcane_charge.stack<=variable.totm_max_charges\nactions.rotation+=/supernova,if=variable.outside_of_cooldowns&mana.pct<=95\nactions.rotation+=/arcane_blast,if=buff.rule_of_threes.up&buff.arcane_charge.stack>3\n# Dump charges if we fall below the conserve mana threshold and evocation is still on cooldown\nactions.rotation+=/arcane_barrage,if=!runeforge.siphon_storm&variable.outside_of_cooldowns&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.arcane_orb&cooldown.arcane_orb.remains<=gcd&mana.pct<=90&cooldown.evocation.remains\nactions.rotation+=/arcane_barrage,if=runeforge.siphon_storm&variable.outside_of_cooldowns&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.arcane_orb&cooldown.arcane_orb.remains<=gcd&mana.pct<=90&cooldown.evocation.remains<30\n# Dump charges if orb is ready\nactions.rotation+=/arcane_barrage,if=variable.outside_of_cooldowns&buff.arcane_charge.stack=buff.arcane_charge.max_stack&talent.arcane_orb&cooldown.arcane_orb.remains<=gcd&mana.pct<=90&cooldown.evocation.remains&(!runeforge.siphon_storm||buff.siphon_storm.remains<=18)\n# Arcane Barrage should generally be the last cast of the AP window\nactions.rotation+=/arcane_barrage,if=buff.arcane_power.up&buff.arcane_power.remains<=gcd&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(cooldown.evocation.remains||runeforge.arcane_harmony)\n# Arcane Barrage should generally be the last cast of the RoP window\nactions.rotation+=/arcane_barrage,if=buff.rune_of_power.up&buff.arcane_power.down&buff.rune_of_power.remains<=gcd&buff.arcane_charge.stack=buff.arcane_charge.max_stack&(cooldown.evocation.remains||runeforge.arcane_harmony)\n# Arcane Barrage should be the last cast of the TotM window if it is not used with RoP or AP\nactions.rotation+=/arcane_barrage,if=buff.arcane_power.down&buff.rune_of_power.down&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains<=gcd&buff.arcane_charge.stack=buff.arcane_charge.max_stack\n# When the target is in execute range and there is more than one enemy, use barrage as soon as you have enough charges to hit all enemies if the Arcane Bombardment legendary is equipped\nactions.rotation+=/arcane_barrage,if=variable.empowered_barrage&buff.arcane_charge.stack>=(active_enemies-1)&active_enemies>1&buff.deathborne.down\nactions.rotation+=/arcane_explosion,if=variable.empowered_barrage&buff.arcane_charge.stack<buff.arcane_charge.max_stack&active_enemies>1&buff.deathborne.down\nactions.rotation+=/arcane_blast\nactions.rotation+=/evocation,if=variable.outside_of_cooldowns\nactions.rotation+=/arcane_barrage\n\nactions.vaoe=rune_of_power,if=time<7\nactions.vaoe+=/arcane_orb,if=time<7\nactions.vaoe+=/arcane_explosion,if=time<7\nactions.vaoe+=/use_item,name=moonlit_prism,if=prev_gcd.1.mirrors_of_torment&(!equipped.the_first_sigil||trinket.the_first_sigil.cooldown.remains)\nactions.vaoe+=/evocation,if=cooldown.touch_of_the_magi.remains<=(action.evocation.execute_time+13)&cooldown.arcane_power.remains<=(action.evocation.execute_time+14)\nactions.vaoe+=/mirrors_of_torment,if=time>6&cooldown.touch_of_the_magi.remains<=9&buff.siphon_storm.up\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.siphon_storm.remains>20&!debuff.mirrors_of_torment.up\nactions.vaoe+=/arcane_blast,if=debuff.mirrors_of_torment.up&time<13\nactions.vaoe+=/arcane_blast,if=debuff.mirrors_of_torment.remains>=19&cooldown.touch_of_the_magi.remains\nactions.vaoe+=/rune_of_power,if=buff.arcane_power.down&cooldown.touch_of_the_magi.remains<=execute_time&cooldown.arcane_power.remains>10\nactions.vaoe+=/touch_of_the_magi,if=time>=13&cooldown.arcane_power.remains<=execute_time\nactions.vaoe+=/touch_of_the_magi,if=time>30&prev_gcd.1.rune_of_power\nactions.vaoe+=/arcane_power,if=prev_gcd.1.touch_of_the_magi\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&buff.siphon_storm.remains>24&!debuff.touch_of_the_magi.down\nactions.vaoe+=/arcane_blast,if=cooldown.touch_of_the_magi.remains<=8&cooldown.rune_of_power.remains<=9&buff.arcane_charge.stack=buff.arcane_charge.max_stack&active_enemies<6-(1*set_bonus.tier28_2pc)\nactions.vaoe+=/arcane_missiles,if=active_enemies<9-(1*set_bonus.tier28_2pc)&debuff.touch_of_the_magi.up&debuff.touch_of_the_magi.remains>action.arcane_missiles.execute_time,chain=1,early_chain_if=buff.clearcasting_channel.down&active_enemies<6\nactions.vaoe+=/arcane_missiles,if=buff.clearcasting.react\nactions.vaoe+=/arcane_orb,if=buff.arcane_charge.stack=0&cooldown.arcane_power.remains>15\nactions.vaoe+=/arcane_barrage,if=time>10&buff.arcane_charge.stack=buff.arcane_charge.max_stack&cooldown.touch_of_the_magi.remains&(buff.siphon_storm.remains<25||buff.siphon_storm.down&cooldown.touch_of_the_magi.remains>=11)\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack<buff.arcane_charge.max_stack\nactions.vaoe+=/arcane_explosion,if=buff.arcane_charge.stack=buff.arcane_charge.max_stack&prev_gcd.1.arcane_barrage",
				},
				["Frost Mage"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220523,
					["author"] = "SimC",
					["desc"] = "Mage Frost\nMay 23, 2022\n\nChanges:\n- Don't include Blink in Movement APL (positioning is a player decision)\n- Make some 'fight_remains' entries apply to boss fights only.",
					["lists"] = {
						["default"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.disciplinary_command.enabled & debuff.casting.up & debuff.casting.remains < 1 || cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down",
								["action"] = "counterspell",
							}, -- [1]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "cds",
							}, -- [2]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "essences",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies >= 3",
								["list_name"] = "aoe",
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "active_enemies < 3",
								["list_name"] = "st",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "movement",
							}, -- [6]
						},
						["precombat"] = {
							{
								["action"] = "arcane_intellect",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "water_elemental",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= 2",
								["action"] = "blizzard",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1",
								["action"] = "frostbolt",
							}, -- [5]
						},
						["aoe"] = {
							{
								["action"] = "frozen_orb",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.down || ! runeforge.deaths_fathom.enabled || buff.freezing_rain.up || active_enemies >= 6",
								["action"] = "blizzard",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & active_enemies = 5 & ( talent.freezing_rain.enabled || talent.bone_chilling.enabled || conduit.shivering_core.enabled || ! runeforge.cold_front.enabled )",
								["action"] = "blizzard",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & active_enemies = 4 & ( talent.freezing_rain.enabled || talent.bone_chilling.enabled & conduit.shivering_core.enabled || ! runeforge.cold_front.enabled & ! runeforge.slick_ice.enabled )",
								["action"] = "blizzard",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & active_enemies <= 3 & ! runeforge.slick_ice.enabled & ! runeforge.cold_front.enabled & conduit.shivering_core.enabled & ( talent.freezing_rain.enabled || talent.bone_chilling.enabled )",
								["action"] = "blizzard",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( remaining_winters_chill = 0 || debuff.winters_chill.down ) & ( prev_gcd.1.ebonbolt || buff.brain_freeze.react & buff.fingers_of_frost.react = 0 )",
								["action"] = "flurry",
							}, -- [6]
							{
								["action"] = "ice_nova",
								["enabled"] = true,
							}, -- [7]
							{
								["action"] = "comet_storm",
								["enabled"] = true,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent_humanoid.down",
								["interrupt_if"] = "1",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.deaths_fathom.enabled & ( runeforge.cold_front.enabled || runeforge.slick_ice.enabled ) & buff.deathborne.remains > cast_time + travel_time",
								["action"] = "frostbolt",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill = 1 & comet_storm_remains > action.ice_lance.travel_time",
								["action"] = "frostbolt",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.fingers_of_frost.react || debuff.frozen.remains > travel_time || remaining_winters_chill & debuff.winters_chill.remains > travel_time",
								["action"] = "ice_lance",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.combat_meditation.enabled",
								["action"] = "radiant_spark",
							}, -- [13]
							{
								["action"] = "mirrors_of_torment",
								["enabled"] = true,
							}, -- [14]
							{
								["action"] = "shifting_power",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down",
								["action"] = "fire_blast",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct > 30 & active_enemies >= 6 & ! runeforge.glacial_fragments.enabled",
								["action"] = "arcane_explosion",
							}, -- [17]
							{
								["action"] = "ebonbolt",
								["enabled"] = true,
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.glacial_fragments.enabled & ( talent.splitting_ice.enabled || active_enemies >= 5 ) & travel_time < ground_aoe.blizzard.remains",
								["action"] = "ice_lance",
							}, -- [19]
							{
								["action"] = "frostbolt",
								["enabled"] = true,
							}, -- [20]
						},
						["cds"] = {
							{
								["enabled"] = true,
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "buff.rune_of_power.down",
								["name"] = "shadowed_orb_of_torment",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "prev_off_gcd.icy_veins || boss & fight_remains < 30",
								["action"] = "potion",
							}, -- [2]
							{
								["action"] = "deathborne",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies < 3 & ( conduit.siphoned_malice.enabled || soulbind.wasteland_propriety.enabled ) & buff.brain_freeze.react = 0",
								["action"] = "mirrors_of_torment",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "cooldown.icy_veins.remains > 12 & buff.rune_of_power.down",
								["action"] = "rune_of_power",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & ( buff.icy_veins.down || talent.rune_of_power.enabled ) & ( buff.slick_ice.down || conduit.icy_propulsion.enabled & ( talent.comet_storm.enabled || set_bonus.tier28_2pc ) || active_enemies >= 2 )",
								["action"] = "icy_veins",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.temporal_warp.enabled & buff.exhaustion.up & ( prev_off_gcd.icy_veins || boss & fight_remains < 40 )",
								["action"] = "time_warp",
							}, -- [7]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [8]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [9]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [12]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [13]
							{
								["action"] = "bag_of_tricks",
								["enabled"] = true,
							}, -- [14]
						},
						["st"] = {
							{
								["enabled"] = true,
								["criteria"] = "( remaining_winters_chill = 0 || debuff.winters_chill.down ) & ( prev_gcd.1.ebonbolt || buff.brain_freeze.react & ( prev_gcd.1.glacial_spike || prev_gcd.1.frostbolt & ( ! conduit.ire_of_the_ascended.enabled || cooldown.radiant_spark.remains || runeforge.freezing_winds.enabled ) || prev_gcd.1.radiant_spark || buff.fingers_of_frost.react = 0 & ( debuff.mirrors_of_torment.up || buff.freezing_winds.up || buff.expanded_potential.react ) ) )",
								["action"] = "flurry",
							}, -- [1]
							{
								["action"] = "frozen_orb",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill",
								["action"] = "comet_storm",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "talent.splitting_ice.enabled & talent.chain_reaction.enabled & buff.fingers_of_frost.react = buff.fingers_of_frost.max_stack",
								["action"] = "ice_lance",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.deaths_fathom.enabled & ( runeforge.cold_front.enabled || runeforge.slick_ice.enabled ) & buff.deathborne.remains > cast_time + travel_time & active_enemies >= 2",
								["action"] = "frostbolt",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "( ! runeforge.slick_ice.enabled || ! conduit.icy_propulsion.enabled & buff.deathborne.down ) & active_enemies >= 2",
								["action"] = "blizzard",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill = 1 & debuff.winters_chill.remains",
								["action"] = "ray_of_frost",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill & debuff.winters_chill.remains > cast_time + travel_time",
								["action"] = "glacial_spike",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill = 1 & comet_storm_remains > action.ice_lance.travel_time",
								["action"] = "frostbolt",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "remaining_winters_chill & remaining_winters_chill > buff.fingers_of_frost.react & debuff.winters_chill.remains > travel_time",
								["action"] = "ice_lance",
							}, -- [10]
							{
								["action"] = "ice_nova",
								["enabled"] = true,
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.freezing_winds.up & active_enemies = 1",
								["action"] = "radiant_spark",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.brain_freeze.react & talent.glacial_spike.enabled & conduit.ire_of_the_ascended.enabled & buff.icicles.stack >= 4",
								["action"] = "radiant_spark",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.fingers_of_frost.react || debuff.frozen.remains > travel_time",
								["action"] = "ice_lance",
							}, -- [14]
							{
								["action"] = "ebonbolt",
								["enabled"] = true,
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "( ! talent.glacial_spike.enabled || ! conduit.ire_of_the_ascended.enabled ) & ( ! runeforge.freezing_winds.enabled || active_enemies >= 2 ) & buff.brain_freeze.react",
								["action"] = "radiant_spark",
							}, -- [16]
							{
								["action"] = "mirrors_of_torment",
								["enabled"] = true,
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & ( runeforge.heart_of_the_fae.enabled || soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || runeforge.freezing_winds.enabled & buff.freezing_winds.down || active_enemies >= 2 )",
								["action"] = "shifting_power",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down",
								["action"] = "arcane_explosion",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_fire.down",
								["action"] = "fire_blast",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.brain_freeze.react",
								["action"] = "glacial_spike",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent_humanoid.down",
								["interrupt_if"] = "1",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [22]
							{
								["action"] = "frostbolt",
								["enabled"] = true,
							}, -- [23]
						},
						["movement"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.ice_floes.down",
								["action"] = "ice_floes",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "mana.pct > 30 & active_enemies >= 2",
								["action"] = "arcane_explosion",
							}, -- [2]
							{
								["action"] = "fire_blast",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "ice_lance",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20220523,
					["warnings"] = "WARNING:  The import for 'default' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'aoe' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 5: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 5: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 9: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 13: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 17: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 19: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'cds' required some automated changes.\nLine 4: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 6: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 7: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'st' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 1: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 4: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 13: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 13: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 16: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 16: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 16: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 18: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 18: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 22: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\n\nImported 6 action lists.\n",
					["profile"] = "## Mage Frost\n## May 23, 2022\n\n## Changes:\n## - Don't include Blink in Movement APL (positioning is a player decision)\n## - Make some 'fight_remains' entries apply to boss fights only.\n\n## Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/arcane_intellect\nactions.precombat+=/summon_water_elemental\nactions.precombat+=/fleshcraft\nactions.precombat+=/blizzard,if=active_enemies>=2\nactions.precombat+=/frostbolt,if=active_enemies=1\n\n## Executed every time the actor is available.\nactions=counterspell,if=!runeforge.disciplinary_command&debuff.casting.up&debuff.casting.remains<1||cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down\nactions+=/call_action_list,name=cds\nactions+=/call_action_list,name=essences\nactions+=/call_action_list,name=aoe,strict=1,if=active_enemies>=3\nactions+=/call_action_list,name=st,strict=1,if=active_enemies<3\nactions+=/call_action_list,name=movement\n\nactions.aoe=frozen_orb\nactions.aoe+=/blizzard,if=buff.deathborne.down||!runeforge.deaths_fathom||buff.freezing_rain.up||active_enemies>=6\nactions.aoe+=/blizzard,if=buff.deathborne.up&active_enemies=5&(talent.freezing_rain||talent.bone_chilling||conduit.shivering_core||!runeforge.cold_front)\nactions.aoe+=/blizzard,if=buff.deathborne.up&active_enemies=4&(talent.freezing_rain||talent.bone_chilling&conduit.shivering_core||!runeforge.cold_front&!runeforge.slick_ice)\nactions.aoe+=/blizzard,if=buff.deathborne.up&active_enemies<=3&!runeforge.slick_ice&!runeforge.cold_front&conduit.shivering_core&(talent.freezing_rain||talent.bone_chilling)\nactions.aoe+=/flurry,if=(remaining_winters_chill=0||debuff.winters_chill.down)&(prev_gcd.1.ebonbolt||buff.brain_freeze.react&buff.fingers_of_frost.react=0)\nactions.aoe+=/ice_nova\nactions.aoe+=/comet_storm\nactions.aoe+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent_humanoid.down,interrupt_immediate=1,interrupt_global=1,interrupt_if=1\nactions.aoe+=/frostbolt,if=runeforge.deaths_fathom&(runeforge.cold_front||runeforge.slick_ice)&buff.deathborne.remains>cast_time+travel_time\nactions.aoe+=/frostbolt,if=remaining_winters_chill=1&comet_storm_remains>action.ice_lance.travel_time\nactions.aoe+=/ice_lance,if=buff.fingers_of_frost.react||debuff.frozen.remains>travel_time||remaining_winters_chill&debuff.winters_chill.remains>travel_time\nactions.aoe+=/radiant_spark,if=soulbind.combat_meditation\nactions.aoe+=/mirrors_of_torment\nactions.aoe+=/shifting_power\nactions.aoe+=/fire_blast,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down\nactions.aoe+=/arcane_explosion,if=mana.pct>30&active_enemies>=6&!runeforge.glacial_fragments\nactions.aoe+=/ebonbolt\nactions.aoe+=/ice_lance,if=runeforge.glacial_fragments&(talent.splitting_ice||active_enemies>=5)&travel_time<ground_aoe.blizzard.remains\n## + actions.aoe+=/wait,sec=0.1,if=runeforge.glacial_fragments&!runeforge.deaths_fathom&(!talent.comet_storm&active_enemies>=5||active_enemies>=6)\nactions.aoe+=/frostbolt\n\nactions.cds=use_item,name=shadowed_orb_of_torment,if=buff.rune_of_power.down\nactions.cds+=/potion,if=prev_off_gcd.icy_veins||boss&fight_remains<30\nactions.cds+=/deathborne\nactions.cds+=/mirrors_of_torment,if=active_enemies<3&(conduit.siphoned_malice||soulbind.wasteland_propriety)&buff.brain_freeze.react=0\nactions.cds+=/rune_of_power,if=cooldown.icy_veins.remains>12&buff.rune_of_power.down\nactions.cds+=/icy_veins,if=buff.rune_of_power.down&(buff.icy_veins.down||talent.rune_of_power)&(buff.slick_ice.down||conduit.icy_propulsion&(talent.comet_storm||set_bonus.tier28_2pc)||active_enemies>=2)\nactions.cds+=/time_warp,if=runeforge.temporal_warp&buff.exhaustion.up&(prev_off_gcd.icy_veins||boss&fight_remains<40)\nactions.cds+=/use_items\nactions.cds+=/blood_fury\nactions.cds+=/berserking\nactions.cds+=/lights_judgment\nactions.cds+=/fireblood\nactions.cds+=/ancestral_call\nactions.cds+=/bag_of_tricks\n\n## Disabled because Blink/Shimmer is a player choice.\n## actions.movement=blink_any,if=movement.distance>10\nactions.movement+=/ice_floes,if=buff.ice_floes.down\nactions.movement+=/arcane_explosion,if=mana.pct>30&active_enemies>=2\nactions.movement+=/fire_blast\nactions.movement+=/ice_lance\n\nactions.st=flurry,if=(remaining_winters_chill=0||debuff.winters_chill.down)&(prev_gcd.1.ebonbolt||buff.brain_freeze.react&(prev_gcd.1.glacial_spike||prev_gcd.1.frostbolt&(!conduit.ire_of_the_ascended||cooldown.radiant_spark.remains||runeforge.freezing_winds)||prev_gcd.1.radiant_spark||buff.fingers_of_frost.react=0&(debuff.mirrors_of_torment.up||buff.freezing_winds.up||buff.expanded_potential.react)))\nactions.st+=/frozen_orb\nactions.st+=/comet_storm,if=remaining_winters_chill\nactions.st+=/ice_lance,if=talent.splitting_ice&talent.chain_reaction&buff.fingers_of_frost.react=buff.fingers_of_frost.max_stack\nactions.st+=/frostbolt,if=runeforge.deaths_fathom&(runeforge.cold_front||runeforge.slick_ice)&buff.deathborne.remains>cast_time+travel_time&active_enemies>=2\nactions.st+=/blizzard,if=(!runeforge.slick_ice||!conduit.icy_propulsion&buff.deathborne.down)&active_enemies>=2\nactions.st+=/ray_of_frost,if=remaining_winters_chill=1&debuff.winters_chill.remains\nactions.st+=/glacial_spike,if=remaining_winters_chill&debuff.winters_chill.remains>cast_time+travel_time\nactions.st+=/frostbolt,if=remaining_winters_chill=1&comet_storm_remains>action.ice_lance.travel_time\nactions.st+=/ice_lance,if=remaining_winters_chill&remaining_winters_chill>buff.fingers_of_frost.react&debuff.winters_chill.remains>travel_time\nactions.st+=/ice_nova\nactions.st+=/radiant_spark,if=buff.freezing_winds.up&active_enemies=1\nactions.st+=/radiant_spark,if=buff.brain_freeze.react&talent.glacial_spike&conduit.ire_of_the_ascended&buff.icicles.stack>=4\nactions.st+=/ice_lance,if=buff.fingers_of_frost.react||debuff.frozen.remains>travel_time\nactions.st+=/ebonbolt\nactions.st+=/radiant_spark,if=(!talent.glacial_spike||!conduit.ire_of_the_ascended)&(!runeforge.freezing_winds||active_enemies>=2)&buff.brain_freeze.react\nactions.st+=/mirrors_of_torment\nactions.st+=/shifting_power,if=buff.rune_of_power.down&(runeforge.heart_of_the_fae||soulbind.grove_invigoration||soulbind.field_of_blossoms||runeforge.freezing_winds&buff.freezing_winds.down||active_enemies>=2)\nactions.st+=/arcane_explosion,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down\nactions.st+=/fire_blast,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_fire.down\nactions.st+=/glacial_spike,if=buff.brain_freeze.react\nactions.st+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent_humanoid.down,interrupt_immediate=1,interrupt_global=1,interrupt_if=1\nactions.st+=/frostbolt",
					["spec"] = 64,
				},
				["Fire"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220821,
					["author"] = "SimC",
					["desc"] = "Fire Mage\nhttps://github.com/simulationcraft/simc/\nAugust 21, 2022\n\nChanges:\n- Use fight_remains rather than target.time_to_die for last-second ability usages.\n- Loosen cast requirements for Combustion (i.e., don't hold it for a fresh Meteor cast).\n- Enable strict checking on a few forks in the APL to reduce workload.\n- Adjust a Pyroblast entry that does not model well in-game (sim tested at no significant DPS impact).\n- Convert all buff.X.react entries to buff.X.up, an almost insignificant DPS gain in sims.\n- Use hardcoded variables to reduce CPU workload.",
					["lists"] = {
						["rop_phase"] = {
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hot_streak_flamestrike & ( buff.hot_streak.up || buff.firestorm.up )",
								["action"] = "flamestrike",
								["description"] = "Delay Combustion for Mirrors of Torment.",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & runeforge.deaths_fathom.enabled & variable.time_to_combustion < buff.deathborne.remains & active_enemies >= 2",
								["action"] = "fireball",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike & buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "flamestrike",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.firestorm.up",
								["action"] = "pyroblast",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up",
								["action"] = "pyroblast",
							}, -- [6]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! variable.fire_blast_pooling & buff.sun_kings_blessing_ready.down & active_enemies < variable.hard_cast_flamestrike & ! firestarter.active & ( ! buff.heating_up.up & ! buff.hot_streak.up & ! prev_off_gcd.fire_blast & ( action.fire_blast.charges >= 2 || ( talent.alexstraszas_fury.enabled & cooldown.dragons_breath.ready ) || searing_touch.active ) )",
								["use_off_gcd"] = 1,
								["description"] = "Use one Fire Blast early in RoP if you don't have either Heating Up or Hot Streak yet and either: (a) have more than two already, (b) have Alexstrasza's Fury ready to use, or (c) Searing Touch is active. Don't do this while hard casting Flamestrikes or when Sun King's Blessing is ready.",
								["action"] = "fire_blast",
							}, -- [7]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! variable.fire_blast_pooling & ! firestarter.active & buff.sun_kings_blessing_ready.down & ( ( ( action.fireball.executing & ( action.fireball.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) || action.pyroblast.executing & ( action.pyroblast.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) ) & buff.heating_up.react ) || ( searing_touch.active & ( buff.heating_up.react & ! action.scorch.executing || ! buff.hot_streak.react & ! buff.heating_up.react & action.scorch.executing & ! hot_streak_spells_in_flight ) ) )",
								["use_off_gcd"] = 1,
								["description"] = "Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.",
								["action"] = "fire_blast",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "active_talents",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.pyroclasm.react & cast_time < buff.pyroclasm.remains & cast_time < buff.rune_of_power.remains & ( ! runeforge.sun_kings_blessing.enabled || buff.pyroclasm.remains < action.fireball.cast_time + cast_time * buff.pyroclasm.react )",
								["action"] = "pyroblast",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & searing_touch.active & active_enemies < variable.hot_streak_flamestrike",
								["action"] = "pyroblast",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! variable.phoenix_pooling & ( active_dot.ignite < 2 || active_enemies >= variable.hard_cast_flamestrike || active_enemies >= variable.hot_streak_flamestrike )",
								["action"] = "phoenix_flames",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "searing_touch.active",
								["action"] = "scorch",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2",
								["action"] = "dragons_breath",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.arcane_explosion & mana.pct >= variable.arcane_explosion_mana & target.within10",
								["action"] = "arcane_explosion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike",
								["action"] = "flamestrike",
								["description"] = "With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.",
							}, -- [16]
							{
								["action"] = "fireball",
								["enabled"] = true,
							}, -- [17]
						},
						["default"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.disciplinary_command.enabled",
								["action"] = "counterspell",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & action.fire_blast.charges <= 1 & ! ( buff.infernal_cascade.up & buff.hot_streak.react ) & variable.shifting_power_before_combustion",
								["action"] = "shifting_power",
								["description"] = "Variable that estimates whether Shifting Power will be used before Combustion is ready.",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & ( variable.time_to_combustion > action_cooldown - 5 )",
								["action"] = "radiant_spark",
								["description"] = "Save Radiant Spark for Combustion, but otherwise use it on cooldown.",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.rune_of_power.down & variable.time_to_combustion < variable.combustion_precast_time + execute_time + ( buff.deathborne.duration - buff.combustion.duration ) * runeforge.deaths_fathom.enabled",
								["action"] = "deathborne",
								["description"] = "Deathborne should always be used with Combustion. With Death's Fathom, it should be used early so that Deathborne will have more stacks during Combustion.",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion < variable.combustion_precast_time + execute_time & buff.combustion.down",
								["action"] = "mirrors_of_torment",
								["description"] = "Use Mirrors of Torment with Combustion.",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion > action_cooldown - 30 * runeforge.sinful_delight.enabled",
								["action"] = "mirrors_of_torment",
								["description"] = "Also use Mirrors of Torment in between Combustions as long as Combustion will not have to be delayed much for it.",
							}, -- [6]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "fire_blast",
								["criteria"] = "action.mirrors_of_torment.executing & full_recharge_time - action.mirrors_of_torment.execute_remains < 4 & ! hot_streak_spells_in_flight & ! buff.hot_streak.up",
								["description"] = "For Venthyr, use a Fire Blast charge during Mirrors of Torment cast to avoid capping charges.",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion > action_cooldown - 5",
								["action"] = "gladiators_badge",
								["effect_name"] = "gladiators_badge",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
								["criteria"] = "variable.time_to_combustion <= variable.empyreal_ordnance_delay & variable.time_to_combustion > variable.empyreal_ordnance_delay - 5",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
								["criteria"] = "( variable.time_to_combustion <= variable.combustion_precast_time + 2 || fight_remains < variable.time_to_combustion ) & buff.combustion.down",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
								["criteria"] = "variable.time_to_combustion <= 8 || fight_remains < variable.time_to_combustion",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
								["criteria"] = "variable.time_to_combustion <= 5 || fight_remains < variable.time_to_combustion",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
								["criteria"] = "( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "macabre_sheet_music",
								["action"] = "macabre_sheet_music",
								["criteria"] = "variable.time_to_combustion <= 5",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
								["criteria"] = "( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 ) & ( buff.infernal_cascade.stack = buff.infernal_cascade.max_stack || ! conduit.infernal_cascade.enabled || variable.combustion_on_use || variable.time_to_combustion > interpolated_fight_remains %  ( action_cooldown + 10 ) )",
								["description"] = "If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Infernal Cascade is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown.",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
								["criteria"] = "( variable.time_to_combustion >= 30 * ( variable.on_use_cutoff > 0 ) || ( ! trinket.t1.is.soul_igniter & trinket.t1.usable & trinket.t1.cooldown.remains || ! trinket.t2.is.soul_igniter & trinket.t2.usable & trinket.t2.cooldown.remains ) ) & ( ! equipped.dreadfire_vessel || cooldown.dreadfire_vessel.remains > 5 )",
							}, -- [16]
							{
								["buff_name"] = "soul_ignition",
								["criteria"] = "! conduit.infernal_cascade.enabled & time < 5 || buff.infernal_cascade.stack = buff.infernal_cascade.max_stack",
								["description"] = "Trigger Soul Igniter early with Infernal Cascade or when it was precast.",
								["enabled"] = true,
								["action"] = "cancel_buff",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
								["description"] = "Items that do not benefit Combustion should just be used outside of Combustion at some point.",
							}, -- [18]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [19]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [20]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [21]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
								["criteria"] = "equipped.gladiators_badge & ( buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0 )",
							}, -- [22]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.down",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & variable.time_to_combustion >= variable.on_use_cutoff || variable.on_use_cutoff = 0",
								["action"] = "use_items",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.grisly_icicle.enabled & buff.combustion.down & ( variable.time_to_combustion > action_cooldown || variable.time_to_combustion < variable.combustion_precast_time + execute_time )",
								["action"] = "frost_nova",
								["description"] = "Use Frost Nova to trigger Grisly Icicle.",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
								["action"] = "counterspell",
								["description"] = "Get the Disciplinary Command buff up, unless combustion is soon.",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_arcane.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + execute_time + action.frostbolt.cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 & ! talent.rune_of_power.enabled )",
								["action"] = "arcane_explosion",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.remains < cast_time & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion + cast_time > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
								["action"] = "frostbolt",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.disciplinary_command.enabled & cooldown.buff_disciplinary_command.ready & buff.disciplinary_command_frost.down & ! buff.disciplinary_command.up & ( variable.time_to_combustion > cooldown.buff_disciplinary_command.duration || variable.time_to_combustion < 5 )",
								["action"] = "frost_nova",
							}, -- [29]
							{
								["enabled"] = true,
								["op"] = "set",
								["description"] = "Pool as many Fire Blasts as possible for Combustion. Subtract out of the fractional component of the number of Fire Blasts that will naturally recharge during the Combustion phase because pooling anything past that will not grant an extra Fire Blast during Combustion.",
								["use_while_casting"] = 1,
								["value"] = "variable.extended_combustion_remains < variable.time_to_combustion & action.fire_blast.charges_fractional + ( variable.time_to_combustion + action.shifting_power.full_reduction * variable.shifting_power_before_combustion + ( debuff.mirrors_of_torment.max_stack - 1 ) * variable.mot_recharge_amount * covenant.venthyr * ( cooldown.mirrors_of_torment.remains <= variable.time_to_combustion ) ) / cooldown.fire_blast.duration - 1 < cooldown.fire_blast.max_charges + variable.overpool_fire_blasts / cooldown.fire_blast.duration - ( buff.combustion.duration / cooldown.fire_blast.duration )  % 1 & variable.time_to_combustion < fight_remains",
								["var_name"] = "fire_blast_pooling",
								["use_off_gcd"] = 1,
								["action"] = "variable",
							}, -- [30]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.up || variable.time_to_combustion < variable.combustion_precast_time & cooldown.combustion.remains < variable.combustion_precast_time",
								["list_name"] = "combustion_phase",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.rune_of_power.down & ! buff.firestorm.react & ( variable.time_to_combustion >= buff.rune_of_power.duration & variable.time_to_combustion > action.fire_blast.full_recharge_time || variable.time_to_combustion > fight_remains ) & ( ! runeforge.sun_kings_blessing.enabled || active_enemies >= variable.hard_cast_flamestrike || buff.sun_kings_blessing_ready.up || buff.sun_kings_blessing.react >= buff.sun_kings_blessing.max_stack - 1 || fight_remains < buff.rune_of_power.duration )",
								["action"] = "rune_of_power",
							}, -- [32]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["description"] = "Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.",
								["op"] = "set",
								["criteria"] = "! variable.fire_blast_pooling & runeforge.sun_kings_blessing.enabled",
								["value"] = "searing_touch.active & action.fire_blast.full_recharge_time > 3 * gcd.max",
								["var_name"] = "fire_blast_pooling",
								["action"] = "variable",
								["use_off_gcd"] = 1,
							}, -- [33]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "When using Flamestrike in Combustion, save as many charges as possible for Combustion without capping.",
								["strict"] = 1,
								["criteria"] = "buff.rune_of_power.up & buff.combustion.down & variable.time_to_combustion > 0",
								["list_name"] = "rop_phase",
							}, -- [34]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["description"] = "Adjust the variable that controls Fire Blast usage to ensure its charges are also pooled for Rune of Power.",
								["op"] = "set",
								["criteria"] = "! variable.fire_blast_pooling & talent.rune_of_power.enabled & buff.rune_of_power.down",
								["value"] = "( ! runeforge.sun_kings_blessing.enabled || buff.sun_kings_blessing.stack > buff.sun_kings_blessing.max_stack - 1 ) & cooldown.rune_of_power.remains < action.fire_blast.full_recharge_time - action.shifting_power.full_reduction * ( variable.shifting_power_before_combustion & cooldown.shifting_power.remains < cooldown.rune_of_power.remains ) & cooldown.rune_of_power.remains < fight_remains",
								["var_name"] = "fire_blast_pooling",
								["action"] = "variable",
								["use_off_gcd"] = 1,
							}, -- [35]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! variable.fire_blast_pooling & variable.time_to_combustion > 0 & active_enemies >= variable.hard_cast_flamestrike & ! firestarter.active & ! buff.hot_streak.up & ( buff.heating_up.up & action.flamestrike.execute_remains < 0.5 || charges_fractional >= 2 )",
								["use_off_gcd"] = 1,
								["description"] = "When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Blaster Master.",
								["action"] = "fire_blast",
							}, -- [36]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "firestarter.active & variable.time_to_combustion > 0 & ! variable.fire_blast_pooling & ( ! action.fireball.executing & ! action.pyroblast.in_flight & buff.heating_up.react || action.fireball.executing & ! buff.hot_streak.react || action.pyroblast.in_flight & buff.heating_up.react & ! buff.hot_streak.react )",
								["use_off_gcd"] = 1,
								["description"] = "During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Blaster Master, they should be spread out to maintain the Blaster Master buff.",
								["action"] = "fire_blast",
							}, -- [37]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "fire_blast",
								["criteria"] = "action.shifting_power.executing & full_recharge_time < action.shifting_power.tick_reduction",
								["description"] = "Avoid capping Fire Blast charges while channeling Shifting Power",
							}, -- [38]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["criteria"] = "variable.time_to_combustion > 0 & buff.rune_of_power.down & buff.combustion.down",
								["list_name"] = "standard_rotation",
							}, -- [39]
							{
								["action"] = "scorch",
								["enabled"] = true,
							}, -- [40]
						},
						["precombat"] = {
							{
								["action"] = "arcane_intellect",
								["enabled"] = true,
							}, -- [1]
							{
								["enabled"] = true,
								["description"] = "actions.precombat+=/variable,name=on_use_cutoff,value=20+variable.empyreal_ordnance_delay,if=equipped.empyreal_ordnance",
								["action"] = "fleshcraft",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
								["criteria"] = "! variable.combustion_on_use & ! equipped.dreadfire_vessel & ! talent.firestarter.enabled",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [4]
							{
								["action"] = "mirror_image",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! prev.pyroblast",
								["action"] = "pyroblast",
							}, -- [6]
						},
						["combustion_cooldowns"] = {
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.up",
								["action"] = "berserking",
							}, -- [3]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.temporal_warp.enabled & buff.exhaustion.up",
								["action"] = "time_warp",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
								["criteria"] = "buff.scars_of_fraternal_strife_4.up",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "gladiators_badge",
								["effect_name"] = "gladiators_badge",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "inscrutable_quantum_device",
								["action"] = "inscrutable_quantum_device",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "flame_of_battle",
								["action"] = "flame_of_battle",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "wakeners_frond",
								["action"] = "wakeners_frond",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "instructors_divine_bell",
								["action"] = "instructors_divine_bell",
							}, -- [12]
							{
								["enabled"] = true,
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
							}, -- [13]
							{
								["enabled"] = true,
								["name"] = "the_first_sigil",
								["action"] = "the_first_sigil",
							}, -- [14]
							{
								["enabled"] = true,
								["name"] = "fleshrenders_meathook",
								["action"] = "fleshrenders_meathook",
							}, -- [15]
							{
								["enabled"] = true,
								["name"] = "enforcers_stun_grenade",
								["action"] = "enforcers_stun_grenade",
							}, -- [16]
							{
								["enabled"] = true,
								["name"] = "neural_synapse_enhancer",
								["action"] = "neural_synapse_enhancer",
							}, -- [17]
							{
								["enabled"] = true,
								["name"] = "hyperthread_wristwraps",
								["action"] = "hyperthread_wristwraps",
								["criteria"] = "prev.1.fire_blast + prev.2.fire_blast + prev.3.fire_blast >= 2 & action.fire_blast.charges = 0",
							}, -- [18]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [19]
						},
						["active_talents"] = {
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & buff.combustion.down & ( variable.time_to_combustion > cooldown.living_bomb.duration || variable.time_to_combustion <= 0 )",
								["action"] = "living_bomb",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.time_to_combustion <= 0 || buff.combustion.remains > travel_time || ( cooldown.meteor.duration < variable.time_to_combustion & ! talent.rune_of_power.enabled ) || talent.rune_of_power.enabled & buff.rune_of_power.up & variable.time_to_combustion > action.meteor.cooldown || fight_remains < variable.time_to_combustion",
								["action"] = "meteor",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "talent.alexstraszas_fury.enabled & ( buff.combustion.down & ! buff.hot_streak.up )",
								["action"] = "dragons_breath",
							}, -- [3]
						},
						["standard_rotation"] = {
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hot_streak_flamestrike & ( buff.hot_streak.up || buff.firestorm.up )",
								["action"] = "flamestrike",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.deathborne.up & runeforge.deaths_fathom.enabled & variable.time_to_combustion < buff.deathborne.remains & active_enemies >= 2",
								["action"] = "fireball",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.firestorm.up",
								["action"] = "pyroblast",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & buff.hot_streak.remains < action.fireball.execute_time",
								["action"] = "pyroblast",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & ( prev_gcd.1.fireball || firestarter.active || action.pyroblast.in_flight )",
								["action"] = "pyroblast",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike & buff.sun_kings_blessing_ready.up & ( cooldown.rune_of_power.remains + action.rune_of_power.execute_time + cast_time > buff.sun_kings_blessing_ready.remains || ! talent.rune_of_power.enabled ) & variable.time_to_combustion + cast_time > buff.sun_kings_blessing_ready.remains & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "flamestrike",
								["description"] = "Try to get SKB procs inside RoP phases or Combustion phases when possible.",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & ( cooldown.rune_of_power.remains + action.rune_of_power.execute_time + cast_time > buff.sun_kings_blessing_ready.remains || ! talent.rune_of_power.enabled ) & variable.time_to_combustion + cast_time > buff.sun_kings_blessing_ready.remains & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & searing_touch.active",
								["action"] = "pyroblast",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "buff.pyroclasm.react & cast_time < buff.pyroclasm.remains & ( ! runeforge.sun_kings_blessing.enabled || buff.pyroclasm.remains < action.fireball.cast_time + cast_time * buff.pyroclasm.react )",
								["action"] = "pyroblast",
							}, -- [9]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! firestarter.active & ! variable.fire_blast_pooling & buff.sun_kings_blessing_ready.down & ( ( ( action.fireball.executing & ( action.fireball.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) || action.pyroblast.executing & ( action.pyroblast.execute_remains < 0.5 || ! runeforge.firestorm.enabled ) ) & buff.heating_up.react ) || ( searing_touch.active & ( buff.heating_up.react & ! action.scorch.executing || ! buff.hot_streak.react & ! buff.heating_up.react & action.scorch.executing & ! hot_streak_spells_in_flight ) ) )",
								["use_off_gcd"] = 1,
								["description"] = "During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.",
								["action"] = "fire_blast",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & active_enemies < variable.hot_streak_flamestrike",
								["action"] = "pyroblast",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "! variable.phoenix_pooling & ( ! talent.from_the_ashes.enabled || active_enemies > 1 ) & ( active_dot.ignite < 2 || active_enemies >= variable.hard_cast_flamestrike || active_enemies >= variable.hot_streak_flamestrike )",
								["action"] = "phoenix_flames",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "active_talents",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1",
								["action"] = "dragons_breath",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "searing_touch.active",
								["action"] = "scorch",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.arcane_explosion & mana.pct >= variable.arcane_explosion_mana & target.within10",
								["action"] = "arcane_explosion",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies >= variable.hard_cast_flamestrike",
								["action"] = "flamestrike",
								["description"] = "With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.",
							}, -- [17]
							{
								["action"] = "fireball",
								["enabled"] = true,
							}, -- [18]
						},
						["combustion_phase"] = {
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down",
								["action"] = "lights_judgment",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down",
								["action"] = "bag_of_tricks",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 & buff.combustion.down",
								["action"] = "living_bomb",
							}, -- [3]
							{
								["enabled"] = true,
								["op"] = "set",
								["description"] = "Estimate how long Combustion will last thanks to Sun King's Blessing to determine how Fire Blasts should be used.",
								["use_while_casting"] = 1,
								["value"] = "buff.combustion.remains + buff.combustion.duration * ( cooldown.combustion.remains < buff.combustion.remains )",
								["var_name"] = "extended_combustion_remains",
								["use_off_gcd"] = 1,
								["action"] = "variable",
							}, -- [4]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["action"] = "variable",
								["op"] = "add",
								["criteria"] = "runeforge.sun_kings_blessing.enabled & ( buff.sun_kings_blessing_ready.up || variable.extended_combustion_remains > gcd.remains + 1.5 * gcd.max * ( buff.sun_kings_blessing.max_stack - buff.sun_kings_blessing.stack ) )",
								["use_off_gcd"] = 1,
								["var_name"] = "extended_combustion_remains",
								["description"] = "Adds the duration of the Sun King's Blessing Combustion to the end of the current Combustion if the cast would start during this Combustion.",
								["value"] = "variable.skb_duration",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["description"] = "Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.",
								["strict"] = 1,
								["criteria"] = "variable.extended_combustion_remains > variable.skb_duration",
								["list_name"] = "combustion_cooldowns",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "neural_synapse_enhancer",
								["action"] = "neural_synapse_enhancer",
								["criteria"] = "variable.time_to_combustion > 60",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "active_talents",
							}, -- [8]
							{
								["buff_name"] = "sun_kings_blessing",
								["criteria"] = "! set_bonus.tier28_4pc & buff.combustion.down & buff.sun_kings_blessing.stack > 2 & talent.rune_of_power.enabled & cooldown.rune_of_power.remains < 20",
								["description"] = "If Sun King's Blessing stacks are high, cancel them before Combustion so that the Sun King's Blessing proc can be safely delayed until after Combustion without risk of expiration.",
								["enabled"] = true,
								["action"] = "cancel_buff",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time & active_enemies >= variable.combustion_flamestrike",
								["action"] = "flamestrike",
								["description"] = "If Combustion is down, precast something before activating it.",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & buff.pyroclasm.react & buff.pyroclasm.remains > cast_time",
								["action"] = "pyroblast",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time & ! conduit.flame_accretion.enabled",
								["action"] = "fireball",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.down & cooldown.combustion.remains < cast_time",
								["action"] = "scorch",
							}, -- [14]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "hot_streak_spells_in_flight = 0 & buff.combustion.down & variable.time_to_combustion <= 0 & ( ! runeforge.disciplinary_command.enabled || buff.disciplinary_command.up || buff.disciplinary_command_frost.up & talent.rune_of_power.enabled & cooldown.buff_disciplinary_command.ready ) & ( ! runeforge.grisly_icicle.enabled || debuff.grisly_icicle.up ) & ( ! covenant.necrolord || cooldown.deathborne.remains || buff.deathborne.up ) & ( ! covenant.venthyr || cooldown.mirrors_of_torment.remains ) & ( action.meteor.in_flight & action.meteor.in_flight_remains <= variable.combustion_cast_remains || action.scorch.executing & action.scorch.execute_remains < variable.combustion_cast_remains || action.fireball.executing & action.fireball.execute_remains < variable.combustion_cast_remains || action.pyroblast.executing & action.pyroblast.execute_remains < variable.combustion_cast_remains || action.flamestrike.executing & action.flamestrike.execute_remains < variable.combustion_cast_remains )",
								["use_off_gcd"] = 1,
								["description"] = "Combustion should be used when the precast is almost finished.",
								["action"] = "combustion",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "buff.rune_of_power.down & variable.extended_combustion_remains > variable.skb_duration",
								["action"] = "rune_of_power",
								["description"] = "Rune of Power can be used in Combustion if it is down, but this should only be done if there is more Combustion time to benefit from than there would be from an SKB Combustion later.",
							}, -- [16]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "! conduit.infernal_cascade.enabled & ! variable.fire_blast_pooling & ( ! set_bonus.tier28_4pc || debuff.mirrors_of_torment.down || buff.sun_kings_blessing_ready.down || action.pyroblast.executing ) & buff.combustion.up & ! buff.firestorm.react & ! buff.hot_streak.react & hot_streak_spells_in_flight + buff.heating_up.react * ( gcd.remains > 0 ) < 2",
								["use_off_gcd"] = 1,
								["description"] = "Without Infernal Cascade, just use Fire Blasts when they won't munch crits and when Firestorm is down.",
								["action"] = "fire_blast",
							}, -- [17]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["description"] = "Use Shifting Power during Combustion when there are not enough Fire Blasts available to fully extend infernal cascade and only when Rune of Power is on cooldown.",
								["op"] = "set",
								["criteria"] = "covenant.night_fae",
								["value"] = "firestarter.remains < variable.extended_combustion_remains & ( conduit.infernal_cascade.enabled & variable.expected_fire_blasts < variable.needed_fire_blasts ) & ( ! talent.rune_of_power.enabled || cooldown.rune_of_power.remains > variable.extended_combustion_remains ) || active_enemies >= variable.combustion_shifting_power",
								["var_name"] = "use_shifting_power",
								["action"] = "variable",
								["use_off_gcd"] = 1,
							}, -- [18]
							{
								["enabled"] = true,
								["use_while_casting"] = 1,
								["criteria"] = "conduit.infernal_cascade & ! variable.fire_blast_pooling & ( ! set_bonus.tier28_4pc || debuff.mirrors_of_torment.down || buff.sun_kings_blessing_ready.down || action.pyroblast.executing ) & ( variable.expected_fire_blasts >= variable.needed_fire_blasts || buff.combustion.remains < gcd.max || variable.extended_combustion_remains <= buff.infernal_cascade.duration || buff.infernal_cascade.stack < 2 || buff.infernal_cascade.remains < gcd.max || cooldown.shifting_power.ready & variable.use_shifting_power ) & buff.combustion.up & ( ! buff.firestorm.react || buff.infernal_cascade.remains < 0.5 ) & ! buff.hot_streak.react & hot_streak_spells_in_flight + buff.heating_up.react * ( gcd.remains > 0 ) < 2",
								["use_off_gcd"] = 1,
								["action"] = "fire_blast",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "( buff.hot_streak.up & active_enemies >= variable.combustion_flamestrike ) || ( buff.firestorm.up & active_enemies >= variable.combustion_flamestrike - runeforge.firestorm.enabled )",
								["action"] = "flamestrike",
								["description"] = "Spend Hot Streaks during Combustion at high priority.",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.up & 2 * buff.hot_streak.react + buff.heating_up.react + hot_streak_spells_in_flight = 2",
								["action"] = "radiant_spark",
								["description"] = "Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.firestorm.up",
								["action"] = "pyroblast",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "buff.hot_streak.up & buff.combustion.up",
								["action"] = "pyroblast",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "prev_gcd.1.scorch & buff.heating_up.up & active_enemies < variable.combustion_flamestrike & buff.combustion.up",
								["action"] = "pyroblast",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_shifting_power & buff.combustion.up & ! action.fire_blast.charges & action.phoenix_flames.charges < action.phoenix_flames.max_charges",
								["action"] = "shifting_power",
								["description"] = "Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > execute_time + action.flamestrike.cast_time & buff.rune_of_power.remains < action.flamestrike.cast_time & active_enemies >= variable.combustion_flamestrike",
								["action"] = "rune_of_power",
								["description"] = "If a Sun King's Blessing proc would be used, Rune of Power should be used first if the existing Rune of Power will expire during the cast.",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & active_enemies >= variable.combustion_flamestrike & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "flamestrike",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > execute_time + action.pyroblast.cast_time & buff.rune_of_power.remains < action.pyroblast.cast_time",
								["action"] = "rune_of_power",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "buff.sun_kings_blessing_ready.up & buff.sun_kings_blessing_ready.remains > cast_time & buff.sun_kings_blessing_ready.expiration_delay_remains = 0",
								["action"] = "pyroblast",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "buff.pyroclasm.react & buff.pyroclasm.remains > cast_time & buff.combustion.remains > cast_time & active_enemies < variable.combustion_flamestrike & ( ! conduit.infernal_cascade.enabled || buff.infernal_cascade.remains > execute_time || buff.heating_up.react + hot_streak_spells_in_flight < 2 )",
								["action"] = "pyroblast",
								["description"] = "Pyroclasm procs should be used in Combustion at higher priority than Phoenix Flames and Scorch.",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.up & travel_time < buff.combustion.remains & buff.heating_up.react + hot_streak_spells_in_flight < 2",
								["action"] = "phoenix_flames",
								["description"] = "Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.remains > cast_time",
								["action"] = "scorch",
							}, -- [32]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.remains < gcd.max & active_enemies > 1",
								["action"] = "living_bomb",
								["description"] = "If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "buff.combustion.remains < gcd.max & buff.combustion.up",
								["action"] = "dragons_breath",
							}, -- [34]
						},
					},
					["version"] = 20220821,
					["warnings"] = "WARNING:  The import for 'rop_phase' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 4: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 15: Converted SimC syntax %% to Lua modulus operator (%) (1x).\nLine 15: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 16: Converted 'trinket.1.X' to 'trinket.t1.X' (3x).\nLine 16: Converted 'trinket.2.X' to 'trinket.t2.X' (3x).\nLine 17: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 25: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 27: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 27: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 28: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 29: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 30: Converted SimC syntax % to Lua division operator (/) (3x).\nLine 30: Converted SimC syntax %% to Lua modulus operator (%) (1x).\nLine 32: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 33: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\nLine 35: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 35: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 3: Converted 'talent.X' to 'talent.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'combustion_cooldowns' required some automated changes.\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'active_talents' required some automated changes.\nLine 2: Converted 'talent.X' to 'talent.X.enabled' (2x).\nLine 3: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'standard_rotation' required some automated changes.\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 9: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 12: Converted 'talent.X' to 'talent.X.enabled' (1x).\n\nWARNING:  The import for 'combustion_phase' required some automated changes.\nLine 5: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 9: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 13: Converted 'conduit.X' to 'conduit.X.enabled' at EOL (1x).\nLine 15: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 15: Converted 'runeforge.X' to 'runeforge.X.enabled' (2x).\nLine 17: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 18: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 18: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\nLine 20: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 30: Converted 'conduit.X' to 'conduit.X.enabled' (1x).\n\nImported 7 action lists.\n",
					["spec"] = 63,
					["profile"] = "## Fire Mage\n## https://github.com/simulationcraft/simc/\n## August 21, 2022\n\n## Changes:\n## - Use fight_remains rather than target.time_to_die for last-second ability usages.\n## - Loosen cast requirements for Combustion (i.e., don't hold it for a fresh Meteor cast).\n## - Enable strict checking on a few forks in the APL to reduce workload.\n## - Adjust a Pyroblast entry that does not model well in-game (sim tested at no significant DPS impact).\n## - Convert all buff.X.react entries to buff.X.up, an almost insignificant DPS gain in sims.\n## - Use hardcoded variables to reduce CPU workload.\n\n## Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/arcane_intellect\n## APL Variable Option: If set to a non-zero value, the Combustion action and cooldowns that are constrained to only be used when Combustion is up will not be used during the simulation.\n# actions.precombat+=/variable,name=disable_combustion,op=reset\n## APL Variable Option: This variable specifies whether Combustion should be used during Firestarter.\n# actions.precombat+=/variable,name=firestarter_combustion,default=-1,value=!talent.pyroclasm,if=variable.firestarter_combustion<0\n## APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes outside of Combustion should be used.\n# actions.precombat+=/variable,name=hot_streak_flamestrike,if=variable.hot_streak_flamestrike=0,value=2*talent.flame_patch+4*!talent.flame_patch\n## APL Variable Option: This variable specifies the number of targets at which Hard Cast Flamestrikes outside of Combustion should be used as filler.\n# actions.precombat+=/variable,name=hard_cast_flamestrike,if=variable.hard_cast_flamestrike=0,value=3*talent.flame_patch+6*!talent.flame_patch\n## APL Variable Option: This variable specifies the number of targets at which Hot Streak Flamestrikes are used during Combustion.\n# actions.precombat+=/variable,name=combustion_flamestrike,if=variable.combustion_flamestrike=0,value=3*talent.flame_patch+6*!talent.flame_patch\n## APL Variable Option: This variable specifies the number of targets at which Arcane Explosion outside of Combustion should be used.\n# actions.precombat+=/variable,name=arcane_explosion,if=variable.arcane_explosion=0,value=99*talent.flame_patch+2*!talent.flame_patch\n## APL Variable Option: This variable specifies the percentage of mana below which Arcane Explosion will not be used.\n# actions.precombat+=/variable,name=arcane_explosion_mana,default=40,op=reset\n## APL Variable Option: The number of targets at which Shifting Power can used during Combustion.\n# actions.precombat+=/variable,name=combustion_shifting_power,if=variable.combustion_shifting_power=0,value=variable.combustion_flamestrike\n## APL Variable Option: The time remaining on a cast when Combustion can be used in seconds.\n# actions.precombat+=/variable,name=combustion_cast_remains,default=0.7,op=reset\n## APL Variable Option: This variable specifies the number of seconds of Fire Blast that should be pooled past the default amount.\n# actions.precombat+=/variable,name=overpool_fire_blasts,default=0,op=reset\n## APL Variable Option: How long before Combustion should Empyreal Ordnance be used?\n# actions.precombat+=/variable,name=empyreal_ordnance_delay,default=18,op=reset\n## APL Variable Option: How much delay should be inserted after consuming an SKB proc before spending a Hot Streak? The APL will always delay long enough to prevent the SKB stack from being wasted.\n# actions.precombat+=/variable,name=skb_delay,default=-1,value=0.1,if=variable.skb_delay<0\n## If Combustion is disabled, schedule the first Combustion far after the fight ends.\n# actions.precombat+=/variable,name=time_to_combustion,value=fight_remains+100,if=variable.disable_combustion\n## The duration of a Sun King's Blessing Combustion.\n# actions.precombat+=/variable,name=skb_duration,value=dbc.effect.828420.base_value\n# The number of seconds of Fire Blast recharged by Mirrors of Torment.\n# actions.precombat+=/variable,name=mot_recharge_amount,value=dbc.effect.871274.base_value\n## Whether a usable item used to buff Combustion is equipped.\n# actions.precombat+=/variable,name=combustion_on_use,value=equipped.gladiators_badge||equipped.macabre_sheet_music||equipped.inscrutable_quantum_device||equipped.sunblood_amethyst||equipped.empyreal_ordnance||equipped.flame_of_battle||equipped.wakeners_frond||equipped.instructors_divine_bell||equipped.shadowed_orb_of_torment\n## How long before Combustion should trinkets that trigger a shared category cooldown on other trinkets not be used?\n# actions.precombat+=/variable,name=on_use_cutoff,value=20,if=variable.combustion_on_use\n# actions.precombat+=/variable,name=on_use_cutoff,value=25,if=equipped.macabre_sheet_music\n# actions.precombat+=/variable,name=on_use_cutoff,value=20+variable.empyreal_ordnance_delay,if=equipped.empyreal_ordnance\nactions.precombat+=/fleshcraft\nactions.precombat+=/use_item,name=soul_igniter,if=!variable.combustion_on_use&!equipped.dreadfire_vessel&!talent.firestarter\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/mirror_image\nactions.precombat+=/pyroblast,if=!prev.pyroblast\n\n## Executed every time the actor is available.\nactions=counterspell,if=!runeforge.disciplinary_command\n## Newfound Resolve is something that can't be modeled.\n## actions+=/newfound_resolve,use_while_casting=1,if=(buff.combustion.up||buff.sun_kings_blessing_ready.react)&buff.newfound_resolve.down\n## The combustion_timing action list schedules when Combustion will be used and stores the result in variable.time_to_combustion.\n## actions+=/call_action_list,name=combustion_timing\n# Variable that estimates whether Shifting Power will be used before Combustion is ready.\n## actions+=/variable,name=shifting_power_before_combustion,op=set,value=(active_enemies<variable.combustion_shifting_power||active_enemies<variable.combustion_flamestrike||variable.time_to_combustion-action.shifting_power.full_reduction>cooldown.shifting_power.duration)&variable.time_to_combustion-cooldown.shifting_power.remains>action.shifting_power.full_reduction&(cooldown.rune_of_power.remains-cooldown.shifting_power.remains>5||!talent.rune_of_power)\nactions+=/shifting_power,if=buff.combustion.down&action.fire_blast.charges<=1&!(buff.infernal_cascade.up&buff.hot_streak.react)&variable.shifting_power_before_combustion\n# Save Radiant Spark for Combustion, but otherwise use it on cooldown.\nactions+=/radiant_spark,if=buff.combustion.down&(variable.time_to_combustion>cooldown-5)\n# Deathborne should always be used with Combustion. With Death's Fathom, it should be used early so that Deathborne will have more stacks during Combustion.\nactions+=/deathborne,if=buff.combustion.down&buff.rune_of_power.down&variable.time_to_combustion<variable.combustion_precast_time+execute_time+(buff.deathborne.duration-buff.combustion.duration)*runeforge.deaths_fathom\n# Use Mirrors of Torment with Combustion.\nactions+=/mirrors_of_torment,if=variable.time_to_combustion<variable.combustion_precast_time+execute_time&buff.combustion.down\n# Also use Mirrors of Torment in between Combustions as long as Combustion will not have to be delayed much for it.\nactions+=/mirrors_of_torment,if=variable.time_to_combustion>cooldown-30*runeforge.sinful_delight\n# For Venthyr, use a Fire Blast charge during Mirrors of Torment cast to avoid capping charges.\nactions+=/fire_blast,use_while_casting=1,if=action.mirrors_of_torment.executing&full_recharge_time-action.mirrors_of_torment.execute_remains<4&!hot_streak_spells_in_flight&!buff.hot_streak.up\nactions+=/use_item,effect_name=gladiators_badge,if=variable.time_to_combustion>cooldown-5\nactions+=/use_item,name=empyreal_ordnance,if=variable.time_to_combustion<=variable.empyreal_ordnance_delay&variable.time_to_combustion>variable.empyreal_ordnance_delay-5\nactions+=/use_item,name=shadowed_orb_of_torment,if=(variable.time_to_combustion<=variable.combustion_precast_time+2||fight_remains<variable.time_to_combustion)&buff.combustion.down\nactions+=/use_item,name=grim_eclipse,if=variable.time_to_combustion<=8||fight_remains<variable.time_to_combustion\nactions+=/use_item,name=moonlit_prism,if=variable.time_to_combustion<=5||fight_remains<variable.time_to_combustion\nactions+=/use_item,name=glyph_of_assimilation,if=(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=macabre_sheet_music,if=variable.time_to_combustion<=5\n# If using a steroid on-use item, always use Dreadfire Vessel outside of Combustion. Otherwise, prioritize using Dreadfire Vessel with Combustion only if Infernal Cascade is enabled and a usage won't be lost over the duration of the fight. This adds a small value to the cooldown of Dreadfire Vessel when doing this calculation because it is unrealstic to assume that it will be used perfectly on cooldown.\nactions+=/use_item,name=dreadfire_vessel,if=(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)&(buff.infernal_cascade.stack=buff.infernal_cascade.max_stack||!conduit.infernal_cascade||variable.combustion_on_use||variable.time_to_combustion>interpolated_fight_remains%%(cooldown+10))\n## New Soul Igniter entry, relies on shared item CD information that is not yet supported.  Replaces the previous line when functional.\nactions+=/use_item,name=soul_igniter,if=(variable.time_to_combustion>=30*(variable.on_use_cutoff>0)||(!trinket.1.is.soul_igniter&trinket.1.usable&trinket.1.cooldown.remains||!trinket.2.is.soul_igniter&trinket.2.usable&trinket.2.cooldown.remains))&(!equipped.dreadfire_vessel||cooldown.dreadfire_vessel.remains>5)\n# Trigger Soul Igniter early with Infernal Cascade or when it was precast.\nactions+=/cancel_buff,name=soul_ignition,if=!conduit.infernal_cascade&time<5||buff.infernal_cascade.stack=buff.infernal_cascade.max_stack\n# Items that do not benefit Combustion should just be used outside of Combustion at some point.\nactions+=/use_item,name=inscrutable_quantum_device,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=flame_of_battle,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=wakeners_frond,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=instructors_divine_bell,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=sunblood_amethyst,if=equipped.gladiators_badge&(buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0)\nactions+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.down\nactions+=/use_items,if=buff.combustion.down&variable.time_to_combustion>=variable.on_use_cutoff||variable.on_use_cutoff=0\n# Use Frost Nova to trigger Grisly Icicle.\nactions+=/frost_nova,if=runeforge.grisly_icicle&buff.combustion.down&(variable.time_to_combustion>cooldown||variable.time_to_combustion<variable.combustion_precast_time+execute_time)\n# Get the Disciplinary Command buff up, unless combustion is soon.\nactions+=/counterspell,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/arcane_explosion,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_arcane.down&!buff.disciplinary_command.up&(variable.time_to_combustion+execute_time+action.frostbolt.cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5&!talent.rune_of_power)\nactions+=/frostbolt,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.remains<cast_time&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion+cast_time>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\nactions+=/frost_nova,if=runeforge.disciplinary_command&cooldown.buff_disciplinary_command.ready&buff.disciplinary_command_frost.down&!buff.disciplinary_command.up&(variable.time_to_combustion>cooldown.buff_disciplinary_command.duration||variable.time_to_combustion<5)\n# Pool as many Fire Blasts as possible for Combustion. Subtract out of the fractional component of the number of Fire Blasts that will naturally recharge during the Combustion phase because pooling anything past that will not grant an extra Fire Blast during Combustion.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=variable.extended_combustion_remains<variable.time_to_combustion&action.fire_blast.charges_fractional+(variable.time_to_combustion+action.shifting_power.full_reduction*variable.shifting_power_before_combustion+(debuff.mirrors_of_torment.max_stack-1)*variable.mot_recharge_amount*covenant.venthyr*(cooldown.mirrors_of_torment.remains<=variable.time_to_combustion))%cooldown.fire_blast.duration-1<cooldown.fire_blast.max_charges+variable.overpool_fire_blasts%cooldown.fire_blast.duration-(buff.combustion.duration%cooldown.fire_blast.duration)%%1&variable.time_to_combustion<fight_remains\nactions+=/call_action_list,name=combustion_phase,if=variable.time_to_combustion<=0||buff.combustion.up||variable.time_to_combustion<variable.combustion_precast_time&cooldown.combustion.remains<variable.combustion_precast_time\nactions+=/rune_of_power,if=buff.combustion.down&buff.rune_of_power.down&!buff.firestorm.react&(variable.time_to_combustion>=buff.rune_of_power.duration&variable.time_to_combustion>action.fire_blast.full_recharge_time||variable.time_to_combustion>fight_remains)&(!runeforge.sun_kings_blessing||active_enemies>=variable.hard_cast_flamestrike||buff.sun_kings_blessing_ready.up||buff.sun_kings_blessing.react>=buff.sun_kings_blessing.max_stack-1||fight_remains<buff.rune_of_power.duration)\n# Adjust the variable that controls Fire Blast usage to save Fire Blasts while Searing Touch is active with Sun King's Blessing.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=searing_touch.active&action.fire_blast.full_recharge_time>3*gcd.max,if=!variable.fire_blast_pooling&runeforge.sun_kings_blessing\n# Variable that controls Phoenix Flames usage to ensure its charges are pooled for Combustion. Only use Phoenix Flames outside of Combustion when full charges can be obtained during the next Combustion.\n## actions+=/variable,name=phoenix_pooling,if=active_enemies<variable.combustion_flamestrike,value=variable.time_to_combustion+buff.combustion.duration-5<action.phoenix_flames.full_recharge_time+cooldown.phoenix_flames.duration-action.shifting_power.full_reduction*variable.shifting_power_before_combustion&variable.time_to_combustion<fight_remains||runeforge.sun_kings_blessing||time<5\n# When using Flamestrike in Combustion, save as many charges as possible for Combustion without capping.\n## actions+=/variable,name=phoenix_pooling,if=active_enemies>=variable.combustion_flamestrike,value=variable.time_to_combustion<action.phoenix_flames.full_recharge_time-action.shifting_power.full_reduction*variable.shifting_power_before_combustion&variable.time_to_combustion<fight_remains||runeforge.sun_kings_blessing||time<5\nactions+=/call_action_list,name=rop_phase,strict=1,if=buff.rune_of_power.up&buff.combustion.down&variable.time_to_combustion>0\n# Adjust the variable that controls Fire Blast usage to ensure its charges are also pooled for Rune of Power.\nactions+=/variable,use_off_gcd=1,use_while_casting=1,name=fire_blast_pooling,value=(!runeforge.sun_kings_blessing||buff.sun_kings_blessing.stack>buff.sun_kings_blessing.max_stack-1)&cooldown.rune_of_power.remains<action.fire_blast.full_recharge_time-action.shifting_power.full_reduction*(variable.shifting_power_before_combustion&cooldown.shifting_power.remains<cooldown.rune_of_power.remains)&cooldown.rune_of_power.remains<fight_remains,if=!variable.fire_blast_pooling&talent.rune_of_power&buff.rune_of_power.down\n# When Hardcasting Flamestrike, Fire Blasts should be used to generate Hot Streaks and to extend Blaster Master.\nactions+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&variable.time_to_combustion>0&active_enemies>=variable.hard_cast_flamestrike&!firestarter.active&!buff.hot_streak.up&(buff.heating_up.up&action.flamestrike.execute_remains<0.5||charges_fractional>=2)\n# During Firestarter, Fire Blasts are used similarly to during Combustion. Generally, they are used to generate Hot Streaks when crits will not be wasted and with Blaster Master, they should be spread out to maintain the Blaster Master buff.\nactions+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=firestarter.active&variable.time_to_combustion>0&!variable.fire_blast_pooling&(!action.fireball.executing&!action.pyroblast.in_flight&buff.heating_up.react||action.fireball.executing&!buff.hot_streak.react||action.pyroblast.in_flight&buff.heating_up.react&!buff.hot_streak.react)\n# Avoid capping Fire Blast charges while channeling Shifting Power\nactions+=/fire_blast,use_while_casting=1,if=action.shifting_power.executing&full_recharge_time<action.shifting_power.tick_reduction\nactions+=/call_action_list,name=standard_rotation,if=variable.time_to_combustion>0&buff.rune_of_power.down&buff.combustion.down\nactions+=/scorch\n\nactions.active_talents=living_bomb,if=active_enemies>1&buff.combustion.down&(variable.time_to_combustion>cooldown.living_bomb.duration||variable.time_to_combustion<=0)\nactions.active_talents+=/meteor,if=variable.time_to_combustion<=0||buff.combustion.remains>travel_time||(cooldown.meteor.duration<variable.time_to_combustion&!talent.rune_of_power)||talent.rune_of_power&buff.rune_of_power.up&variable.time_to_combustion>action.meteor.cooldown||fight_remains<variable.time_to_combustion\nactions.active_talents+=/dragons_breath,if=talent.alexstraszas_fury&(buff.combustion.down&!buff.hot_streak.up)\n\nactions.combustion_cooldowns=potion\nactions.combustion_cooldowns+=/blood_fury\nactions.combustion_cooldowns+=/berserking,if=buff.combustion.up\nactions.combustion_cooldowns+=/fireblood\nactions.combustion_cooldowns+=/ancestral_call\nactions.combustion_cooldowns+=/time_warp,if=runeforge.temporal_warp&buff.exhaustion.up\nactions.combustion_cooldowns+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up\nactions.combustion_cooldowns+=/use_item,effect_name=gladiators_badge\nactions.combustion_cooldowns+=/use_item,name=inscrutable_quantum_device\nactions.combustion_cooldowns+=/use_item,name=flame_of_battle\nactions.combustion_cooldowns+=/use_item,name=wakeners_frond\nactions.combustion_cooldowns+=/use_item,name=instructors_divine_bell\nactions.combustion_cooldowns+=/use_item,name=sunblood_amethyst\nactions.combustion_cooldowns+=/use_item,name=the_first_sigil\nactions.combustion_cooldowns+=/use_item,name=fleshrenders_meathook\nactions.combustion_cooldowns+=/use_item,name=enforcers_stun_grenade\nactions.combustion_cooldowns+=/use_item,name=neural_synapse_enhancer\n## actions.combustion_cooldowns+=/use_item,name=hyperthread_wristwraps,if=hyperthread_wristwraps.fire_blast>=2&action.fire_blast.charges=0\nactions.combustion_cooldowns+=/use_item,name=hyperthread_wristwraps,if=prev.1.fire_blast+prev.2.fire_blast+prev.3.fire_blast>=2&action.fire_blast.charges=0\nactions.combustion_cooldowns+=/use_items\n\nactions.combustion_phase+=/lights_judgment,if=buff.combustion.down\nactions.combustion_phase+=/bag_of_tricks,if=buff.combustion.down\nactions.combustion_phase+=/living_bomb,if=active_enemies>1&buff.combustion.down\n# Estimate how long Combustion will last thanks to Sun King's Blessing to determine how Fire Blasts should be used.\nactions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=extended_combustion_remains,value=buff.combustion.remains+buff.combustion.duration*(cooldown.combustion.remains<buff.combustion.remains)\n# Adds the duration of the Sun King's Blessing Combustion to the end of the current Combustion if the cast would start during this Combustion.\nactions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=extended_combustion_remains,op=add,value=variable.skb_duration,if=runeforge.sun_kings_blessing&(buff.sun_kings_blessing_ready.up||variable.extended_combustion_remains>gcd.remains+1.5*gcd.max*(buff.sun_kings_blessing.max_stack-buff.sun_kings_blessing.stack))\n# Other cooldowns that should be used with Combustion should only be used with an actual Combustion cast and not with a Sun King's Blessing proc.\nactions.combustion_phase+=/call_action_list,name=combustion_cooldowns,strict=1,if=variable.extended_combustion_remains>variable.skb_duration\nactions.combustion_phase+=/use_item,name=neural_synapse_enhancer,if=variable.time_to_combustion>60\nactions.combustion_phase+=/call_action_list,name=active_talents\n# If Sun King's Blessing stacks are high, cancel them before Combustion so that the Sun King's Blessing proc can be safely delayed until after Combustion without risk of expiration.\nactions.combustion_phase+=/cancel_buff,name=sun_kings_blessing,if=!set_bonus.tier28_4pc&buff.combustion.down&buff.sun_kings_blessing.stack>2&talent.rune_of_power&cooldown.rune_of_power.remains<20\n# If Combustion is down, precast something before activating it.\nactions.combustion_phase+=/flamestrike,if=buff.combustion.down&cooldown.combustion.remains<cast_time&active_enemies>=variable.combustion_flamestrike\nactions.combustion_phase+=/pyroblast,if=buff.combustion.down&buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.combustion_phase+=/pyroblast,if=buff.combustion.down&buff.pyroclasm.react&buff.pyroclasm.remains>cast_time\nactions.combustion_phase+=/fireball,if=buff.combustion.down&cooldown.combustion.remains<cast_time&!conduit.flame_accretion\nactions.combustion_phase+=/scorch,if=buff.combustion.down&cooldown.combustion.remains<cast_time\n# Combustion should be used when the precast is almost finished.\nactions.combustion_phase+=/combustion,use_off_gcd=1,use_while_casting=1,if=hot_streak_spells_in_flight=0&buff.combustion.down&variable.time_to_combustion<=0&(!runeforge.disciplinary_command||buff.disciplinary_command.up||buff.disciplinary_command_frost.up&talent.rune_of_power&cooldown.buff_disciplinary_command.ready)&(!runeforge.grisly_icicle||debuff.grisly_icicle.up)&(!covenant.necrolord||cooldown.deathborne.remains||buff.deathborne.up)&(!covenant.venthyr||cooldown.mirrors_of_torment.remains)&(action.meteor.in_flight&action.meteor.in_flight_remains<=variable.combustion_cast_remains||action.scorch.executing&action.scorch.execute_remains<variable.combustion_cast_remains||action.fireball.executing&action.fireball.execute_remains<variable.combustion_cast_remains||action.pyroblast.executing&action.pyroblast.execute_remains<variable.combustion_cast_remains||action.flamestrike.executing&action.flamestrike.execute_remains<variable.combustion_cast_remains)\n# Rune of Power can be used in Combustion if it is down, but this should only be done if there is more Combustion time to benefit from than there would be from an SKB Combustion later.\nactions.combustion_phase+=/rune_of_power,if=buff.rune_of_power.down&variable.extended_combustion_remains>variable.skb_duration\n# Without Infernal Cascade, just use Fire Blasts when they won't munch crits and when Firestorm is down.\nactions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!conduit.infernal_cascade&!variable.fire_blast_pooling&(!set_bonus.tier28_4pc||debuff.mirrors_of_torment.down||buff.sun_kings_blessing_ready.down||action.pyroblast.executing)&buff.combustion.up&!buff.firestorm.react&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n# With Infernal Cascade, Fire Blast use should be additionally constrained so that it is not be used unless Infernal Cascade is about to expire or there are more than enough Fire Blasts to extend Infernal Cascade to the end of Combustion.\n## actions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=expected_fire_blasts,op=set,value=action.fire_blast.charges_fractional+(variable.extended_combustion_remains-buff.infernal_cascade.duration)%cooldown.fire_blast.duration,if=conduit.infernal_cascade\n## actions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=needed_fire_blasts,op=set,value=ceil(variable.extended_combustion_remains%(buff.infernal_cascade.duration-gcd.max)),if=conduit.infernal_cascade\n# Use Shifting Power during Combustion when there are not enough Fire Blasts available to fully extend infernal cascade and only when Rune of Power is on cooldown.\nactions.combustion_phase+=/variable,use_off_gcd=1,use_while_casting=1,name=use_shifting_power,value=firestarter.remains<variable.extended_combustion_remains&(conduit.infernal_cascade&variable.expected_fire_blasts<variable.needed_fire_blasts)&(!talent.rune_of_power||cooldown.rune_of_power.remains>variable.extended_combustion_remains)||active_enemies>=variable.combustion_shifting_power,if=covenant.night_fae\nactions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=conduit.infernal_cascade&!variable.fire_blast_pooling&(!set_bonus.tier28_4pc||debuff.mirrors_of_torment.down||buff.sun_kings_blessing_ready.down||action.pyroblast.executing)&(variable.expected_fire_blasts>=variable.needed_fire_blasts||buff.combustion.remains<gcd.max||variable.extended_combustion_remains<=buff.infernal_cascade.duration||buff.infernal_cascade.stack<2||buff.infernal_cascade.remains<gcd.max||cooldown.shifting_power.ready&variable.use_shifting_power)&buff.combustion.up&(!buff.firestorm.react||buff.infernal_cascade.remains<0.5)&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n## TODO:  Implement hyperthread_wristwraps expression.\n## actions.combustion_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=conduit.infernal_cascade&!variable.fire_blast_pooling&(!set_bonus.tier28_4pc||debuff.mirrors_of_torment.down||buff.sun_kings_blessing_ready.down||action.pyroblast.executing)&(!equipped.hyperthread_wristwraps||!cooldown.hyperthread_wristwraps_300142.ready||charges>1||hyperthread_wristwraps.fire_blast.first_remains>1||debuff.mirrors_of_torment.up)&(variable.expected_fire_blasts>=variable.needed_fire_blasts||buff.combustion.remains<gcd.max||variable.extended_combustion_remains<=buff.infernal_cascade.duration||buff.infernal_cascade.stack<2||buff.infernal_cascade.remains<gcd.max||cooldown.shifting_power.ready&variable.use_shifting_power||equipped.hyperthread_wristwraps&cooldown.hyperthread_wristwraps_300142.ready)&buff.combustion.up&(!buff.firestorm.react||buff.infernal_cascade.remains<0.5)&!buff.hot_streak.react&hot_streak_spells_in_flight+buff.heating_up.react*(gcd.remains>0)<2\n# Spend Hot Streaks during Combustion at high priority.\nactions.combustion_phase+=/flamestrike,if=(buff.hot_streak.up&active_enemies>=variable.combustion_flamestrike)||(buff.firestorm.up&active_enemies>=variable.combustion_flamestrike-runeforge.firestorm)\n# Radiant Spark should be used with a Hot Streak ready to use immediately after the cast finishes. This will naturally set up a Hot Streak spent for the final stack of Radiant Spark.\nactions.combustion_phase+=/radiant_spark,if=buff.combustion.up&2*buff.hot_streak.react+buff.heating_up.react+hot_streak_spells_in_flight=2\nactions.combustion_phase+=/pyroblast,if=buff.firestorm.up\n## With Sun King's Blessing, there is a brief delay before the Sun King's Blessing ready buff is removed after consuming it. It is beneficial to wait for this delay before spending Hot Streaks to not waste a stack.\n## actions.combustion_phase+=/wait,sec=buff.sun_kings_blessing_ready_expiration_delay.remains,if=buff.hot_streak.react&active_enemies<variable.combustion_flamestrike&buff.sun_kings_blessing_ready_expiration_delay.up\nactions.combustion_phase+=/pyroblast,if=buff.hot_streak.up&buff.combustion.up\nactions.combustion_phase+=/pyroblast,if=prev_gcd.1.scorch&buff.heating_up.up&active_enemies<variable.combustion_flamestrike&buff.combustion.up\n# Using Shifting Power during Combustion to restore Fire Blast and Phoenix Flame charges can be beneficial, but usually only on AoE.\nactions.combustion_phase+=/shifting_power,if=variable.use_shifting_power&buff.combustion.up&!action.fire_blast.charges&action.phoenix_flames.charges<action.phoenix_flames.max_charges\n# If a Sun King's Blessing proc would be used, Rune of Power should be used first if the existing Rune of Power will expire during the cast.\nactions.combustion_phase+=/rune_of_power,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>execute_time+action.flamestrike.cast_time&buff.rune_of_power.remains<action.flamestrike.cast_time&active_enemies>=variable.combustion_flamestrike\nactions.combustion_phase+=/flamestrike,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&active_enemies>=variable.combustion_flamestrike&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.combustion_phase+=/rune_of_power,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>execute_time+action.pyroblast.cast_time&buff.rune_of_power.remains<action.pyroblast.cast_time\nactions.combustion_phase+=/pyroblast,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\n# Pyroclasm procs should be used in Combustion at higher priority than Phoenix Flames and Scorch.\nactions.combustion_phase+=/pyroblast,if=buff.pyroclasm.react&buff.pyroclasm.remains>cast_time&buff.combustion.remains>cast_time&active_enemies<variable.combustion_flamestrike&(!conduit.infernal_cascade||buff.infernal_cascade.remains>execute_time||buff.heating_up.react+hot_streak_spells_in_flight<2)\n# Use Phoenix Flames and Scorch in Combustion to help generate Hot Streaks when Fire Blasts are not available or need to be conserved.\nactions.combustion_phase+=/phoenix_flames,if=buff.combustion.up&travel_time<buff.combustion.remains&buff.heating_up.react+hot_streak_spells_in_flight<2\nactions.combustion_phase+=/scorch,if=buff.combustion.remains>cast_time\n# If there isn't enough time left in Combustion for a Phoenix Flames or Scorch to hit inside of Combustion, use something else.\nactions.combustion_phase+=/living_bomb,if=buff.combustion.remains<gcd.max&active_enemies>1\nactions.combustion_phase+=/dragons_breath,if=buff.combustion.remains<gcd.max&buff.combustion.up\n\n## Helper variable that contains the actual estimated time that the next Combustion will be ready.\n## actions.combustion_timing=variable,use_off_gcd=1,use_while_casting=1,name=combustion_ready_time,value=cooldown.combustion.remains*expected_kindling_reduction\n## The cast time of the spell that will be precast into Combustion.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=combustion_precast_time,value=(action.fireball.cast_time*!conduit.flame_accretion+action.scorch.cast_time+conduit.flame_accretion)*(active_enemies<variable.combustion_flamestrike)+action.flamestrike.cast_time*(active_enemies>=variable.combustion_flamestrike)-variable.combustion_cast_remains\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=variable.combustion_ready_time\n## Delay Combustion for after Firestarter unless variable.firestarter_combustion is set.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=firestarter.remains,if=talent.firestarter&!variable.firestarter_combustion\n## Delay Combustion for Radiant Spark if it will come off cooldown soon.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.radiant_spark.remains,if=covenant.kyrian&cooldown.radiant_spark.remains-10<variable.time_to_combustion\n# Delay Combustion for Mirrors of Torment.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.mirrors_of_torment.remains,if=covenant.venthyr&cooldown.mirrors_of_torment.remains-25<variable.time_to_combustion\n## Delay Combustion for Deathborne.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.deathborne.remains+(buff.deathborne.duration-buff.combustion.duration)*runeforge.deaths_fathom,if=covenant.necrolord&cooldown.deathborne.remains-10<variable.time_to_combustion\n## Delay Combustion for Death's Fathom stacks if there are at least two targets.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=buff.deathborne.remains-buff.combustion.duration,if=runeforge.deaths_fathom&buff.deathborne.up&active_enemies>=2\n## Delay Combustion for the Empyreal Ordnance buff if the player is using that trinket.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=variable.empyreal_ordnance_delay-(cooldown.empyreal_ordnance.duration-cooldown.empyreal_ordnance.remains)*!cooldown.empyreal_ordnance.ready,if=equipped.empyreal_ordnance\n## Delay Combustion for Gladiators Badge, unless it would be delayed longer than 20 seconds.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.gladiators_badge_345228.remains,if=equipped.gladiators_badge&cooldown.gladiators_badge_345228.remains-20<variable.time_to_combustion\n## Delay Combustion until Combustion expires if it's up.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=buff.combustion.remains\n## Delay Combustion until RoP expires if it's up.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=buff.rune_of_power.remains,if=talent.rune_of_power&buff.combustion.down\n## Delay Combustion for an extra Rune of Power if the Rune of Power would come off cooldown at least 5 seconds before Combustion would.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.rune_of_power.remains+buff.rune_of_power.duration,if=talent.rune_of_power&buff.combustion.down&cooldown.rune_of_power.remains+5<variable.time_to_combustion\n## Delay Combustion if Disciplinary Command would not be ready for it yet.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=cooldown.buff_disciplinary_command.remains,if=runeforge.disciplinary_command&buff.disciplinary_command.down\n## Raid Events: Delay Combustion for add spawns of 3 or more adds that will last longer than 15 seconds. These values aren't necessarily optimal in all cases.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,op=max,value=raid_event.adds.in,if=raid_event.adds.exists&raid_event.adds.count>=3&raid_event.adds.duration>15\n## Raid Events: Always use Combustion with vulnerability raid events, override any delays listed above to make sure it gets used here.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=raid_event.vulnerable.in*!raid_event.vulnerable.up,if=raid_event.vulnerable.exists&variable.combustion_ready_time<raid_event.vulnerable.in\n## Use the next Combustion on cooldown if it would not be expected to delay the scheduled one or the scheduled one would happen less than 20 seconds before the fight ends.\n## actions.combustion_timing+=/variable,use_off_gcd=1,use_while_casting=1,name=time_to_combustion,value=variable.combustion_ready_time,if=variable.combustion_ready_time+cooldown.combustion.duration*(1-(0.6+0.2*talent.firestarter)*talent.kindling)<=variable.time_to_combustion||variable.time_to_combustion>fight_remains-20\n\nactions.rop_phase=flamestrike,if=active_enemies>=variable.hot_streak_flamestrike&(buff.hot_streak.up||buff.firestorm.up)\nactions.rop_phase+=/fireball,if=buff.deathborne.up&runeforge.deaths_fathom&variable.time_to_combustion<buff.deathborne.remains&active_enemies>=2\nactions.rop_phase+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike&buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.rop_phase+=/pyroblast,if=buff.sun_kings_blessing_ready.up&buff.sun_kings_blessing_ready.remains>cast_time&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.rop_phase+=/pyroblast,if=buff.firestorm.up\nactions.rop_phase+=/pyroblast,if=buff.hot_streak.up\n# Use one Fire Blast early in RoP if you don't have either Heating Up or Hot Streak yet and either: (a) have more than two already, (b) have Alexstrasza's Fury ready to use, or (c) Searing Touch is active. Don't do this while hard casting Flamestrikes or when Sun King's Blessing is ready.\nactions.rop_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&buff.sun_kings_blessing_ready.down&active_enemies<variable.hard_cast_flamestrike&!firestarter.active&(!buff.heating_up.up&!buff.hot_streak.up&!prev_off_gcd.fire_blast&(action.fire_blast.charges>=2||(talent.alexstraszas_fury&cooldown.dragons_breath.ready)||searing_touch.active))\n# Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.\nactions.rop_phase+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!variable.fire_blast_pooling&!firestarter.active&buff.sun_kings_blessing_ready.down&(((action.fireball.executing&(action.fireball.execute_remains<0.5||!runeforge.firestorm)||action.pyroblast.executing&(action.pyroblast.execute_remains<0.5||!runeforge.firestorm))&buff.heating_up.react)||(searing_touch.active&(buff.heating_up.react&!action.scorch.executing||!buff.hot_streak.react&!buff.heating_up.react&action.scorch.executing&!hot_streak_spells_in_flight)))\nactions.rop_phase+=/call_action_list,name=active_talents\nactions.rop_phase+=/pyroblast,if=buff.pyroclasm.react&cast_time<buff.pyroclasm.remains&cast_time<buff.rune_of_power.remains&(!runeforge.sun_kings_blessing||buff.pyroclasm.remains<action.fireball.cast_time+cast_time*buff.pyroclasm.react)\nactions.rop_phase+=/pyroblast,if=buff.hot_streak.up&searing_touch.active&active_enemies<variable.hot_streak_flamestrike\nactions.rop_phase+=/phoenix_flames,if=!variable.phoenix_pooling&(active_dot.ignite<2||active_enemies>=variable.hard_cast_flamestrike||active_enemies>=variable.hot_streak_flamestrike)\nactions.rop_phase+=/scorch,if=searing_touch.active\nactions.rop_phase+=/dragons_breath,if=active_enemies>2\nactions.rop_phase+=/arcane_explosion,if=active_enemies>=variable.arcane_explosion&mana.pct>=variable.arcane_explosion_mana&target.within10\n# With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.\nactions.rop_phase+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike\nactions.rop_phase+=/fireball\n\nactions.standard_rotation=flamestrike,if=active_enemies>=variable.hot_streak_flamestrike&(buff.hot_streak.up||buff.firestorm.up)\nactions.standard_rotation+=/fireball,if=buff.deathborne.up&runeforge.deaths_fathom&variable.time_to_combustion<buff.deathborne.remains&active_enemies>=2\nactions.standard_rotation+=/pyroblast,if=buff.firestorm.up\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&buff.hot_streak.remains<action.fireball.execute_time\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&(prev_gcd.1.fireball||firestarter.active||action.pyroblast.in_flight)\n# Try to get SKB procs inside RoP phases or Combustion phases when possible.\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike&buff.sun_kings_blessing_ready.up&(cooldown.rune_of_power.remains+action.rune_of_power.execute_time+cast_time>buff.sun_kings_blessing_ready.remains||!talent.rune_of_power)&variable.time_to_combustion+cast_time>buff.sun_kings_blessing_ready.remains&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.standard_rotation+=/pyroblast,if=buff.sun_kings_blessing_ready.up&(cooldown.rune_of_power.remains+action.rune_of_power.execute_time+cast_time>buff.sun_kings_blessing_ready.remains||!talent.rune_of_power)&variable.time_to_combustion+cast_time>buff.sun_kings_blessing_ready.remains&buff.sun_kings_blessing_ready.expiration_delay_remains=0\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&searing_touch.active\nactions.standard_rotation+=/pyroblast,if=buff.pyroclasm.react&cast_time<buff.pyroclasm.remains&(!runeforge.sun_kings_blessing||buff.pyroclasm.remains<action.fireball.cast_time+cast_time*buff.pyroclasm.react)\n# During the standard rotation, only use Fire Blasts when they are not being pooled for RoP or Combustion. Use Fire Blast either during a Fireball/Pyroblast cast when Heating Up is active or during execute with Searing Touch.\nactions.standard_rotation+=/fire_blast,use_off_gcd=1,use_while_casting=1,if=!firestarter.active&!variable.fire_blast_pooling&buff.sun_kings_blessing_ready.down&(((action.fireball.executing&(action.fireball.execute_remains<0.5||!runeforge.firestorm)||action.pyroblast.executing&(action.pyroblast.execute_remains<0.5||!runeforge.firestorm))&buff.heating_up.react)||(searing_touch.active&(buff.heating_up.react&!action.scorch.executing||!buff.hot_streak.react&!buff.heating_up.react&action.scorch.executing&!hot_streak_spells_in_flight)))\nactions.standard_rotation+=/pyroblast,if=buff.hot_streak.up&active_enemies<variable.hot_streak_flamestrike\nactions.standard_rotation+=/phoenix_flames,if=!variable.phoenix_pooling&(!talent.from_the_ashes||active_enemies>1)&(active_dot.ignite<2||active_enemies>=variable.hard_cast_flamestrike||active_enemies>=variable.hot_streak_flamestrike)\nactions.standard_rotation+=/call_action_list,name=active_talents\nactions.standard_rotation+=/dragons_breath,if=active_enemies>1\nactions.standard_rotation+=/scorch,if=searing_touch.active\nactions.standard_rotation+=/arcane_explosion,if=active_enemies>=variable.arcane_explosion&mana.pct>=variable.arcane_explosion_mana&target.within10\n# With enough targets, it is a gain to cast Flamestrike as filler instead of Fireball.\nactions.standard_rotation+=/flamestrike,if=active_enemies>=variable.hard_cast_flamestrike\nactions.standard_rotation+=/fireball",
				},
				["Demonology"] = {
					["source"] = "SimC",
					["builtIn"] = true,
					["date"] = 20220821,
					["spec"] = 266,
					["desc"] = "Demonology Warlock\nhttps://github.com/simulationcraft/simc/\nAugust 21, 2022\n\nChanges:\n- Spell Lock.\n- Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n- Power Siphon allowed pre-combat to proc instant Demonbolt.\n- PvP talent interrupt.\n- Avoid SB->HoG spam when you're not about to summon a Tyrant.\n- Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n- Try to avoid wasting Demonic Core stacks.\n- Try to make opener priority only work if we can actually open with a Tyrant.\n- Improve compatibility with M+ builds.",
					["lists"] = {
						["slow_trinkets"] = {
							{
								["enabled"] = true,
								["name"] = "soulletting_ruby",
								["cycle_targets"] = 1,
								["action"] = "soulletting_ruby",
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 - ( 2 * gcd.max * variable.use_bolt_timings )",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.buff_sync_cd < target.distance / 5 + ( 2 * variable.use_bolt_timings )",
								["name"] = "sunblood_amethyst",
								["action"] = "sunblood_amethyst",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "variable.buff_sync_cd < ( target.distance / 5 ) + 12 + ( 2 * variable.use_bolt_timings )",
								["name"] = "empyreal_ordnance",
								["action"] = "empyreal_ordnance",
							}, -- [3]
						},
						["hp_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "gladiators_emblem",
								["action"] = "gladiators_emblem",
							}, -- [1]
						},
						["covenant_ability"] = {
							{
								["enabled"] = true,
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & pet.demonic_tyrant.active",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.grove_invigoration.enabled & ! runeforge.decaying_soul_satchel.enabled & ( variable.next_tyrant_cd < 20 || variable.next_tyrant_cd > 30 )",
								["action"] = "soul_rot",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! ( soulbind.field_of_blossoms.enabled || soulbind.grove_invigoration.enabled ) & ! runeforge.decaying_soul_satchel.enabled & ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 18",
								["action"] = "soul_rot",
							}, -- [3]
							{
								["enabled"] = true,
								["action"] = "decimating_bolt",
								["criteria"] = "! variable.use_bolt_timings & soulbind.lead_by_example.enabled & ( pet.demonic_tyrant.active & soul_shard < 2 || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["action"] = "decimating_bolt",
								["criteria"] = "! variable.use_bolt_timings & soulbind.kevins_oozeling.enabled & ( pet.demonic_tyrant.active || ! pet.demonic_tyrant.active & variable.next_tyrant_cd > 40 )",
								["cycle_targets"] = 1,
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "decimating_bolt",
								["criteria"] = "! variable.use_bolt_timings & ( soulbind.forgeborne_reveries.enabled || ( soulbind.volatile_solvent.enabled & ! soulbind.kevins_oozeling.enabled ) ) & ! pet.demonic_tyrant.active",
								["cycle_targets"] = 1,
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "decimating_bolt",
								["criteria"] = "variable.use_bolt_timings & ( ! talent.power_siphon.enabled || cooldown.power_siphon.remains < action.decimating_bolt.execute_time ) & ! cooldown.summon_demonic_tyrant.up & ( pet.demonic_tyrant.remains < 8 || cooldown.summon_demonic_tyrant.remains_expected < 30 )",
								["cycle_targets"] = 1,
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "fleshcraft",
								["criteria"] = "soulbind.volatile_solvent.enabled & buff.volatile_solvent.down",
								["interrupt_if"] = "buff.volatile_solvent.up",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.combat_meditation.enabled & pet.demonic_tyrant.active",
								["action"] = "scouring_tithe",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "! soulbind.combat_meditation.enabled",
								["action"] = "scouring_tithe",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "pet.demonic_tyrant.active & soul_shard = 0",
								["action"] = "impending_catastrophe",
							}, -- [11]
						},
						["tyrant_setup"] = {
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 15",
								["action"] = "nether_portal",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 17 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) & ( cooldown.call_dreadstalkers.remains < 17 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time + action.shadow_bolt.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time )",
								["action"] = "grimoire_felguard",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( variable.next_tyrant_cd < 15 - ( action.summon_demonic_tyrant.execute_time ) & ( cooldown.call_dreadstalkers.remains < 15 - ( action.summon_demonic_tyrant.execute_time + action.summon_vilefiend.execute_time ) || pet.dreadstalker.remains > variable.next_tyrant_cd + action.summon_demonic_tyrant.execute_time ) ) || ( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 40 )",
								["action"] = "summon_vilefiend",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.next_tyrant_cd < 12 - ( action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time )",
								["action"] = "call_dreadstalkers",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "time > first_tyrant_time & ( pet.dreadstalker.active & pet.dreadstalker.remains > action.summon_demonic_tyrant.execute_time ) & ( ! talent.summon_vilefiend.enabled || pet.vilefiend.active ) & ( soul_shard = 0 || ( pet.dreadstalker.active & pet.dreadstalker.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( pet.vilefiend.active & pet.vilefiend.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) || ( buff.grimoire_felguard.up & buff.grimoire_felguard.remains < action.summon_demonic_tyrant.execute_time + action.shadow_bolt.execute_time ) )",
								["action"] = "summon_demonic_tyrant",
							}, -- [5]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "spell_lock",
							}, -- [1]
							{
								["action"] = "call_felhunter",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "axe_toss",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "devour_magic",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.summon_demonic_tyrant.remains_expected",
								["criteria"] = "! soulbind.field_of_blossoms.enabled || cooldown.summon_demonic_tyrant.remains_expected > cooldown.soul_rot.remains_expected",
								["var_name"] = "next_tyrant_cd",
							}, -- [5]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.soul_rot.remains_expected",
								["criteria"] = "( soulbind.field_of_blossoms.enabled || runeforge.decaying_soul_satchel.enabled ) & cooldown.summon_demonic_tyrant.remains_expected < cooldown.soul_rot.remains_expected",
								["var_name"] = "next_tyrant_cd",
							}, -- [6]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "variable.next_tyrant_cd",
								["criteria"] = "! variable.use_bolt_timings & ! in_opener",
								["var_name"] = "buff_sync_cd",
							}, -- [7]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "12",
								["criteria"] = "! variable.use_bolt_timings & in_opener & ! pet.dreadstalker.active",
								["var_name"] = "buff_sync_cd",
							}, -- [8]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & buff.wild_imps.stack > 0 & ! talent.vilefiend.enabled",
								["var_name"] = "buff_sync_cd",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "0",
								["criteria"] = "! variable.use_bolt_timings & in_opener & pet.dreadstalker.active & prev_gcd.1.hand_of_guldan & talent.vilefiend.enabled",
								["var_name"] = "buff_sync_cd",
							}, -- [10]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "cooldown.decimating_bolt.remains_expected",
								["criteria"] = "variable.use_bolt_timings",
								["var_name"] = "buff_sync_cd",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "trinkets",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up & ( ! talent.power_siphon.enabled || buff.power_siphon.up ) )",
								["action"] = "call_action_list",
								["list_name"] = "ogcd",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "boss & fight_remains < 2 * gcd",
								["action"] = "implosion",
							}, -- [14]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "toggle.cooldowns & time < first_tyrant_time",
								["list_name"] = "opener",
							}, -- [15]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "soulbind.grove_invigoration.enabled || soulbind.field_of_blossoms.enabled || soulbind.combat_meditation.enabled || covenant.necrolord",
								["list_name"] = "covenant_ability",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "( ! variable.use_bolt_timings & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time || soulbind.refined_palate.enabled & variable.next_tyrant_cd < 38 ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["action"] = "potion",
							}, -- [17]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "tyrant_setup",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "( ! runeforge.wilfreds_sigil_of_superior_summoning.enabled & variable.next_tyrant_cd > 9 ) || ( pet.demonic_tyrant.active & pet.demonic_tyrant.remains < 6 * gcd.max )",
								["action"] = "demonic_strength",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & cooldown.summon_demonic_tyrant.remains_expected > 22",
								["action"] = "call_dreadstalkers",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & ( variable.next_tyrant_cd > 20 - 5 * ! runeforge.wilfreds_sigil_of_superior_summoning.enabled )",
								["action"] = "call_dreadstalkers",
							}, -- [21]
							{
								["enabled"] = true,
								["criteria"] = "buff.tyrant.down & variable.next_tyrant_cd > 5",
								["action"] = "bilescourge_bombers",
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1 + ( 1 * talent.sacrificed_souls.enabled ) & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ( buff.implosive_potential.down || buff.wild_imps.stack * ( 1 + 4 * ( spell_targets.implosion > 2 ) ) >= buff.implosive_potential.v1 )",
								["action"] = "implosion",
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 2 & buff.wild_imps.stack >= 6 + ( 3 * talent.soul_conduit.enabled ) & buff.tyrant.down & variable.next_tyrant_cd > 5 & ! runeforge.implosive_potential.enabled & ( ! talent.from_the_shadows.enabled || debuff.from_the_shadows.up )",
								["action"] = "implosion",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 30",
								["action"] = "grimoire_felguard",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 28",
								["action"] = "summon_vilefiend",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "boss & time_to_die < 15",
								["action"] = "summon_demonic_tyrant",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard = 5",
								["action"] = "hand_of_guldan",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & runeforge.balespiders_burning_core.enabled & buff.balespiders_burning_core.remains < 5",
								["action"] = "shadow_bolt",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "doom",
							}, -- [32]
							{
								["enabled"] = true,
								["description"] = "If Dreadstalkers are already active, no need to save shards",
								["criteria"] = "soul_shard >= 3 & ( pet.dreadstalker.active || pet.demonic_tyrant.active )",
								["action"] = "hand_of_guldan",
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.nether_portal.up & cooldown.call_dreadstalkers.remains > 2 * gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [34]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard >= 1 & buff.wild_imps.stack > 2 & pet.dreadstalker.remains > 0.5 + cast_time + action.summon_demonic_tyrant.cast_time & pet.dreadstalker.remains < 0.5 + cast_time + action.summon_demonic_tyrant.cast_time + ( 0 >? ( 3 - soul_shard ) ) * action.shadow_bolt.cast_time & variable.next_tyrant_cd < gcd.max & time > first_tyrant_time - gcd.max",
								["action"] = "hand_of_guldan",
							}, -- [35]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["strict"] = 1,
								["criteria"] = "! covenant.venthyr",
								["list_name"] = "covenant_ability",
							}, -- [36]
							{
								["enabled"] = true,
								["description"] = "Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority",
								["criteria"] = "! talent.sacrificed_souls.enabled",
								["action"] = "soul_strike",
							}, -- [37]
							{
								["enabled"] = true,
								["criteria"] = "! variable.use_bolt_timings & buff.wild_imps.stack > 1 & buff.demonic_core.stack < 3",
								["action"] = "power_siphon",
							}, -- [38]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up & buff.shard_of_annihilation.stack < 3",
								["action"] = "power_siphon",
							}, -- [39]
							{
								["enabled"] = true,
								["description"] = "Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready",
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd > 20",
								["action"] = "demonbolt",
							}, -- [40]
							{
								["enabled"] = true,
								["description"] = "During Tyrant setup, spend Demonic Cores for Soul Shards",
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & variable.next_tyrant_cd < 12",
								["action"] = "demonbolt",
							}, -- [41]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & ( buff.demonic_core.stack > 2 || talent.sacrificed_souls.enabled )",
								["action"] = "demonbolt",
							}, -- [42]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & buff.shard_of_annihilation.up",
								["action"] = "power_siphon",
							}, -- [43]
							{
								["enabled"] = true,
								["criteria"] = "set_bonus.tier28_2pc & soul_shard < 4 & ( ( 6 - soul_shard ) * action.shadow_bolt.execute_time > pet.dreadstalker.remains - action.hand_of_guldan.execute_time - action.demonbolt.execute_time ) & buff.demonic_core.stack >= 1",
								["action"] = "demonbolt",
							}, -- [44]
							{
								["enabled"] = true,
								["criteria"] = "buff.demonic_core.react & soul_shard < 4 & active_enemies > 1",
								["action"] = "demonbolt",
							}, -- [45]
							{
								["action"] = "soul_strike",
								["enabled"] = true,
							}, -- [46]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "covenant_ability",
							}, -- [47]
							{
								["enabled"] = true,
								["description"] = "If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now",
								["criteria"] = "soul_shard >= 3 & variable.next_tyrant_cd > 25 & ( talent.demonic_calling.enabled || cooldown.call_dreadstalkers.remains > ( ( 5 - soul_shard ) * action.shadow_bolt.execute_time ) + action.hand_of_guldan.execute_time )",
								["action"] = "hand_of_guldan",
							}, -- [48]
							{
								["enabled"] = true,
								["action"] = "doom",
								["criteria"] = "refreshable & time > first_tyrant_time",
								["cycle_targets"] = 1,
							}, -- [49]
							{
								["enabled"] = true,
								["description"] = "Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.",
								["criteria"] = "buff.demonic_core.react & buff.demonic_core.remains < 1 + gcd.max * buff.demonic_core.stack",
								["action"] = "demonbolt",
							}, -- [50]
							{
								["action"] = "shadow_bolt",
								["enabled"] = true,
							}, -- [51]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
								["criteria"] = "time > 0 & ! pet.alive",
								["action"] = "fel_domination",
							}, -- [1]
							{
								["action"] = "summon_pet",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "tome_of_monstrous_constructions",
								["action"] = "tome_of_monstrous_constructions",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "soleahs_secret_technique",
								["action"] = "soleahs_secret_technique",
							}, -- [4]
							{
								["action"] = "fleshcraft",
								["enabled"] = true,
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.wild_imps.stack > 1 & buff.demonic_core.stack <= 2",
								["action"] = "power_siphon",
							}, -- [6]
							{
								["enabled"] = true,
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ( boss || action.demonbolt.cast = 0 )",
								["action"] = "demonbolt",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "soul_shards < 5 & ! ( boss || action.demonbolt.cast = 0 )",
								["action"] = "shadow_bolt",
							}, -- [9]
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "runeforge.shard_of_annihilation.enabled & ( runeforge.balespiders_burning_core.enabled + talent.sacrificed_souls.enabled + talent.power_siphon.enabled > 1 )",
								["var_name"] = "use_bolt_timings",
							}, -- [10]
						},
						["opener"] = {
							{
								["enabled"] = true,
								["criteria"] = "! runeforge.decaying_soul_satchel.enabled",
								["action"] = "soul_rot",
							}, -- [1]
							{
								["action"] = "nether_portal",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "grimoire_felguard",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "summon_vilefiend",
								["enabled"] = true,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soul_shard < 5 & cooldown.call_dreadstalkers.up",
								["action"] = "shadow_bolt",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & soul_shard < 5 & buff.balespiders_burning_core.stack < 4",
								["action"] = "shadow_bolt",
							}, -- [6]
							{
								["action"] = "call_dreadstalkers",
								["enabled"] = true,
							}, -- [7]
						},
						["trinkets"] = {
							{
								["enabled"] = true,
								["op"] = "set",
								["action"] = "variable",
								["value"] = "( ! variable.use_bolt_timings & pet.demonic_tyrant.active ) || ( variable.use_bolt_timings & buff.shard_of_annihilation.up )",
								["var_name"] = "use_buff_trinkets",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.scars_of_fraternal_strife_4.up",
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.scars_of_fraternal_strife_4.up & pet.demonic_tyrant.active",
								["name"] = "scars_of_fraternal_strife",
								["action"] = "scars_of_fraternal_strife",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "variable.buff_sync_cd < 22",
								["name"] = "shadowed_orb_of_torment",
								["action"] = "shadowed_orb_of_torment",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_bolt_timings & pet.demonic_tyrant.active",
								["name"] = "moonlit_prism",
								["action"] = "moonlit_prism",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "variable.buff_sync_cd < 7",
								["name"] = "grim_eclipse",
								["action"] = "grim_eclipse",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "talent.demonic_consumption.enabled & variable.next_tyrant_cd < 20",
								["action"] = "call_action_list",
								["list_name"] = "hp_trinks",
							}, -- [7]
							{
								["enabled"] = true,
								["description"] = "Effects that travel slowly from the target require additional, separate handling",
								["action"] = "call_action_list",
								["list_name"] = "slow_trinkets",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "variable.use_buff_trinkets",
								["name"] = "overflowing_anima_cage",
								["action"] = "overflowing_anima_cage",
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t1.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket1",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t2.has_use_buff & variable.use_buff_trinkets",
								["action"] = "trinket2",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "variable.buff_sync_cd > 45 || variable.use_buff_trinkets",
								["name"] = "neural_synapse_enhancer",
								["action"] = "neural_synapse_enhancer",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "time > first_tyrant_time & variable.buff_sync_cd > 20",
								["action"] = "call_action_list",
								["list_name"] = "pure_damage_trinks",
							}, -- [13]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [14]
						},
						["pure_damage_trinks"] = {
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [1]
							{
								["enabled"] = true,
								["name"] = "resonant_reservoir",
								["action"] = "resonant_reservoir",
							}, -- [2]
							{
								["enabled"] = true,
								["name"] = "architects_ingenuity_core",
								["action"] = "architects_ingenuity_core",
							}, -- [3]
							{
								["enabled"] = true,
								["name"] = "cosmic_gladiators_resonator",
								["action"] = "cosmic_gladiators_resonator",
							}, -- [4]
							{
								["enabled"] = true,
								["name"] = "dreadfire_vessel",
								["action"] = "dreadfire_vessel",
							}, -- [5]
							{
								["enabled"] = true,
								["name"] = "soul_igniter",
								["action"] = "soul_igniter",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies = 1",
								["name"] = "glyph_of_assimilation",
								["action"] = "glyph_of_assimilation",
							}, -- [7]
							{
								["enabled"] = true,
								["name"] = "darkmoon_deck_putrescence",
								["action"] = "darkmoon_deck_putrescence",
							}, -- [8]
							{
								["enabled"] = true,
								["name"] = "ebonsoul_vise",
								["action"] = "ebonsoul_vise",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "unchained_gladiators_shackles",
								["action"] = "unchained_gladiators_shackles",
							}, -- [10]
							{
								["action"] = "trinket1",
								["enabled"] = true,
							}, -- [11]
							{
								["action"] = "trinket2",
								["enabled"] = true,
							}, -- [12]
						},
						["ogcd"] = {
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [4]
						},
					},
					["version"] = 20220821,
					["warnings"] = "WARNING:  The import for 'slow_trinkets' required some automated changes.\nLine 1: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 2: Converted SimC syntax % to Lua division operator (/) (1x).\nLine 3: Converted SimC syntax % to Lua division operator (/) (1x).\n\nWARNING:  The import for 'covenant_ability' required some automated changes.\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 2: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 2: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 3: Converted 'soulbind.X' to 'soulbind.X.enabled' (2x).\nLine 4: Removed min:X check (not available in emulation) (1x).\nLine 4: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 5: Removed min:X check (not available in emulation) (1x).\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 7: Converted 'talent.X' to 'talent.X.enabled' (1x).\nLine 8: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 9: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 10: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\n\nWARNING:  The import for 'tyrant_setup' required some automated changes.\nLine 3: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'default' required some automated changes.\nLine 5: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 6: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 6: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 16: Converted 'soulbind.X' to 'soulbind.X.enabled' (3x).\nLine 17: Converted 'soulbind.X' to 'soulbind.X.enabled' (1x).\nLine 19: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 21: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 24: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 26: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 31: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'precombat' required some automated changes.\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\nLine 10: Converted 'runeforge.X' to 'runeforge.X.enabled' (1x).\n\nWARNING:  The import for 'trinkets' required some automated changes.\nLine 10: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 11: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\n\nWARNING:  The import for 'opener' required some automated changes.\nLine 1: Converted 'soulbind.X' to 'soulbind.X.enabled' at EOL (1x).\nLine 1: Converted 'runeforge.X' to 'runeforge.X.enabled' at EOL (1x).\n\nImported 10 action lists.\n",
					["author"] = "",
					["profile"] = "## Demonology Warlock\n## https://github.com/simulationcraft/simc/\n## August 21, 2022\n\n## Changes:\n## - Spell Lock.\n## - Only recommend Demonbolt pre-combat if it is instant (or hardcast for bosses); don't overcap shards if you're at 5 in the opener.\n## - Power Siphon allowed pre-combat to proc instant Demonbolt.\n## - PvP talent interrupt.\n## - Avoid SB->HoG spam when you're not about to summon a Tyrant.\n## - Fleshcraft/Volatile Solvent cancel_if changed to interrupt_if.\n## - Try to avoid wasting Demonic Core stacks.\n## - Try to make opener priority only work if we can actually open with a Tyrant.\n## - Improve compatibility with M+ builds.\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/fel_domination,if=time>0&!pet.alive\nactions.precombat+=/summon_pet\nactions.precombat+=/use_item,name=tome_of_monstrous_constructions\nactions.precombat+=/use_item,name=soleahs_secret_technique\nactions.precombat+=/fleshcraft\nactions.precombat+=/power_siphon,if=buff.wild_imps.stack>1&buff.demonic_core.stack<=2\nactions.precombat+=/use_item,name=shadowed_orb_of_torment\nactions.precombat+=/demonbolt,if=soul_shards<5&(boss||action.demonbolt.cast=0)\nactions.precombat+=/shadow_bolt,if=soul_shards<5&!(boss||action.demonbolt.cast=0)\n## actions.precombat+=/variable,name=first_tyrant_time,op=set,value=12\n## actions.precombat+=/variable,name=first_tyrant_time,op=add,value=action.grimoire_felguard.execute_time,if=talent.grimoire_felguard.enabled\n## actions.precombat+=/variable,name=first_tyrant_time,op=add,value=action.summon_vilefiend.execute_time,if=talent.summon_vilefiend.enabled\n## actions.precombat+=/variable,name=first_tyrant_time,op=add,value=gcd.max,if=talent.grimoire_felguard.enabled||talent.summon_vilefiend.enabled\n## actions.precombat+=/variable,name=first_tyrant_time,op=sub,value=action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time\n## actions.precombat+=/variable,name=first_tyrant_time,op=min,value=10\n## actions.precombat+=/variable,name=in_opener,op=set,value=1\nactions.precombat+=/variable,name=use_bolt_timings,op=set,value=runeforge.shard_of_annihilation&(runeforge.balespiders_burning_core+talent.sacrificed_souls.enabled+talent.power_siphon.enabled>1)\n\n# Executed every time the actor is available.\nactions=spell_lock\nactions+=/call_felhunter\nactions+=/axe_toss\nactions+=/devour_magic\nactions=variable,name=next_tyrant_cd,op=set,value=cooldown.summon_demonic_tyrant.remains_expected,if=!soulbind.field_of_blossoms||cooldown.summon_demonic_tyrant.remains_expected>cooldown.soul_rot.remains_expected\nactions+=/variable,name=next_tyrant_cd,op=set,value=cooldown.soul_rot.remains_expected,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&cooldown.summon_demonic_tyrant.remains_expected<cooldown.soul_rot.remains_expected\n## actions+=/variable,name=in_opener,op=set,value=0,if=pet.demonic_tyrant.active\nactions+=/variable,name=buff_sync_cd,op=set,value=variable.next_tyrant_cd,if=!variable.use_bolt_timings&!in_opener\nactions+=/variable,name=buff_sync_cd,op=set,value=12,if=!variable.use_bolt_timings&in_opener&!pet.dreadstalker.active\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&buff.wild_imps.stack>0&!talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=0,if=!variable.use_bolt_timings&in_opener&pet.dreadstalker.active&prev_gcd.1.hand_of_guldan&talent.vilefiend.enabled\nactions+=/variable,name=buff_sync_cd,op=set,value=cooldown.decimating_bolt.remains_expected,if=variable.use_bolt_timings\nactions+=/call_action_list,name=trinkets\nactions+=/call_action_list,name=ogcd,if=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up&(!talent.power_siphon.enabled||buff.power_siphon.up))\nactions+=/implosion,if=boss&fight_remains<2*gcd\nactions+=/call_action_list,name=opener,strict=1,if=toggle.cooldowns&time<first_tyrant_time\nactions+=/call_action_list,name=covenant_ability,strict=1,if=soulbind.grove_invigoration||soulbind.field_of_blossoms||soulbind.combat_meditation||covenant.necrolord\nactions+=/potion,if=(!variable.use_bolt_timings&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time||soulbind.refined_palate&variable.next_tyrant_cd<38)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions+=/call_action_list,name=tyrant_setup\nactions+=/demonic_strength,if=(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>9)||(pet.demonic_tyrant.active&pet.demonic_tyrant.remains<6*gcd.max)\nactions+=/call_dreadstalkers,if=variable.use_bolt_timings&cooldown.summon_demonic_tyrant.remains_expected>22\nactions+=/call_dreadstalkers,if=!variable.use_bolt_timings&(variable.next_tyrant_cd>20-5*!runeforge.wilfreds_sigil_of_superior_summoning)\nactions+=/bilescourge_bombers,if=buff.tyrant.down&variable.next_tyrant_cd>5\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/implosion,if=active_enemies>1+(1*talent.sacrificed_souls.enabled)&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&(buff.implosive_potential.down||buff.wild_imps.stack*(1+4*(spell_targets.implosion>2))>=buff.implosive_potential.v1)\nactions+=/implosion,if=active_enemies>2&buff.wild_imps.stack>=6+(3*talent.soul_conduit.enabled)&buff.tyrant.down&variable.next_tyrant_cd>5&!runeforge.implosive_potential&(!talent.from_the_shadows.enabled||debuff.from_the_shadows.up)\nactions+=/grimoire_felguard,if=boss&time_to_die<30\nactions+=/summon_vilefiend,if=boss&time_to_die<28\nactions+=/summon_demonic_tyrant,if=boss&time_to_die<15\nactions+=/hand_of_guldan,if=soul_shard=5\nactions+=/shadow_bolt,if=soul_shard<5&runeforge.balespiders_burning_core&buff.balespiders_burning_core.remains<5\nactions+=/doom,if=refreshable\n# If Dreadstalkers are already active, no need to save shards\nactions+=/hand_of_guldan,if=soul_shard>=3&(pet.dreadstalker.active||pet.demonic_tyrant.active)\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.nether_portal.up&cooldown.call_dreadstalkers.remains>2*gcd.max\nactions+=/hand_of_guldan,if=soul_shard>=1&buff.wild_imps.stack>2&pet.dreadstalker.remains>0.5+cast_time+action.summon_demonic_tyrant.cast_time&pet.dreadstalker.remains<0.5+cast_time+action.summon_demonic_tyrant.cast_time+(0>?(3-soul_shard))*action.shadow_bolt.cast_time&variable.next_tyrant_cd<gcd.max&time>first_tyrant_time-gcd.max\nactions+=/call_action_list,name=covenant_ability,strict=1,if=!covenant.venthyr\n# Without Sacrificed Souls, Soul Strike is stronger than Demonbolt, so it has a higher priority\nactions+=/soul_strike,if=!talent.sacrificed_souls.enabled\nactions+=/power_siphon,if=!variable.use_bolt_timings&buff.wild_imps.stack>1&buff.demonic_core.stack<3\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up&buff.shard_of_annihilation.stack<3\n# Spend Demonic Cores for Soul Shards until Tyrant cooldown is close to ready\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd>20\n# During Tyrant setup, spend Demonic Cores for Soul Shards\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&variable.next_tyrant_cd<12\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&(buff.demonic_core.stack>2||talent.sacrificed_souls.enabled)\nactions+=/power_siphon,if=variable.use_bolt_timings&buff.shard_of_annihilation.up\nactions+=/demonbolt,if=set_bonus.tier28_2pc&soul_shard<4&((6-soul_shard)*action.shadow_bolt.execute_time>pet.dreadstalker.remains-action.hand_of_guldan.execute_time-action.demonbolt.execute_time)&buff.demonic_core.stack>=1\nactions+=/demonbolt,if=buff.demonic_core.react&soul_shard<4&active_enemies>1\nactions+=/soul_strike\nactions+=/call_action_list,name=covenant_ability\n# If you can get back to 5 Soul Shards before Dreadstalkers cooldown is ready, it's okay to spend them now\nactions+=/hand_of_guldan,if=soul_shard>=3&variable.next_tyrant_cd>25&(talent.demonic_calling.enabled||cooldown.call_dreadstalkers.remains>((5-soul_shard)*action.shadow_bolt.execute_time)+action.hand_of_guldan.execute_time)\nactions+=/doom,cycle_targets=1,if=refreshable&time>first_tyrant_time\n# Use Demonbolt if you're going to lose Demonic Core stacks, even if it'd waste a soul shard.\nactions+=/demonbolt,if=buff.demonic_core.react&buff.demonic_core.remains<1+gcd.max*buff.demonic_core.stack\nactions+=/shadow_bolt\n\nactions.slow_trinkets=use_item,name=soulletting_ruby,cycle_targets=1,if=variable.buff_sync_cd<target.distance%5-(2*gcd.max*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=sunblood_amethyst,if=variable.buff_sync_cd<target.distance%5+(2*variable.use_bolt_timings)\nactions.slow_trinkets+=/use_item,name=empyreal_ordnance,if=variable.buff_sync_cd<(target.distance%5)+12+(2*variable.use_bolt_timings)\n\nactions.covenant_ability=soul_rot,if=(soulbind.field_of_blossoms||runeforge.decaying_soul_satchel)&pet.demonic_tyrant.active\nactions.covenant_ability+=/soul_rot,if=soulbind.grove_invigoration&!runeforge.decaying_soul_satchel&(variable.next_tyrant_cd<20||variable.next_tyrant_cd>30)\nactions.covenant_ability+=/soul_rot,if=!(soulbind.field_of_blossoms||soulbind.grove_invigoration)&!runeforge.decaying_soul_satchel&!pet.demonic_tyrant.active&variable.next_tyrant_cd>18\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.lead_by_example&(pet.demonic_tyrant.active&soul_shard<2||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=min:target.health.pct,if=!variable.use_bolt_timings&soulbind.kevins_oozeling&(pet.demonic_tyrant.active||!pet.demonic_tyrant.active&variable.next_tyrant_cd>40)\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=!variable.use_bolt_timings&(soulbind.forgeborne_reveries||(soulbind.volatile_solvent&!soulbind.kevins_oozeling))&!pet.demonic_tyrant.active\nactions.covenant_ability+=/decimating_bolt,cycle_targets=1,if=variable.use_bolt_timings&(!talent.power_siphon||cooldown.power_siphon.remains<action.decimating_bolt.execute_time)&!cooldown.summon_demonic_tyrant.up&(pet.demonic_tyrant.remains<8||cooldown.summon_demonic_tyrant.remains_expected<30)\nactions.covenant_ability+=/fleshcraft,if=soulbind.volatile_solvent&buff.volatile_solvent.down,interrupt_if=buff.volatile_solvent.up\nactions.covenant_ability+=/scouring_tithe,if=soulbind.combat_meditation&pet.demonic_tyrant.active\nactions.covenant_ability+=/scouring_tithe,if=!soulbind.combat_meditation\nactions.covenant_ability+=/impending_catastrophe,if=pet.demonic_tyrant.active&soul_shard=0\n\nactions.hp_trinks=use_item,name=gladiators_emblem\n\nactions.ogcd=berserking\nactions.ogcd+=/blood_fury\nactions.ogcd+=/fireblood\nactions.ogcd+=/use_items\n\nactions.opener=soul_rot,if=soulbind.grove_invigoration,if=!runeforge.decaying_soul_satchel\nactions.opener+=/nether_portal\nactions.opener+=/grimoire_felguard\nactions.opener+=/summon_vilefiend\nactions.opener+=/shadow_bolt,if=soul_shard<5&cooldown.call_dreadstalkers.up\nactions.opener+=/shadow_bolt,if=variable.use_bolt_timings&soul_shard<5&buff.balespiders_burning_core.stack<4\nactions.opener+=/call_dreadstalkers\n\nactions.pure_damage_trinks=use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=resonant_reservoir\nactions.pure_damage_trinks+=/use_item,name=architects_ingenuity_core\nactions.pure_damage_trinks+=/use_item,name=cosmic_gladiators_resonator\nactions.pure_damage_trinks+=/use_item,name=dreadfire_vessel\nactions.pure_damage_trinks+=/use_item,name=soul_igniter\nactions.pure_damage_trinks+=/use_item,name=glyph_of_assimilation,if=active_enemies=1\nactions.pure_damage_trinks+=/use_item,name=darkmoon_deck_putrescence\nactions.pure_damage_trinks+=/use_item,name=ebonsoul_vise\nactions.pure_damage_trinks+=/use_item,name=unchained_gladiators_shackles\nactions.pure_damage_trinks+=/trinket1\nactions.pure_damage_trinks+=/trinket2\n\nactions.trinkets=variable,name=use_buff_trinkets,value=(!variable.use_bolt_timings&pet.demonic_tyrant.active)||(variable.use_bolt_timings&buff.shard_of_annihilation.up)\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=!buff.scars_of_fraternal_strife_4.up\nactions.trinkets+=/use_item,name=scars_of_fraternal_strife,if=buff.scars_of_fraternal_strife_4.up&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=shadowed_orb_of_torment,if=variable.buff_sync_cd<22\nactions.trinkets+=/use_item,name=moonlit_prism,if=variable.use_bolt_timings&pet.demonic_tyrant.active\nactions.trinkets+=/use_item,name=grim_eclipse,if=variable.buff_sync_cd<7\nactions.trinkets+=/call_action_list,name=hp_trinks,if=talent.demonic_consumption.enabled&variable.next_tyrant_cd<20\n# Effects that travel slowly from the target require additional, separate handling\nactions.trinkets+=/call_action_list,name=slow_trinkets\nactions.trinkets+=/use_item,name=overflowing_anima_cage,if=variable.use_buff_trinkets\nactions.trinkets+=/trinket1,if=trinket.1.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/trinket2,if=trinket.2.has_use_buff&variable.use_buff_trinkets\nactions.trinkets+=/use_item,name=neural_synapse_enhancer,if=variable.buff_sync_cd>45||variable.use_buff_trinkets\nactions.trinkets+=/call_action_list,name=pure_damage_trinks,if=time>first_tyrant_time&variable.buff_sync_cd>20\nactions.trinkets+=/use_items,time>first_tyrant_time&variable.buff_sync_cd>20\n\nactions.tyrant_setup=nether_portal,if=variable.next_tyrant_cd<15\nactions.tyrant_setup+=/grimoire_felguard,if=variable.next_tyrant_cd<17-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)&(cooldown.call_dreadstalkers.remains<17-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time+action.shadow_bolt.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time)\nactions.tyrant_setup+=/summon_vilefiend,if=(variable.next_tyrant_cd<15-(action.summon_demonic_tyrant.execute_time)&(cooldown.call_dreadstalkers.remains<15-(action.summon_demonic_tyrant.execute_time+action.summon_vilefiend.execute_time)||pet.dreadstalker.remains>variable.next_tyrant_cd+action.summon_demonic_tyrant.execute_time))||(!runeforge.wilfreds_sigil_of_superior_summoning&variable.next_tyrant_cd>40)\nactions.tyrant_setup+=/call_dreadstalkers,if=variable.next_tyrant_cd<12-(action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)\nactions.tyrant_setup+=/summon_demonic_tyrant,if=time>first_tyrant_time&(pet.dreadstalker.active&pet.dreadstalker.remains>action.summon_demonic_tyrant.execute_time)&(!talent.summon_vilefiend.enabled||pet.vilefiend.active)&(soul_shard=0||(pet.dreadstalker.active&pet.dreadstalker.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(pet.vilefiend.active&pet.vilefiend.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time)||(buff.grimoire_felguard.up&buff.grimoire_felguard.remains<action.summon_demonic_tyrant.execute_time+action.shadow_bolt.execute_time))",
				},
				["Guardian"] = {
					["source"] = "https://github.com/simulationcraft/simc/",
					["builtIn"] = true,
					["date"] = 20220821,
					["author"] = "SimC",
					["desc"] = "Guardian Druid\nAugust 21, 2022\n\nChanges:\n- Incorporate Cat/Moonkin priorities (if setting is checked).\n- Incorporate option to shift (or not) before Convoke.\n- Support Barkskin usage with 4pc set bonus.",
					["lists"] = {
						["bear"] = {
							{
								["enabled"] = true,
								["criteria"] = "! buff.bear_form.up",
								["action"] = "bear_form",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ( talent.balance_affinity.enabled )",
								["action"] = "heart_of_the_wild",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "( ( ! ticking & time_to_die > 12 & buff.galactic_guardian.up ) || ( refreshable & time_to_die > 12 & buff.galactic_guardian.up ) ) & active_enemies < 6",
								["action"] = "moonfire",
								["cycle_targets"] = 1,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( ( ! ticking & time_to_die > 12 ) || ( refreshable & time_to_die > 12 ) ) & active_enemies < 6",
								["action"] = "moonfire",
								["cycle_targets"] = 1,
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "( ( ( trinket.t1.is.cache_of_acquired_treasures || trinket.t2.is.cache_of_acquired_treasures ) & buff.acquired_axe.up ) ) || ( ! trinket.t1.is.cache_of_acquired_treasures & ! trinket.t2.is.cache_of_acquired_treasures )",
								["action"] = "ravenous_frenzy",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "! druid.catweave_bear & ! druid.owlweave_bear & ( trinket.t1.is.cache_of_acquired_treasures || trinket.t2.is.cache_of_acquired_treasures )",
								["action"] = "convoke_the_spirits",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( ! covenant.venthyr & ( ( trinket.t1.is.cache_of_acquired_treasures || trinket.t2.is.cache_of_acquired_treasures ) & buff.acquired_axe.up ) )",
								["action"] = "incarnation",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t1.is.cache_of_acquired_treasures & buff.acquired_axe.up",
								["action"] = "trinket1",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "trinket.t2.is.cache_of_acquired_treasures & buff.acquired_axe.up",
								["action"] = "trinket2",
							}, -- [9]
							{
								["enabled"] = true,
								["name"] = "gavel_of_the_first_arbiter",
								["action"] = "gavel_of_the_first_arbiter",
							}, -- [10]
							{
								["enabled"] = true,
								["name"] = "wraps_of_electrostatic_potential",
								["action"] = "wraps_of_electrostatic_potential",
							}, -- [11]
							{
								["enabled"] = true,
								["name"] = "ring_of_collapsing_futures",
								["action"] = "ring_of_collapsing_futures",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr",
								["name"] = "jotungeirr_destinys_call",
								["action"] = "jotungeirr_destinys_call",
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "! buff.prowl.up & covenant.venthyr & ! trinket.t1.is.cache_of_acquired_treasures & ( ! buff.acquired_axe.up & ! buff.acquired_sword.up & ! buff.acquired_wand.up ) || ! buff.prowl.up & ! covenant.venthyr & ! trinket.t1.is.cache_of_acquired_treasures & ( ! buff.acquired_axe.up & ! buff.acquired_sword.up & ! buff.acquired_wand.up )",
								["action"] = "trinket1",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "! buff.prowl.up & covenant.venthyr & ! trinket.t2.is.cache_of_acquired_treasures & ( ! buff.acquired_axe.up & ! buff.acquired_sword.up & ! buff.acquired_wand.up ) || ! buff.prowl.up & ! covenant.venthyr & ! trinket.t1.is.cache_of_acquired_treasures & ( ! buff.acquired_axe.up & ! buff.acquired_sword.up & ! buff.acquired_wand.up )",
								["action"] = "trinket2",
							}, -- [15]
							{
								["enabled"] = true,
								["criteria"] = "covenant.venthyr & buff.incarnation.remains >= 24 & buff.incarnation.remains <= 25",
								["action"] = "potion",
							}, -- [16]
							{
								["enabled"] = true,
								["criteria"] = "tanking & buff.bear_form.up & set_bonus.tier28_4pc > 0",
								["action"] = "barkskin",
							}, -- [17]
							{
								["enabled"] = true,
								["criteria"] = "! druid.catweave_bear & ! druid.owlweave_bear",
								["action"] = "convoke_the_spirits",
							}, -- [18]
							{
								["enabled"] = true,
								["criteria"] = "( buff.ravenous_frenzy.up || ! covenant.venthyr )",
								["action"] = "berserk",
							}, -- [19]
							{
								["enabled"] = true,
								["criteria"] = "( buff.ravenous_frenzy.up || ! covenant.venthyr )",
								["action"] = "incarnation",
							}, -- [20]
							{
								["enabled"] = true,
								["criteria"] = "( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up )",
								["action"] = "berserking",
							}, -- [21]
							{
								["action"] = "empower_bond",
								["enabled"] = true,
							}, -- [22]
							{
								["enabled"] = true,
								["criteria"] = "( ! dot.adaptive_swarm_damage.ticking & ! action.adaptive_swarm_damage.in_flight & ( ! dot.adaptive_swarm_heal.ticking || dot.adaptive_swarm_heal.remains > 3 ) || dot.adaptive_swarm_damage.stack < 3 & dot.adaptive_swarm_damage.remains < 5 & dot.adaptive_swarm_damage.ticking )",
								["action"] = "adaptive_swarm",
							}, -- [23]
							{
								["enabled"] = true,
								["criteria"] = "buff.galactic_guardian.up & active_enemies < 3",
								["action"] = "moonfire",
							}, -- [24]
							{
								["enabled"] = true,
								["criteria"] = "refreshable || dot.thrash_bear.stack < 3 || ( dot.thrash_bear.stack < 4 & runeforge.luffainfused_embrace.equipped ) || active_enemies >= 4 || buff.berserk_bear.up & buff.berserk_bear.remains <= gcd + 0.5",
								["action"] = "thrash_bear",
								["cycle_targets"] = 1,
							}, -- [25]
							{
								["enabled"] = true,
								["criteria"] = "rage.deficit > 10 & settings.mangle_more",
								["action"] = "mangle",
							}, -- [26]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled & ( ( cooldown.thrash_bear.remains > 0 & cooldown.mangle.remains > 0 ) & ( dot.moonfire.remains >= 3 ) & ( buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & buff.galactic_guardian.down ) ) || soulbind.volatile_solvent.enabled",
								["interrupt_if"] = "soulbind.volatile_solvent&(cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0)",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [27]
							{
								["enabled"] = true,
								["criteria"] = "buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & active_enemies >= 4",
								["action"] = "swipe_bear",
							}, -- [28]
							{
								["enabled"] = true,
								["criteria"] = "( buff.incarnation.up ) & active_enemies < 3 & ( buff.tooth_and_claw.stack >= 2 ) || ( buff.tooth_and_claw.up & buff.tooth_and_claw.remains < 1.5 ) & active_enemies < 3 || ( buff.berserk_bear.up || buff.incarnation.up ) & ( buff.savage_combatant.stack >= 3 ) & active_enemies < 3 || ! conduit.savage_combatant.enabled & ( buff.berserk_bear.up || buff.incarnation.up ) & active_enemies < 3 & ! runeforge.ursocs_fury_remembered.equipped || ( buff.savage_combatant.stack >= 3 ) & active_enemies < 3 || ! conduit.savage_combatant.enabled & active_enemies < 3 & ( ! buff.berserk_bear.up & ! buff.incarnation.up )",
								["action"] = "maul",
							}, -- [29]
							{
								["enabled"] = true,
								["criteria"] = "( runeforge.ursocs_fury_remembered.equipped & conduit.savage_combatant.enabled & active_enemies > 1 ) || ( runeforge.ursocs_fury_remembered.equipped & ! conduit.savage_combatant.enabled & active_enemies >= 1 )",
								["action"] = "thrash_bear",
							}, -- [30]
							{
								["enabled"] = true,
								["criteria"] = "buff.incarnation.up & active_enemies <= 3",
								["action"] = "mangle",
							}, -- [31]
							{
								["enabled"] = true,
								["criteria"] = "active_enemies > 1",
								["action"] = "thrash_bear",
							}, -- [32]
							{
								["action"] = "mangle",
								["enabled"] = true,
							}, -- [33]
							{
								["enabled"] = true,
								["criteria"] = "dot.thrash_bear.stack > 2",
								["action"] = "pulverize",
								["cycle_targets"] = 1,
							}, -- [34]
							{
								["action"] = "thrash_bear",
								["enabled"] = true,
							}, -- [35]
							{
								["action"] = "swipe_bear",
								["enabled"] = true,
							}, -- [36]
							{
								["enabled"] = true,
								["criteria"] = "rage >= 60 & buff.ironfur.stack < 2 & conduit.savage_combatant.enabled & active_enemies < 3 || ! conduit.savage_combatant.enabled & rage >= 42 & buff.ironfur.down & active_enemies < 3 || active_enemies >= 3 & rage > 80 & buff.ironfur.stack < 7",
								["action"] = "ironfur",
							}, -- [37]
						},
						["mitigation"] = {
							{
								["enabled"] = true,
								["criteria"] = "incoming_damage_5s > ironfur_damage_threshold & buff.ironfur.remains < 3 * haste",
								["action"] = "ironfur",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "tanking & health.pct < 65",
								["action"] = "renewal",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "tanking & health.pct < 65",
								["action"] = "frenzied_regeneration",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "( ! druid.catweave_bear & ! druid.owlweave_bear ) || active_enemies >= 2",
								["action"] = "empower_bond",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "tanking & health.pct < 75 & incoming_damage_5s > 0.1 * health.max",
								["action"] = "barkskin",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.survival_instincts.down & buff.barkskin.down & health.pct < 60 & incoming_damage_5s > 0.25 * health.max",
								["action"] = "survival_instincts",
							}, -- [6]
						},
						["default"] = {
							{
								["enabled"] = true,
								["description"] = "Executed every time the actor is available.",
								["action"] = "skull_bash",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.prowl.up & ! covenant.venthyr",
								["name"] = "jotungeirr_destinys_call",
								["action"] = "jotungeirr_destinys_call",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! buff.prowl.up & ! covenant.venthyr",
								["action"] = "trinket1",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! buff.prowl.up & ! covenant.venthyr",
								["action"] = "trinket2",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "! covenant.venthyr & ( ( ( talent.heart_of_the_wild.enabled & buff.heart_of_the_wild.up ) & ( druid.catweave_bear || druid.owlweave_bear ) & ! buff.prowl.up ) || ( ( buff.berserk_bear.up || buff.incarnation_guardian_of_ursoc.up ) & ( ! druid.catweave_bear & ! druid.owlweave_bear ) ) )",
								["action"] = "potion",
							}, -- [5]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "druid.catweave_bear & ! tanking & ! covenant.venthyr & buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & ( ( cooldown.thrash_bear.remains > 0 & cooldown.mangle.remains > 0 & dot.moonfire.remains >= gcd + 0.5 & rage < 40 & buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & buff.galactic_guardian.down ) || ( buff.cat_form.up & energy > 25 ) || ( dot.rake.refreshable & dot.rip.refreshable ) || ( runeforge.oath_of_the_elder_druid.equipped & ! buff.oath_of_the_elder_druid.up & ( buff.cat_form.up & energy > 20 ) & buff.heart_of_the_wild.remains <= 10 ) || ( covenant.kyrian & cooldown.empower_bond.remains <= 1 & active_enemies < 2 ) || ( buff.heart_of_the_wild.up & energy > 90 ) )",
								["list_name"] = "catweave",
							}, -- [6]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "druid.catweave_bear & ! tanking & covenant.venthyr & ( ( cooldown.thrash_bear.remains > 0 & cooldown.mangle.remains > 0 & dot.moonfire.remains >= gcd + 0.5 & rage < 40 & buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & buff.galactic_guardian.down ) || ( buff.cat_form.up & energy > 25 ) || ( dot.rake.refreshable & dot.rip.refreshable & rage < 40 & buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & buff.galactic_guardian.down ) )",
								["list_name"] = "catweave",
							}, -- [7]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "! druid.catweave_bear & buff.cat_form.up",
								["list_name"] = "catweave",
							}, -- [8]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "druid.owlweave_bear & ! tanking & buff.incarnation_guardian_of_ursoc.down & buff.berserk_bear.down & ( ( cooldown.thrash_bear.remains > 0 & cooldown.mangle.remains > 0 & buff.galactic_guardian.down ) || ( buff.moonkin_form.up & dot.sunfire.refreshable ) || ( runeforge.oath_of_the_elder_druid.equipped & ! buff.oath_of_the_elder_druid.up ) || ( covenant.night_fae & cooldown.convoke_the_spirits.remains <= 1 ) )",
								["list_name"] = "owlweave",
							}, -- [9]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["strict"] = 1,
								["criteria"] = "! druid.owlweave_bear & buff.moonkin_form.up",
								["list_name"] = "owlweave",
							}, -- [10]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "If we're a nightfae and we don't want to catweave/owlweave, and we have balance/feral affinity talented, Whenever convoke cd is up we switch into affinity form to cast it, here moonkin form.",
								["criteria"] = "settings.shift_for_convoke & ( ( talent.balance_affinity.enabled ) & ( ! druid.catweave_bear ) & ( ! druid.owlweave_bear ) & ( covenant.night_fae & cooldown.convoke_the_spirits.remains <= 1 ) )",
								["list_name"] = "oconvoke",
							}, -- [11]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["description"] = "If we're a nightfae and we don't want to catweave/owlweave, and we have balance/feral affinity talented, Whenever convoke cd is up we switch into affinity form to cast it, here catform form.",
								["criteria"] = "settings.shift_for_convoke & ( ( talent.feral_affinity.enabled ) & ( ! druid.catweave_bear ) & ( ! druid.owlweave_bear ) & ( covenant.night_fae & cooldown.convoke_the_spirits.remains <= 1 ) )",
								["list_name"] = "cconvoke",
							}, -- [12]
							{
								["enabled"] = true,
								["action"] = "call_action_list",
								["list_name"] = "mitigation",
							}, -- [13]
							{
								["enabled"] = true,
								["action"] = "run_action_list",
								["list_name"] = "bear",
							}, -- [14]
						},
						["oconvoke"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up & ! buff.moonkin_form.up",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.moonkin_form.up",
								["action"] = "moonkin_form",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.first_strike.enabled & buff.first_strike.up",
								["action"] = "convoke_the_spirits",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.legacy_of_the_sleeper.equipped",
								["action"] = "convoke_the_spirits",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "eclipse.any_next || eclipse.solar_next",
								["action"] = "starfire",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "eclipse.any_next || eclipse.lunar_next",
								["action"] = "wrath",
							}, -- [6]
							{
								["action"] = "convoke_the_spirits",
								["enabled"] = true,
							}, -- [7]
						},
						["catweave"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up & ! buff.cat_form.up",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["action"] = "prowl",
								["enabled"] = true,
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "! buff.cat_form.up",
								["action"] = "cat_form",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "buff.prowl.up",
								["action"] = "rake",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up",
								["action"] = "heart_of_the_wild",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "druid.catweave_bear",
								["action"] = "empower_bond",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "dot.rake.refreshable || energy < 45",
								["action"] = "rake",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "dot.rip.refreshable & combo_points >= 4",
								["action"] = "rip",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "druid.catweave_bear",
								["action"] = "convoke_the_spirits",
							}, -- [9]
							{
								["enabled"] = true,
								["max_energy"] = 1,
								["criteria"] = "combo_points >= 4 & energy > 50",
								["action"] = "ferocious_bite",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "( ! dot.adaptive_swarm_damage.ticking & ! action.adaptive_swarm_damage.in_flight & ( ! dot.adaptive_swarm_heal.ticking || dot.adaptive_swarm_heal.remains > 3 ) || dot.adaptive_swarm_damage.stack < 3 & dot.adaptive_swarm_damage.remains < 5 & dot.adaptive_swarm_damage.ticking )",
								["action"] = "adaptive_swarm",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled & energy < 35 || soulbind.volatile_solvent.enabled",
								["interrupt_if"] = "soulbind.volatile_solvent&energy<35",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [12]
							{
								["action"] = "swipe_bear",
								["enabled"] = true,
							}, -- [13]
							{
								["enabled"] = true,
								["criteria"] = "refreshable & combo_points < 5",
								["action"] = "rake",
							}, -- [14]
							{
								["enabled"] = true,
								["criteria"] = "combo_points < 5",
								["action"] = "shred",
							}, -- [15]
						},
						["cooldowns"] = {
							{
								["action"] = "potion",
								["enabled"] = true,
							}, -- [1]
							{
								["action"] = "blood_fury",
								["enabled"] = true,
							}, -- [2]
							{
								["action"] = "berserking",
								["enabled"] = true,
							}, -- [3]
							{
								["action"] = "arcane_torrent",
								["enabled"] = true,
							}, -- [4]
							{
								["action"] = "lights_judgment",
								["enabled"] = true,
							}, -- [5]
							{
								["action"] = "fireblood",
								["enabled"] = true,
							}, -- [6]
							{
								["action"] = "ancestral_call",
								["enabled"] = true,
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "buff.bear_form.up",
								["action"] = "bristling_fur",
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "( dot.moonfire.ticking || active_enemies > 1 ) & dot.thrash_bear.ticking",
								["action"] = "incarnation",
							}, -- [9]
							{
								["action"] = "berserk",
								["enabled"] = true,
							}, -- [10]
							{
								["action"] = "use_items",
								["enabled"] = true,
							}, -- [11]
						},
						["precombat"] = {
							{
								["enabled"] = true,
								["description"] = "Executed before combat begins. Accepts non-harmful actions only.",
								["action"] = "kindred_spirits",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ( druid.catweave_bear & buff.cat_form.up || druid.owlweave_bear & buff.moonkin_form.up || buff.moonkin_form.up & talent.balance_affinity.enabled )",
								["action"] = "heart_of_the_wild",
							}, -- [2]
							{
								["enabled"] = true,
								["criteria"] = "buff.cat_form.up & druid.catweave_bear",
								["action"] = "prowl",
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "! buff.any_form.up & ( ( ! druid.owlweave_bear & ! druid.catweave_bear ) & ( ! covenant.night_fae ) ) || ( ( ! druid.owlweave_bear & ! druid.catweave_bear ) & ( covenant.night_fae & talent.restoration_affinity.enabled ) )",
								["action"] = "bear_form",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "buff.moonkin_form.up & druid.owlweave_bear & ! covenant.night_fae",
								["action"] = "wrath",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "buff.moonkin_form.up & druid.owlweave_bear & covenant.night_fae",
								["action"] = "starfire",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.pustule_eruption.enabled || soulbind.volatile_solvent.enabled",
								["interrupt_if"] = "soulbind.volatile_solvent",
								["interrupt_immediate"] = "1",
								["action"] = "fleshcraft",
								["interrupt_global"] = "1",
							}, -- [7]
						},
						["cconvoke"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up & ! buff.cat_form.up",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.cat_form.up",
								["action"] = "cat_form",
							}, -- [2]
							{
								["action"] = "convoke_the_spirits",
								["enabled"] = true,
							}, -- [3]
						},
						["owlweave"] = {
							{
								["enabled"] = true,
								["criteria"] = "talent.heart_of_the_wild.enabled & ! buff.heart_of_the_wild.up & ! buff.moonkin_form.up",
								["action"] = "heart_of_the_wild",
							}, -- [1]
							{
								["enabled"] = true,
								["criteria"] = "! buff.moonkin_form.up",
								["action"] = "moonkin_form",
							}, -- [2]
							{
								["action"] = "starsurge",
								["enabled"] = true,
							}, -- [3]
							{
								["enabled"] = true,
								["criteria"] = "runeforge.legacy_of_the_sleeper.equipped",
								["action"] = "convoke_the_spirits",
							}, -- [4]
							{
								["enabled"] = true,
								["criteria"] = "soulbind.first_strike.enabled",
								["action"] = "convoke_the_spirits",
							}, -- [5]
							{
								["enabled"] = true,
								["criteria"] = "druid.owlweave_bear",
								["action"] = "empower_bond",
							}, -- [6]
							{
								["enabled"] = true,
								["criteria"] = "( ! dot.adaptive_swarm_damage.ticking & ! action.adaptive_swarm_damage.in_flight & ( ! dot.adaptive_swarm_heal.ticking || dot.adaptive_swarm_heal.remains > 3 ) || dot.adaptive_swarm_damage.stack < 3 & dot.adaptive_swarm_damage.remains < 5 & dot.adaptive_swarm_damage.ticking )",
								["action"] = "adaptive_swarm",
							}, -- [7]
							{
								["enabled"] = true,
								["criteria"] = "refreshable",
								["action"] = "sunfire",
								["cycle_targets"] = 1,
							}, -- [8]
							{
								["enabled"] = true,
								["criteria"] = "refreshable || buff.galactic_guardian.up",
								["action"] = "moonfire",
								["cycle_targets"] = 1,
							}, -- [9]
							{
								["enabled"] = true,
								["criteria"] = "covenant.night_fae & eclipse.any_next",
								["action"] = "starfire",
							}, -- [10]
							{
								["enabled"] = true,
								["criteria"] = "! covenant.night_fae & eclipse.any_next",
								["action"] = "wrath",
							}, -- [11]
							{
								["enabled"] = true,
								["criteria"] = "( buff.eclipse_lunar.up || buff.eclipse_solar.up )",
								["action"] = "convoke_the_spirits",
							}, -- [12]
							{
								["enabled"] = true,
								["criteria"] = "( eclipse.in_lunar || eclipse.solar_next ) || ( eclipse.in_lunar & buff.starsurge_empowerment_lunar.up )",
								["action"] = "starfire",
							}, -- [13]
							{
								["action"] = "wrath",
								["enabled"] = true,
							}, -- [14]
						},
					},
					["version"] = 20220821,
					["warnings"] = "WARNING:  The import for 'bear' required some automated changes.\nLine 5: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 5: Converted 'trinket.2.X' to 'trinket.t2.X' (2x).\nLine 6: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 6: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\nLine 7: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 7: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\nLine 8: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 9: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\nLine 14: Converted 'trinket.1.X' to 'trinket.t1.X' (2x).\nLine 15: Converted 'trinket.1.X' to 'trinket.t1.X' (1x).\nLine 15: Converted 'trinket.2.X' to 'trinket.t2.X' (1x).\n\nImported 9 action lists.\n",
					["profile"] = "## Guardian Druid\n## August 21, 2022\n\n## Changes:\n## - Incorporate Cat/Moonkin priorities (if setting is checked).\n## - Incorporate option to shift (or not) before Convoke.\n## - Support Barkskin usage with 4pc set bonus.\n\n# Executed before combat begins. Accepts non-harmful actions only.\nactions.precombat+=/kindred_spirits\nactions.precombat+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&(druid.catweave_bear&buff.cat_form.up||druid.owlweave_bear&buff.moonkin_form.up||buff.moonkin_form.up&talent.balance_affinity.enabled)\nactions.precombat+=/prowl,if=buff.cat_form.up&druid.catweave_bear\nactions.precombat+=/bear_form,if=!buff.any_form.up&((!druid.owlweave_bear&!druid.catweave_bear)&(!covenant.night_fae))||((!druid.owlweave_bear&!druid.catweave_bear)&(covenant.night_fae&talent.restoration_affinity.enabled))\nactions.precombat+=/wrath,if=buff.moonkin_form.up&druid.owlweave_bear&!covenant.night_fae\nactions.precombat+=/starfire,if=buff.moonkin_form.up&druid.owlweave_bear&covenant.night_fae\nactions.precombat+=/fleshcraft,if=soulbind.pustule_eruption.enabled||soulbind.volatile_solvent.enabled,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent\n\n# Executed every time the actor is available.\nactions=skull_bash\nactions+=/use_item,name=jotungeirr_destinys_call,if=!buff.prowl.up&!covenant.venthyr\nactions+=/trinket1,if=!buff.prowl.up&!covenant.venthyr\nactions+=/trinket2,if=!buff.prowl.up&!covenant.venthyr\nactions+=/potion,if=!covenant.venthyr&(((talent.heart_of_the_wild.enabled&buff.heart_of_the_wild.up)&(druid.catweave_bear||druid.owlweave_bear)&!buff.prowl.up)||((buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)&(!druid.catweave_bear&!druid.owlweave_bear)))\n## Catweaving action list will be ran if, mangle/thrash are on cd, rage is below 40, zerk and incarnation are down and Gualactic guardian buff is not active, or if, we're in catform and energy is above 25, Or if we have the Oath legendary equipped, the debuff linked to it is not up and energy is above 20,Or if we're kyrian and Empower bond cooldown is up and enemies are inferior to 2.\nactions+=/run_action_list,strict=1,name=catweave,if=druid.catweave_bear&!tanking&!covenant.venthyr&buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&((cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0&dot.moonfire.remains>=gcd+0.5&rage<40&buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&buff.galactic_guardian.down)||(buff.cat_form.up&energy>25)||(dot.rake.refreshable&dot.rip.refreshable)||(runeforge.oath_of_the_elder_druid.equipped&!buff.oath_of_the_elder_druid.up&(buff.cat_form.up&energy>20)&buff.heart_of_the_wild.remains<=10)||(covenant.kyrian&cooldown.empower_bond.remains<=1&active_enemies<2)||(buff.heart_of_the_wild.up&energy>90))\nactions+=/run_action_list,strict=1,name=catweave,if=druid.catweave_bear&!tanking&covenant.venthyr&((cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0&dot.moonfire.remains>=gcd+0.5&rage<40&buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&buff.galactic_guardian.down)||(buff.cat_form.up&energy>25)||(dot.rake.refreshable&dot.rip.refreshable&rage<40&buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&buff.galactic_guardian.down))\nactions+=/run_action_list,strict=1,name=catweave,if=!druid.catweave_bear&buff.cat_form.up\n## Owlweaving action list will be ran if, mangle/thrash are on cd, rage is below 15, zerk and incarnation are down and Gualactic guardian buff is not active. Or if, we're in moonkin form and sunfire is refreshable, Or if we have the Oath legendary equipped, the debuff linked to it is not up.Or if we're kyrian and Empower bond cooldown is up and enemies are below 2, or if we're Night fae and Convoke cd is up.\nactions+=/run_action_list,strict=1,name=owlweave,if=druid.owlweave_bear&!tanking&buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&((cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0&buff.galactic_guardian.down)||(buff.moonkin_form.up&dot.sunfire.refreshable)||(runeforge.oath_of_the_elder_druid.equipped&!buff.oath_of_the_elder_druid.up)||(covenant.night_fae&cooldown.convoke_the_spirits.remains<=1))\nactions+=/run_action_list,strict=1,name=owlweave,if=!druid.owlweave_bear&buff.moonkin_form.up\n# If we're a nightfae and we don't want to catweave/owlweave, and we have balance/feral affinity talented, Whenever convoke cd is up we switch into affinity form to cast it, here moonkin form.\nactions+=/run_action_list,name=oconvoke,if=settings.shift_for_convoke&((talent.balance_affinity.enabled)&(!druid.catweave_bear)&(!druid.owlweave_bear)&(covenant.night_fae&cooldown.convoke_the_spirits.remains<=1))\n# If we're a nightfae and we don't want to catweave/owlweave, and we have balance/feral affinity talented, Whenever convoke cd is up we switch into affinity form to cast it, here catform form.\nactions+=/run_action_list,name=cconvoke,if=settings.shift_for_convoke&((talent.feral_affinity.enabled)&(!druid.catweave_bear)&(!druid.owlweave_bear)&(covenant.night_fae&cooldown.convoke_the_spirits.remains<=1))\nactions+=/call_action_list,name=mitigation\nactions+=/run_action_list,name=bear\n\nactions.bear=bear_form,if=!buff.bear_form.up\nactions.bear+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&(talent.balance_affinity.enabled)\nactions.bear+=/moonfire,cycle_targets=1,if=((!ticking&time_to_die>12&buff.galactic_guardian.up)||(refreshable&time_to_die>12&buff.galactic_guardian.up))&active_enemies<6\nactions.bear+=/moonfire,cycle_targets=1,if=((!ticking&time_to_die>12)||(refreshable&time_to_die>12))&active_enemies<6\nactions.bear+=/ravenous_frenzy,if=(((trinket.1.is.cache_of_acquired_treasures||trinket.2.is.cache_of_acquired_treasures)&buff.acquired_axe.up))||(!trinket.1.is.cache_of_acquired_treasures&!trinket.2.is.cache_of_acquired_treasures)\nactions.bear+=/convoke_the_spirits,if=!druid.catweave_bear&!druid.owlweave_bear&(trinket.1.is.cache_of_acquired_treasures||trinket.2.is.cache_of_acquired_treasures)\nactions.bear+=/incarnation,if=(!covenant.venthyr&((trinket.1.is.cache_of_acquired_treasures||trinket.2.is.cache_of_acquired_treasures)&buff.acquired_axe.up))\nactions.bear+=/trinket1,if=trinket.1.is.cache_of_acquired_treasures&buff.acquired_axe.up\nactions.bear+=/trinket2,if=trinket.2.is.cache_of_acquired_treasures&buff.acquired_axe.up\nactions.bear+=/use_item,name=gavel_of_the_first_arbiter\nactions.bear+=/use_item,name=wraps_of_electrostatic_potential\nactions.bear+=/use_item,name=ring_of_collapsing_futures\nactions.bear+=/use_item,name=jotungeirr_destinys_call,if=covenant.venthyr\nactions.bear+=/trinket1,if=!buff.prowl.up&covenant.venthyr&!trinket.1.is.cache_of_acquired_treasures&(!buff.acquired_axe.up&!buff.acquired_sword.up&!buff.acquired_wand.up)||!buff.prowl.up&!covenant.venthyr&!trinket.1.is.cache_of_acquired_treasures&(!buff.acquired_axe.up&!buff.acquired_sword.up&!buff.acquired_wand.up)\nactions.bear+=/trinket2,if=!buff.prowl.up&covenant.venthyr&!trinket.2.is.cache_of_acquired_treasures&(!buff.acquired_axe.up&!buff.acquired_sword.up&!buff.acquired_wand.up)||!buff.prowl.up&!covenant.venthyr&!trinket.1.is.cache_of_acquired_treasures&(!buff.acquired_axe.up&!buff.acquired_sword.up&!buff.acquired_wand.up)\nactions.bear+=/potion,if=covenant.venthyr&buff.incarnation.remains>=24&buff.incarnation.remains<=25\nactions.bear+=/barkskin,if=tanking&buff.bear_form.up&set_bonus.tier28_4pc>0\nactions.bear+=/convoke_the_spirits,if=!druid.catweave_bear&!druid.owlweave_bear\nactions.bear+=/berserk_bear,if=(buff.ravenous_frenzy.up||!covenant.venthyr)\nactions.bear+=/incarnation,if=(buff.ravenous_frenzy.up||!covenant.venthyr)\nactions.bear+=/berserking,if=(buff.berserk_bear.up||buff.incarnation_guardian_of_ursoc.up)\nactions.bear+=/empower_bond\nactions.bear+=/adaptive_swarm,if=(!dot.adaptive_swarm_damage.ticking&!action.adaptive_swarm_damage.in_flight&(!dot.adaptive_swarm_heal.ticking||dot.adaptive_swarm_heal.remains>3)||dot.adaptive_swarm_damage.stack<3&dot.adaptive_swarm_damage.remains<5&dot.adaptive_swarm_damage.ticking)\nactions.bear+=/moonfire,if=buff.galactic_guardian.up&active_enemies<3\nactions.bear+=/thrash_bear,cycle_targets=1,if=refreshable||dot.thrash_bear.stack<3||(dot.thrash_bear.stack<4&runeforge.luffainfused_embrace.equipped)||active_enemies>=4||buff.berserk_bear.up&buff.berserk_bear.remains<=gcd+0.5\nactions.bear+=/mangle,if=rage.deficit>10&settings.mangle_more\nactions.bear+=/fleshcraft,if=soulbind.pustule_eruption.enabled&((cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0)&(dot.moonfire.remains>=3)&(buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&buff.galactic_guardian.down))||soulbind.volatile_solvent.enabled,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent&(cooldown.thrash_bear.remains>0&cooldown.mangle.remains>0)\nactions.bear+=/swipe,if=buff.incarnation_guardian_of_ursoc.down&buff.berserk_bear.down&active_enemies>=4\nactions.bear+=/maul,if=(buff.incarnation.up)&active_enemies<3&(buff.tooth_and_claw.stack>=2)||(buff.tooth_and_claw.up&buff.tooth_and_claw.remains<1.5)&active_enemies<3||(buff.berserk_bear.up||buff.incarnation.up)&(buff.savage_combatant.stack>=3)&active_enemies<3||!conduit.savage_combatant.enabled&(buff.berserk_bear.up||buff.incarnation.up)&active_enemies<3&!runeforge.ursocs_fury_remembered.equipped||(buff.savage_combatant.stack>=3)&active_enemies<3||!conduit.savage_combatant.enabled&active_enemies<3&(!buff.berserk_bear.up&!buff.incarnation.up)\nactions.bear+=/thrash_bear,if=(runeforge.ursocs_fury_remembered.equipped&conduit.savage_combatant.enabled&active_enemies>1)||(runeforge.ursocs_fury_remembered.equipped&!conduit.savage_combatant.enabled&active_enemies>=1)\nactions.bear+=/mangle,if=buff.incarnation.up&active_enemies<=3\nactions.bear+=/thrash_bear,if=active_enemies>1\nactions.bear+=/mangle\nactions.bear+=/pulverize,cycle_targets=1,if=dot.thrash_bear.stack>2\nactions.bear+=/thrash_bear\nactions.bear+=/swipe_bear\nactions.bear+=/ironfur,if=rage>=60&buff.ironfur.stack<2&conduit.savage_combatant.enabled&active_enemies<3||!conduit.savage_combatant.enabled&rage>=42&buff.ironfur.down&active_enemies<3||active_enemies>=3&rage>80&buff.ironfur.stack<7\n\nactions.mitigation=ironfur,if=incoming_damage_5s>ironfur_damage_threshold&buff.ironfur.remains<3*haste\nactions.mitigation+=/renewal,if=tanking&health.pct<65\nactions.mitigation+=/frenzied_regeneration,if=tanking&health.pct<65\nactions.mitigation+=/empower_bond,if=(!druid.catweave_bear&!druid.owlweave_bear)||active_enemies>=2\nactions.mitigation+=/barkskin,if=tanking&health.pct<75&incoming_damage_5s>0.1*health.max\nactions.mitigation+=/survival_instincts,if=buff.survival_instincts.down&buff.barkskin.down&health.pct<60&incoming_damage_5s>0.25*health.max\n\nactions.cooldowns=potion\nactions.cooldowns+=/blood_fury\nactions.cooldowns+=/berserking\nactions.cooldowns+=/arcane_torrent\nactions.cooldowns+=/lights_judgment\nactions.cooldowns+=/fireblood\nactions.cooldowns+=/ancestral_call\nactions.cooldowns+=/bristling_fur,if=buff.bear_form.up\nactions.cooldowns+=/incarnation,if=(dot.moonfire.ticking||active_enemies>1)&dot.thrash_bear.ticking\nactions.cooldowns+=/berserk\nactions.cooldowns+=/use_items\n\nactions.catweave=heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up&!buff.cat_form.up\nactions.catweave+=/prowl\nactions.catweave+=/cat_form,if=!buff.cat_form.up\nactions.catweave+=/rake,if=buff.prowl.up\nactions.catweave+=/heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up\nactions.catweave+=/empower_bond,if=druid.catweave_bear\nactions.catweave+=/rake,if=dot.rake.refreshable||energy<45\nactions.catweave+=/rip,if=dot.rip.refreshable&combo_points>=4\nactions.catweave+=/convoke_the_spirits,if=druid.catweave_bear\nactions.catweave+=/ferocious_bite,max_energy=1,if=combo_points>=4&energy>50\nactions.catweave+=/adaptive_swarm,if=(!dot.adaptive_swarm_damage.ticking&!action.adaptive_swarm_damage.in_flight&(!dot.adaptive_swarm_heal.ticking||dot.adaptive_swarm_heal.remains>3)||dot.adaptive_swarm_damage.stack<3&dot.adaptive_swarm_damage.remains<5&dot.adaptive_swarm_damage.ticking)\nactions.catweave+=/fleshcraft,if=soulbind.pustule_eruption.enabled&energy<35||soulbind.volatile_solvent.enabled,interrupt_immediate=1,interrupt_global=1,interrupt_if=soulbind.volatile_solvent&energy<35\nactions.catweave+=/swipe\nactions.catweave+=/rake,if=refreshable&combo_points<5\nactions.catweave+=/shred,if=combo_points<5\n\nactions.cconvoke=heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up&!buff.cat_form.up\nactions.cconvoke+=/cat_form,if=!buff.cat_form.up\nactions.cconvoke+=/convoke_the_spirits\n\nactions.oconvoke=heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up&!buff.moonkin_form.up\nactions.oconvoke+=/moonkin_form,if=!buff.moonkin_form.up\nactions.oconvoke+=/convoke_the_spirits,if=soulbind.first_strike.enabled&buff.first_strike.up\nactions.oconvoke+=/convoke_the_spirits,if=runeforge.legacy_of_the_sleeper.equipped\nactions.oconvoke+=/starfire,if=eclipse.any_next||eclipse.solar_next\nactions.oconvoke+=/wrath,if=eclipse.any_next||eclipse.lunar_next\nactions.oconvoke+=/convoke_the_spirits\n\nactions.owlweave=heart_of_the_wild,if=talent.heart_of_the_wild.enabled&!buff.heart_of_the_wild.up&!buff.moonkin_form.up\nactions.owlweave+=/moonkin_form,if=!buff.moonkin_form.up\nactions.owlweave+=/starsurge\nactions.owlweave+=/convoke_the_spirits,if=runeforge.legacy_of_the_sleeper.equipped\nactions.owlweave+=/convoke_the_spirits,if=soulbind.first_strike.enabled\nactions.owlweave+=/empower_bond,if=druid.owlweave_bear\nactions.owlweave+=/adaptive_swarm,if=(!dot.adaptive_swarm_damage.ticking&!action.adaptive_swarm_damage.in_flight&(!dot.adaptive_swarm_heal.ticking||dot.adaptive_swarm_heal.remains>3)||dot.adaptive_swarm_damage.stack<3&dot.adaptive_swarm_damage.remains<5&dot.adaptive_swarm_damage.ticking)\nactions.owlweave+=/sunfire,cycle_targets=1,if=refreshable\nactions.owlweave+=/moonfire,cycle_targets=1,if=refreshable||buff.galactic_guardian.up\nactions.owlweave+=/starfire,if=covenant.night_fae&eclipse.any_next\nactions.owlweave+=/wrath,if=!covenant.night_fae&eclipse.any_next\nactions.owlweave+=/convoke_the_spirits,if=(buff.eclipse_lunar.up||buff.eclipse_solar.up)\nactions.owlweave+=/starfire,if=(eclipse.in_lunar||eclipse.solar_next)||(eclipse.in_lunar&buff.starsurge_empowerment_lunar.up)\nactions.owlweave+=/wrath",
					["spec"] = 104,
				},
			},
		},
	},
}
